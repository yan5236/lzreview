{
  "version": 3,
  "sources": ["../src/web/embed.js", "../src/web/embed.css", "../src/database/db.js", "../src/utils/validation.js", "../src/utils/security.js", "../src/utils/response.js", "../src/notifiers/email.js", "../src/notifiers/telegram.js", "../src/services/notification.js", "../src/handlers/notifications.js", "../src/handlers/comments.js", "../src/handlers/whitelist.js", "../src/index.js"],
  "sourceRoot": "dist",
  "sourcesContent": ["const embedScript = `\n(function() {\n  'use strict';\n\n  // \u5934\u50CF\u5DE5\u5177\u51FD\u6570\n  function getQQAvatar(qq) {\n    if (!qq || !/^\\\\d+$/.test(qq)) {\n      return null;\n    }\n    return \\`https://q1.qlogo.cn/g?b=qq&nk=\\${qq}&s=100\\`;\n  }\n\n  function getGitHubStyleAvatar(seed) {\n    const hash = simpleHash(seed || 'anonymous');\n    return \\`https://api.dicebear.com/7.x/pixel-art/svg?seed=\\${hash}&size=100\\`;\n  }\n\n  function simpleHash(str) {\n    let hash = 0;\n    if (str.length === 0) return hash;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash;\n    }\n    return Math.abs(hash).toString();\n  }\n\n  function getAvatarUrl(authorName, authorEmail, authorQQ) {\n    if (authorQQ) {\n      const qqAvatar = getQQAvatar(authorQQ);\n      if (qqAvatar) {\n        return qqAvatar;\n      }\n    }\n    const seed = authorEmail || authorName || 'anonymous';\n    return getGitHubStyleAvatar(seed);\n  }\n\n  function preloadAvatar(url, fallbackUrl = null) {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => resolve(url);\n      img.onerror = () => {\n        if (fallbackUrl) {\n          const fallbackImg = new Image();\n          fallbackImg.onload = () => resolve(fallbackUrl);\n          fallbackImg.onerror = () => resolve(null);\n          fallbackImg.src = fallbackUrl;\n        } else {\n          resolve(null);\n        }\n      };\n      img.src = url;\n    });\n  }\n\n  // \u9ED8\u8BA4\u914D\u7F6E\n  const defaultConfig = {\n    apiUrl: '{{API_URL}}',\n    pageUrl: window.location.href,\n    placeholder: '\u8BF4\u70B9\u4EC0\u4E48\u5427...',\n    maxLength: 1000,\n    requireName: true,\n    requireEmail: false\n  };\n\n  // \u5408\u5E76\u7528\u6237\u914D\u7F6E\n  const config = Object.assign({}, defaultConfig, window.lzreviewConfig || {});\n\n  // \u8BC4\u8BBA\u7CFB\u7EDF\u7C7B\n  class LzReview {\n    constructor(config) {\n      this.config = config;\n      this.container = document.getElementById('lzreview-comments');\n      this.comments = [];\n      this.csrfToken = null;\n      \n      if (!this.container) {\n        console.error('lzreview: \u627E\u4E0D\u5230\u5BB9\u5668\u5143\u7D20 #lzreview-comments');\n        return;\n      }\n\n      this.init();\n    }\n\n    async init() {\n      this.injectStyles();\n      await this.loadCSRFToken();\n      await this.loadComments();\n      this.render();\n    }\n\n    injectStyles() {\n      if (document.getElementById('lzreview-styles')) return;\n\n      const styles = \\`\n        .lzreview-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n          max-width: 100%;\n          margin: 0;\n          color: #333;\n          line-height: 1.6;\n        }\n        .lzreview-form {\n          background: #f9f9f9;\n          padding: 20px;\n          border-radius: 8px;\n          margin-bottom: 30px;\n          border: 1px solid #e1e5e9;\n        }\n        .lzreview-form-row {\n          display: flex;\n          gap: 15px;\n          margin-bottom: 15px;\n        }\n        .lzreview-form-group {\n          flex: 1;\n        }\n        .lzreview-label {\n          display: block;\n          margin-bottom: 5px;\n          font-weight: 500;\n          color: #555;\n        }\n        .lzreview-input, .lzreview-textarea {\n          width: 100%;\n          padding: 10px;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          font-size: 14px;\n          font-family: inherit;\n          box-sizing: border-box;\n        }\n        .lzreview-textarea {\n          min-height: 100px;\n          max-height: 200px;\n          height: 100px;\n          resize: none;\n        }\n        .lzreview-button {\n          background: #007cba;\n          color: white;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 500;\n        }\n        .lzreview-button:hover { background: #005a87; }\n        .lzreview-button:disabled {\n          background: #ccc;\n          cursor: not-allowed;\n        }\n        .lzreview-comments-list {\n          margin-top: 30px;\n        }\n        .lzreview-comment {\n          border-bottom: 1px solid #eee;\n          padding: 20px 0;\n        }\n        .lzreview-comment:last-child { border-bottom: none; }\n        .lzreview-comment-header {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 10px;\n          font-size: 14px;\n          color: #666;\n        }\n        .lzreview-comment-author {\n          font-weight: 500;\n          color: #333;\n        }\n        .lzreview-comment-email {\n          font-weight: 400;\n          color: #666;\n          font-size: 12px;\n        }\n        .lzreview-avatar-preview {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 10px;\n        }\n        .lzreview-avatar-preview img {\n          width: 48px;\n          height: 48px;\n          border-radius: 50%;\n          border: 2px solid #ddd;\n          object-fit: cover;\n        }\n        .lzreview-comment-avatar {\n          width: 32px;\n          height: 32px;\n          border-radius: 50%;\n          border: 1px solid #ddd;\n          object-fit: cover;\n          margin-right: 10px;\n          flex-shrink: 0;\n        }\n        .lzreview-comment-header-with-avatar {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 10px;\n          font-size: 14px;\n          color: #666;\n        }\n        .lzreview-comment-author-info {\n          display: flex;\n          align-items: center;\n          flex: 1;\n        }\n        .lzreview-comment-actions {\n          margin-top: 8px;\n          margin-bottom: 10px;\n        }\n        .lzreview-reply-button {\n          background: transparent;\n          border: 1px solid #ddd;\n          color: #666;\n          padding: 4px 12px;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 12px;\n          transition: all 0.2s ease;\n        }\n        .lzreview-reply-button:hover {\n          background: #f5f5f5;\n          border-color: #007cba;\n          color: #007cba;\n        }\n        .lzreview-reply-form {\n          margin-top: 10px;\n          padding: 15px;\n          background: #f9f9f9;\n          border-radius: 6px;\n          border: 1px solid #e1e5e9;\n        }\n        .lzreview-reply-form .lzreview-textarea {\n          height: 80px;\n          margin-bottom: 10px;\n        }\n        .lzreview-reply-actions {\n          display: flex;\n          gap: 10px;\n          align-items: center;\n        }\n        .lzreview-button-small {\n          padding: 6px 12px;\n          font-size: 12px;\n        }\n        .lzreview-button-cancel {\n          background: #6c757d;\n          color: white;\n          padding: 6px 12px;\n          font-size: 12px;\n        }\n        .lzreview-button-cancel:hover {\n          background: #5a6268;\n        }\n        .lzreview-comment-content {\n          margin-bottom: 10px;\n          white-space: pre-wrap;\n          word-wrap: break-word;\n        }\n        .lzreview-replies {\n          margin-left: 20px;\n          margin-top: 15px;\n          border-left: 3px solid #f0f0f0;\n          padding-left: 15px;\n        }\n        .lzreview-error {\n          background: #f8d7da;\n          color: #721c24;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 15px;\n          border: 1px solid #f5c6cb;\n        }\n        .lzreview-success {\n          background: #d4edda;\n          color: #155724;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 15px;\n          border: 1px solid #c3e6cb;\n        }\n        .lzreview-loading {\n          text-align: center;\n          padding: 20px;\n          color: #666;\n        }\n        .lzreview-char-count {\n          text-align: right;\n          font-size: 12px;\n          color: #666;\n          margin-top: 5px;\n        }\n        .lzreview-char-count.warning { color: #e74c3c; }\n        @media (max-width: 768px) {\n          .lzreview-form-row { flex-direction: column; }\n          .lzreview-replies { margin-left: 10px; padding-left: 10px; }\n        }\n      \\`;\n\n      const styleEl = document.createElement('style');\n      styleEl.id = 'lzreview-styles';\n      styleEl.textContent = styles;\n      document.head.appendChild(styleEl);\n    }\n\n    async loadCSRFToken() {\n      try {\n        const response = await fetch(\\`\\${this.config.apiUrl}/api/comments/csrf-token\\`);\n        const data = await response.json();\n        if (data.success) {\n          this.csrfToken = data.data.csrfToken;\n        }\n      } catch (error) {\n        console.error('\u52A0\u8F7DCSRF\u4EE4\u724C\u5931\u8D25:', error);\n      }\n    }\n\n    async loadComments() {\n      try {\n        const response = await fetch(\\`\\${this.config.apiUrl}/api/comments?page=\\${encodeURIComponent(this.config.pageUrl)}\\`);\n        const data = await response.json();\n        \n        if (data.success) {\n          this.comments = data.data.comments;\n        } else {\n          console.error('\u52A0\u8F7D\u8BC4\u8BBA\u5931\u8D25:', data.message);\n          // \u5982\u679C\u662F\u767D\u540D\u5355\u9650\u5236\uFF0C\u663E\u793A\u9519\u8BEF\u4FE1\u606F\n          if (response.status === 403) {\n            this.showWhitelistError(data.message);\n          }\n        }\n      } catch (error) {\n        console.error('\u52A0\u8F7D\u8BC4\u8BBA\u5931\u8D25:', error);\n      }\n    }\n\n    render() {\n      this.container.innerHTML = \\`\n        <div class=\"lzreview-container\">\n          <div class=\"lzreview-form\">\n            <h3 style=\"margin-top: 0;\">\u53D1\u8868\u8BC4\u8BBA</h3>\n            <div id=\"lzreview-message\"></div>\n            <form id=\"lzreview-comment-form\">\n              <div class=\"lzreview-form-row\">\n                <div class=\"lzreview-form-group\">\n                  <label class=\"lzreview-label\" for=\"author-name\">\u59D3\u540D *</label>\n                  <input type=\"text\" id=\"author-name\" class=\"lzreview-input\" required maxlength=\"50\">\n                </div>\n                <div class=\"lzreview-form-group\">\n                  <label class=\"lzreview-label\" for=\"author-email\">\u90AE\u7BB1\uFF08\u53EF\u9009\uFF09</label>\n                  <input type=\"email\" id=\"author-email\" class=\"lzreview-input\">\n                </div>\n              </div>\n              <div class=\"lzreview-form-row\">\n                <div class=\"lzreview-form-group\">\n                  <label class=\"lzreview-label\" for=\"author-qq\">QQ\u53F7\uFF08\u53EF\u9009\uFF09</label>\n                  <input type=\"text\" id=\"author-qq\" class=\"lzreview-input\" placeholder=\"\u586B\u5199QQ\u53F7\u5C06\u4F7F\u7528QQ\u5934\u50CF\">\n                </div>\n                <div class=\"lzreview-form-group\">\n                  <div class=\"lzreview-avatar-preview\">\n                    <img id=\"avatar-preview\" src=\"\" alt=\"\u5934\u50CF\u9884\u89C8\" style=\"display: none;\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"lzreview-form-group\">\n                <label class=\"lzreview-label\" for=\"comment-content\">\u8BC4\u8BBA\u5185\u5BB9 *</label>\n                <textarea id=\"comment-content\" class=\"lzreview-textarea\" placeholder=\"\\${this.config.placeholder}\" required maxlength=\"\\${this.config.maxLength}\"></textarea>\n                <div class=\"lzreview-char-count\" id=\"char-count\">0/\\${this.config.maxLength}</div>\n              </div>\n              <button type=\"submit\" class=\"lzreview-button\" id=\"submit-button\">\u53D1\u5E03\u8BC4\u8BBA</button>\n            </form>\n          </div>\n          <div class=\"lzreview-comments-list\">\n            <h3>\u8BC4\u8BBA\u5217\u8868 (\\${this.comments.length})</h3>\n            <div id=\"comments-container\">\n              \\${this.comments.length > 0 ? this.renderComments(this.comments) : '<p style=\"color: #666; text-align: center; padding: 20px;\">\u6682\u65E0\u8BC4\u8BBA\uFF0C\u5FEB\u6765\u53D1\u8868\u7B2C\u4E00\u6761\u8BC4\u8BBA\u5427\uFF01</p>'}\n            </div>\n          </div>\n        </div>\n      \\`;\n\n      this.bindEvents();\n    }\n\n    renderComments(comments) {\n      return comments.map(comment => {\n        const avatarUrl = getAvatarUrl(comment.author_name, comment.author_email, comment.author_qq);\n        return \\`\n        <div class=\"lzreview-comment\">\n          <div class=\"lzreview-comment-header-with-avatar\">\n            <div class=\"lzreview-comment-author-info\">\n              <img class=\"lzreview-comment-avatar\" src=\"\\${avatarUrl}\" alt=\"\\${this.escapeHtml(comment.author_name)}\u7684\u5934\u50CF\">\n              <span class=\"lzreview-comment-author\">\n                \\${this.escapeHtml(comment.author_name)}\n                \\${comment.author_email ? \\`<span class=\"lzreview-comment-email\"> (\\${this.escapeHtml(comment.author_email)})</span>\\` : ''}\n              </span>\n            </div>\n            <span class=\"lzreview-comment-time\">\\${this.formatDate(comment.created_at)}</span>\n          </div>\n          <div class=\"lzreview-comment-content\">\\${this.escapeHtml(comment.content)}</div>\n          <div class=\"lzreview-comment-actions\">\n            <button class=\"lzreview-reply-button\" onclick=\"toggleReplyForm(\\${comment.id})\">\u56DE\u590D</button>\n          </div>\n          <div id=\"reply-form-\\${comment.id}\" class=\"lzreview-reply-form\" style=\"display: none;\">\n            <div class=\"lzreview-form-row\">\n              <div class=\"lzreview-form-group\">\n                <label class=\"lzreview-label\">\u59D3\u540D *</label>\n                <input type=\"text\" id=\"reply-author-name-\\${comment.id}\" class=\"lzreview-input\" required maxlength=\"50\" placeholder=\"\u8BF7\u8F93\u5165\u60A8\u7684\u59D3\u540D\">\n              </div>\n              <div class=\"lzreview-form-group\">\n                <label class=\"lzreview-label\">\u90AE\u7BB1\uFF08\u53EF\u9009\uFF09</label>\n                <input type=\"email\" id=\"reply-author-email-\\${comment.id}\" class=\"lzreview-input\" placeholder=\"\u8BF7\u8F93\u5165\u60A8\u7684\u90AE\u7BB1\">\n              </div>\n            </div>\n            <div class=\"lzreview-form-row\">\n              <div class=\"lzreview-form-group\">\n                <label class=\"lzreview-label\">QQ\u53F7\uFF08\u53EF\u9009\uFF09</label>\n                <input type=\"text\" id=\"reply-author-qq-\\${comment.id}\" class=\"lzreview-input\" placeholder=\"\u586B\u5199QQ\u53F7\u5C06\u4F7F\u7528QQ\u5934\u50CF\">\n              </div>\n            </div>\n            <textarea id=\"reply-content-\\${comment.id}\" class=\"lzreview-textarea\" placeholder=\"\u56DE\u590D \\${this.escapeHtml(comment.author_name)}...\" maxlength=\"\\${this.config.maxLength}\"></textarea>\n            <div class=\"lzreview-reply-actions\">\n              <button class=\"lzreview-button lzreview-button-small\" onclick=\"submitReply(\\${comment.id})\">\u53D1\u5E03\u56DE\u590D</button>\n              <button class=\"lzreview-button lzreview-button-cancel\" onclick=\"toggleReplyForm(\\${comment.id})\">\u53D6\u6D88</button>\n            </div>\n          </div>\n          \\${comment.replies && comment.replies.length > 0 ? \\`\n            <div class=\"lzreview-replies\">\n              \\${this.renderComments(comment.replies)}\n            </div>\n          \\` : ''}\n        </div>\n        \\`;\n      }).join('');\n    }\n\n    bindEvents() {\n      const form = document.getElementById('lzreview-comment-form');\n      const contentTextarea = document.getElementById('comment-content');\n      const charCount = document.getElementById('char-count');\n      const submitButton = document.getElementById('submit-button');\n      const authorNameInput = document.getElementById('author-name');\n      const authorEmailInput = document.getElementById('author-email');\n      const authorQQInput = document.getElementById('author-qq');\n      const avatarPreview = document.getElementById('avatar-preview');\n\n      // \u5934\u50CF\u9884\u89C8\u66F4\u65B0\u51FD\u6570\n      const updateAvatarPreview = async () => {\n        const name = authorNameInput.value.trim();\n        const email = authorEmailInput.value.trim();\n        const qq = authorQQInput.value.trim();\n        \n        if (name || email || qq) {\n          const avatarUrl = getAvatarUrl(name, email, qq);\n          const validUrl = await preloadAvatar(avatarUrl);\n          if (validUrl) {\n            avatarPreview.src = validUrl;\n            avatarPreview.style.display = 'block';\n          } else {\n            avatarPreview.style.display = 'none';\n          }\n        } else {\n          avatarPreview.style.display = 'none';\n        }\n      };\n\n      // \u76D1\u542C\u8F93\u5165\u53D8\u5316\u4EE5\u66F4\u65B0\u5934\u50CF\u9884\u89C8\n      authorNameInput.addEventListener('input', updateAvatarPreview);\n      authorEmailInput.addEventListener('input', updateAvatarPreview);\n      authorQQInput.addEventListener('input', updateAvatarPreview);\n\n      // \u5B57\u7B26\u8BA1\u6570\n      contentTextarea.addEventListener('input', () => {\n        const length = contentTextarea.value.length;\n        charCount.textContent = \\`\\${length}/\\${this.config.maxLength}\\`;\n        charCount.className = \\`lzreview-char-count \\${length > this.config.maxLength * 0.9 ? 'warning' : ''}\\`;\n      });\n\n      // \u8868\u5355\u63D0\u4EA4\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        await this.submitComment();\n      });\n\n      // \u521D\u59CB\u5316\u5934\u50CF\u9884\u89C8\n      updateAvatarPreview();\n    }\n\n    async submitComment() {\n      const authorName = document.getElementById('author-name').value.trim();\n      const authorEmail = document.getElementById('author-email').value.trim();\n      const authorQQ = document.getElementById('author-qq').value.trim();\n      const content = document.getElementById('comment-content').value.trim();\n      const submitButton = document.getElementById('submit-button');\n      const messageEl = document.getElementById('lzreview-message');\n\n      // \u6E05\u9664\u4E4B\u524D\u7684\u6D88\u606F\n      messageEl.innerHTML = '';\n\n      // \u9A8C\u8BC1\n      if (!authorName || !content) {\n        this.showMessage('\u8BF7\u586B\u5199\u5FC5\u586B\u5B57\u6BB5', 'error');\n        return;\n      }\n\n      if (content.length > this.config.maxLength) {\n        this.showMessage(\\`\u8BC4\u8BBA\u5185\u5BB9\u4E0D\u80FD\u8D85\u8FC7\\${this.config.maxLength}\u4E2A\u5B57\u7B26\\`, 'error');\n        return;\n      }\n\n      if (this.config.requireEmail && !authorEmail) {\n        this.showMessage('\u8BF7\u586B\u5199\u90AE\u7BB1\u5730\u5740', 'error');\n        return;\n      }\n\n      // \u63D0\u4EA4\u8BC4\u8BBA\n      submitButton.disabled = true;\n      submitButton.textContent = '\u53D1\u5E03\u4E2D...';\n\n      try {\n        const payload = {\n          pageUrl: this.config.pageUrl,\n          authorName,\n          authorEmail: authorEmail || null,\n          authorQQ: authorQQ || null,\n          content,\n          csrfToken: this.csrfToken\n        };\n        const response = await fetch(\\`\\${this.config.apiUrl}/api/comments\\`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload)\n        });\n\n        const data = await response.json();\n        \n        if (data.success) {\n          this.showMessage('\u8BC4\u8BBA\u53D1\u5E03\u6210\u529F\uFF01', 'success');\n          document.getElementById('lzreview-comment-form').reset();\n          document.getElementById('char-count').textContent = \\`0/\\${this.config.maxLength}\\`;\n          \n          // \u91CD\u65B0\u52A0\u8F7D\u8BC4\u8BBA\n          await this.loadComments();\n          this.updateCommentsList();\n        } else {\n          console.error('Server error:', data);\n          // \u5982\u679C\u662F\u767D\u540D\u5355\u9650\u5236\uFF0C\u663E\u793A\u7279\u6B8A\u9519\u8BEF\u9875\u9762\n          if (response.status === 403 && data.message.includes('\u767D\u540D\u5355')) {\n            this.showWhitelistError(data.message);\n            return;\n          }\n          this.showMessage(data.message || '\u8BC4\u8BBA\u53D1\u5E03\u5931\u8D25', 'error');\n        }\n      } catch (error) {\n        console.error('\u63D0\u4EA4\u8BC4\u8BBA\u5931\u8D25:', error);\n        this.showMessage('\u7F51\u7EDC\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 'error');\n      } finally {\n        submitButton.disabled = false;\n        submitButton.textContent = '\u53D1\u5E03\u8BC4\u8BBA';\n      }\n    }\n\n    updateCommentsList() {\n      const container = document.getElementById('comments-container');\n      container.innerHTML = this.comments.length > 0 \n        ? this.renderComments(this.comments)\n        : '<p style=\"color: #666; text-align: center; padding: 20px;\">\u6682\u65E0\u8BC4\u8BBA\uFF0C\u5FEB\u6765\u53D1\u8868\u7B2C\u4E00\u6761\u8BC4\u8BBA\u5427\uFF01</p>';\n    }\n\n    showMessage(message, type) {\n      const messageEl = document.getElementById('lzreview-message');\n      // \u5B89\u5168\u7684DOM\u64CD\u4F5C\uFF0C\u907F\u514DXSS\n      messageEl.innerHTML = '';\n      const div = document.createElement('div');\n      div.className = \\`lzreview-\\${type}\\`;\n      div.textContent = message; // \u4F7F\u7528textContent\u800C\u4E0D\u662FinnerHTML\n      messageEl.appendChild(div);\n    }\n\n    showWhitelistError(message) {\n      // \u5B89\u5168\u7684DOM\u64CD\u4F5C\uFF0C\u907F\u514DXSS\n      this.container.innerHTML = '';\n      \n      const container = document.createElement('div');\n      container.className = 'lzreview-container';\n      \n      const errorDiv = document.createElement('div');\n      errorDiv.className = 'lzreview-error';\n      errorDiv.style.cssText = 'text-align: center; padding: 40px; margin: 20px 0;';\n      \n      const title = document.createElement('h3');\n      title.style.cssText = 'color: #721c24; margin-bottom: 15px;';\n      title.textContent = '\u8BC4\u8BBA\u7CFB\u7EDF\u8BBF\u95EE\u53D7\u9650';\n      \n      const messageP = document.createElement('p');\n      messageP.style.cssText = 'margin-bottom: 20px; font-size: 16px;';\n      messageP.textContent = message;\n      \n      const helpP = document.createElement('p');\n      helpP.style.cssText = 'color: #6c757d; font-size: 14px;';\n      helpP.textContent = '\u5982\u9700\u4F7F\u7528\u8BC4\u8BBA\u529F\u80FD\uFF0C\u8BF7\u8054\u7CFB\u7F51\u7AD9\u7BA1\u7406\u5458\u5C06\u5F53\u524D\u57DF\u540D\u6DFB\u52A0\u5230\u767D\u540D\u5355\u4E2D\u3002';\n      \n      errorDiv.appendChild(title);\n      errorDiv.appendChild(messageP);\n      errorDiv.appendChild(helpP);\n      container.appendChild(errorDiv);\n      this.container.appendChild(container);\n    }\n\n    escapeHtml(text) {\n      const div = document.createElement('div');\n      div.textContent = text;\n      return div.innerHTML;\n    }\n\n    formatDate(dateString) {\n      // \u6570\u636E\u5E93\u5B58\u50A8\u7684\u5DF2\u7ECF\u662F\u4E2D\u56FD\u65F6\u95F4\uFF0C\u76F4\u63A5\u89E3\u6790\u5373\u53EF\n      const date = new Date(dateString.replace(' ', 'T'));\n      const now = new Date();\n      const diff = now - date;\n      \n      if (diff < 60000) return '\u521A\u521A';\n      if (diff < 3600000) return \\`\\${Math.floor(diff / 60000)}\u5206\u949F\u524D\\`;\n      if (diff < 86400000) return \\`\\${Math.floor(diff / 3600000)}\u5C0F\u65F6\u524D\\`;\n      if (diff < 2592000000) return \\`\\${Math.floor(diff / 86400000)}\u5929\u524D\\`;\n      \n      return date.toLocaleDateString('zh-CN');\n    }\n\n    async submitReply(parentId) {\n      const replyContent = document.getElementById(\\`reply-content-\\${parentId}\\`).value.trim();\n      const authorName = document.getElementById(\\`reply-author-name-\\${parentId}\\`).value.trim();\n      const authorEmail = document.getElementById(\\`reply-author-email-\\${parentId}\\`).value.trim();\n      const authorQQ = document.getElementById(\\`reply-author-qq-\\${parentId}\\`).value.trim();\n      \n      if (!authorName) {\n        this.showMessage('\u8BF7\u586B\u5199\u59D3\u540D', 'error');\n        return;\n      }\n      \n      if (!replyContent) {\n        this.showMessage('\u8BF7\u586B\u5199\u56DE\u590D\u5185\u5BB9', 'error');\n        return;\n      }\n\n      try {\n        const payload = {\n          pageUrl: this.config.pageUrl,\n          authorName,\n          authorEmail: authorEmail || null,\n          authorQQ: authorQQ || null,\n          content: replyContent,\n          parentId: parentId,\n          csrfToken: this.csrfToken\n        };\n\n        const response = await fetch(\\`\\${this.config.apiUrl}/api/comments\\`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload)\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n          this.showMessage('\u56DE\u590D\u53D1\u5E03\u6210\u529F\uFF01', 'success');\n          document.getElementById(\\`reply-content-\\${parentId}\\`).value = '';\n          document.getElementById(\\`reply-author-name-\\${parentId}\\`).value = '';\n          document.getElementById(\\`reply-author-email-\\${parentId}\\`).value = '';\n          document.getElementById(\\`reply-author-qq-\\${parentId}\\`).value = '';\n          document.getElementById(\\`reply-form-\\${parentId}\\`).style.display = 'none';\n          \n          // \u91CD\u65B0\u52A0\u8F7D\u8BC4\u8BBA\n          await this.loadComments();\n          this.updateCommentsList();\n        } else {\n          // \u5982\u679C\u662F\u767D\u540D\u5355\u9650\u5236\uFF0C\u663E\u793A\u7279\u6B8A\u9519\u8BEF\u9875\u9762\n          if (response.status === 403 && data.message.includes('\u767D\u540D\u5355')) {\n            this.showWhitelistError(data.message);\n            return;\n          }\n          this.showMessage(data.message || '\u56DE\u590D\u53D1\u5E03\u5931\u8D25', 'error');\n        }\n      } catch (error) {\n        console.error('\u63D0\u4EA4\u56DE\u590D\u5931\u8D25:', error);\n        this.showMessage('\u7F51\u7EDC\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 'error');\n      }\n    }\n\n    toggleReplyForm(commentId) {\n      const replyForm = document.getElementById(\\`reply-form-\\${commentId}\\`);\n      if (replyForm.style.display === 'none') {\n        replyForm.style.display = 'block';\n      } else {\n        replyForm.style.display = 'none';\n      }\n    }\n  }\n\n  // \u5168\u5C40\u53D8\u91CF\u5B58\u50A8\u5B9E\u4F8B\n  let lzReviewInstance = null;\n\n  // \u5168\u5C40\u51FD\u6570\n  window.toggleReplyForm = function(commentId) {\n    if (lzReviewInstance) {\n      lzReviewInstance.toggleReplyForm(commentId);\n    }\n  };\n\n  window.submitReply = function(parentId) {\n    if (lzReviewInstance) {\n      lzReviewInstance.submitReply(parentId);\n    }\n  };\n\n  // \u521D\u59CB\u5316\u8BC4\u8BBA\u7CFB\u7EDF\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      lzReviewInstance = new LzReview(config);\n    });\n  } else {\n    lzReviewInstance = new LzReview(config);\n  }\n})();\n`;\n\nexport default embedScript;", "const embedCSS = `\n/* lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u6837\u5F0F */\n.lzreview-container {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  max-width: 100%;\n  margin: 0;\n  color: #333;\n  line-height: 1.6;\n  font-size: 14px;\n}\n\n.lzreview-form {\n  background: #f9f9f9;\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 30px;\n  border: 1px solid #e1e5e9;\n}\n\n.lzreview-form h3 {\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: #2c3e50;\n}\n\n.lzreview-form-row {\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n}\n\n.lzreview-form-group {\n  flex: 1;\n}\n\n.lzreview-label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: 500;\n  color: #555;\n}\n\n.lzreview-input, .lzreview-textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n  font-family: inherit;\n  box-sizing: border-box;\n  transition: border-color 0.2s ease;\n}\n\n.lzreview-input:focus, .lzreview-textarea:focus {\n  outline: none;\n  border-color: #007cba;\n  box-shadow: 0 0 0 2px rgba(0, 124, 186, 0.1);\n}\n\n.lzreview-textarea {\n  min-height: 100px;\n  max-height: 200px;\n  height: 100px;\n  resize: none;\n  font-family: inherit;\n}\n\n.lzreview-button {\n  background: #007cba;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: background-color 0.2s ease;\n}\n\n.lzreview-button:hover {\n  background: #005a87;\n}\n\n.lzreview-button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n.lzreview-comments-list {\n  margin-top: 30px;\n}\n\n.lzreview-comments-list h3 {\n  margin-bottom: 20px;\n  color: #2c3e50;\n}\n\n.lzreview-comment {\n  border-bottom: 1px solid #eee;\n  padding: 20px 0;\n}\n\n.lzreview-comment:last-child {\n  border-bottom: none;\n}\n\n.lzreview-comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n.lzreview-comment-author {\n  font-weight: 500;\n  color: #333;\n}\n\n.lzreview-comment-email {\n  font-weight: 400;\n  color: #666;\n  font-size: 12px;\n}\n\n.lzreview-avatar-preview {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n}\n\n.lzreview-avatar-preview img {\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  border: 2px solid #ddd;\n  object-fit: cover;\n}\n\n.lzreview-comment-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1px solid #ddd;\n  object-fit: cover;\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.lzreview-comment-header-with-avatar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n.lzreview-comment-author-info {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.lzreview-comment-actions {\n  margin-top: 8px;\n  margin-bottom: 10px;\n}\n\n.lzreview-reply-button {\n  background: transparent;\n  border: 1px solid #ddd;\n  color: #666;\n  padding: 4px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  transition: all 0.2s ease;\n}\n\n.lzreview-reply-button:hover {\n  background: #f5f5f5;\n  border-color: #007cba;\n  color: #007cba;\n}\n\n.lzreview-reply-form {\n  margin-top: 10px;\n  padding: 15px;\n  background: #f9f9f9;\n  border-radius: 6px;\n  border: 1px solid #e1e5e9;\n}\n\n.lzreview-reply-form .lzreview-textarea {\n  height: 80px;\n  margin-bottom: 10px;\n}\n\n.lzreview-reply-actions {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.lzreview-button-small {\n  padding: 6px 12px;\n  font-size: 12px;\n}\n\n.lzreview-button-cancel {\n  background: #6c757d;\n  color: white;\n  padding: 6px 12px;\n  font-size: 12px;\n}\n\n.lzreview-button-cancel:hover {\n  background: #5a6268;\n}\n\n.lzreview-comment-time {\n  font-size: 12px;\n}\n\n.lzreview-comment-content {\n  margin-bottom: 10px;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  line-height: 1.6;\n}\n\n.lzreview-replies {\n  margin-left: 20px;\n  margin-top: 15px;\n  border-left: 3px solid #f0f0f0;\n  padding-left: 15px;\n}\n\n.lzreview-error {\n  background: #f8d7da;\n  color: #721c24;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  border: 1px solid #f5c6cb;\n}\n\n.lzreview-success {\n  background: #d4edda;\n  color: #155724;\n  padding: 10px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  border: 1px solid #c3e6cb;\n}\n\n.lzreview-loading {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.lzreview-char-count {\n  text-align: right;\n  font-size: 12px;\n  color: #666;\n  margin-top: 5px;\n}\n\n.lzreview-char-count.warning {\n  color: #e74c3c;\n}\n\n/* \u54CD\u5E94\u5F0F\u8BBE\u8BA1 */\n@media (max-width: 768px) {\n  .lzreview-form {\n    padding: 15px;\n    margin-bottom: 20px;\n  }\n  \n  .lzreview-form-row {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .lzreview-replies {\n    margin-left: 10px;\n    padding-left: 10px;\n  }\n  \n  .lzreview-comment {\n    padding: 15px 0;\n  }\n  \n  .lzreview-comment-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n  }\n}\n\n@media (max-width: 480px) {\n  .lzreview-container {\n    font-size: 13px;\n  }\n  \n  .lzreview-form {\n    padding: 10px;\n  }\n  \n  .lzreview-input, .lzreview-textarea {\n    padding: 8px;\n  }\n  \n  .lzreview-button {\n    padding: 8px 16px;\n    width: 100%;\n  }\n}\n\n/* \u6DF1\u8272\u6A21\u5F0F\u652F\u6301 */\n@media (prefers-color-scheme: dark) {\n  .lzreview-container {\n    color: #e0e0e0;\n  }\n  \n  .lzreview-form {\n    background: #2a2a2a;\n    border-color: #404040;\n  }\n  \n  .lzreview-form h3,\n  .lzreview-comments-list h3 {\n    color: #f0f0f0;\n  }\n  \n  .lzreview-label {\n    color: #d0d0d0;\n  }\n  \n  .lzreview-input, .lzreview-textarea {\n    background: #1a1a1a;\n    border-color: #404040;\n    color: #e0e0e0;\n  }\n  \n  .lzreview-input:focus, .lzreview-textarea:focus {\n    border-color: #4a9eff;\n    box-shadow: 0 0 0 2px rgba(74, 158, 255, 0.1);\n  }\n  \n  .lzreview-comment {\n    border-bottom-color: #404040;\n  }\n  \n  .lzreview-comment-author {\n    color: #f0f0f0;\n  }\n  \n  .lzreview-comment-header {\n    color: #b0b0b0;\n  }\n  \n  .lzreview-replies {\n    border-left-color: #404040;\n  }\n}\n`;\n\nexport default embedCSS;", "export class DatabaseService {\n  constructor(db) {\n    this.db = db;\n  }\n\n  async getComments(pageUrl, limit = 50, offset = 0) {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT \n          id, page_url, author_name, author_email, author_qq, content, created_at, parent_id,\n          CASE \n            WHEN author_email IS NOT NULL THEN 1 \n            ELSE 0 \n          END as has_email\n        FROM comments \n        WHERE page_url = ? AND is_approved = 1 \n        ORDER BY created_at DESC \n        LIMIT ? OFFSET ?\n      `);\n      const result = await stmt.bind(pageUrl, limit, offset).all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getComments error:', error);\n      return [];\n    }\n  }\n\n  async addComment(commentData) {\n    try {\n      const { pageUrl, authorName, authorEmail, authorQQ, content, ipAddress, userAgent, parentId } = commentData;\n      \n      // \u6570\u636E\u9A8C\u8BC1\n      if (!pageUrl || !authorName || !content) {\n        throw new Error('\u5FC5\u8981\u5B57\u6BB5\u4E0D\u80FD\u4E3A\u7A7A');\n      }\n      \n      // \u957F\u5EA6\u9650\u5236\u9A8C\u8BC1\n      if (authorName.length > 50 || content.length > 1000) {\n        throw new Error('\u5B57\u6BB5\u957F\u5EA6\u8D85\u51FA\u9650\u5236');\n      }\n      \n      if (authorEmail && authorEmail.length > 254) {\n        throw new Error('\u90AE\u7BB1\u5730\u5740\u8FC7\u957F');\n      }\n      \n      if (authorQQ && authorQQ.length > 15) {\n        throw new Error('QQ\u53F7\u8FC7\u957F');\n      }\n      \n      console.log('Attempting to insert comment:', { pageUrl, authorName, content: content.substring(0, 50) + '...' });\n      \n      // \u4F7F\u7528\u4E2D\u56FD\u65F6\u95F4 (UTC+8)\n      const chinaTime = new Date(Date.now() + 8 * 60 * 60 * 1000).toISOString().replace('T', ' ').replace('Z', '');\n      \n      const stmt = this.db.prepare(`\n        INSERT INTO comments (page_url, author_name, author_email, author_qq, content, ip_address, user_agent, parent_id, created_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `);\n      \n      const result = await stmt.bind(\n        pageUrl, \n        authorName, \n        authorEmail || null, \n        authorQQ || null,\n        content, \n        ipAddress, \n        userAgent, \n        parentId || null,\n        chinaTime\n      ).run();\n      \n      console.log('Insert result - ID:', result.meta.last_row_id);\n      return result.meta.last_row_id;\n    } catch (error) {\n      console.error('Database addComment error:', error.message);\n      throw new Error(`\u6570\u636E\u5E93\u9519\u8BEF\uFF1A${error.message}`);\n    }\n  }\n\n  async deleteComment(commentId, adminToken) {\n    if (!this.isValidAdmin(adminToken)) {\n      throw new Error('Unauthorized');\n    }\n    \n    const stmt = this.db.prepare('DELETE FROM comments WHERE id = ?');\n    const result = await stmt.bind(commentId).run();\n    return result.meta.changes > 0;\n  }\n\n  async getCommentCount(pageUrl) {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT COUNT(*) as count \n        FROM comments \n        WHERE page_url = ? AND is_approved = 1\n      `);\n      const result = await stmt.bind(pageUrl).first();\n      return result?.count || 0;\n    } catch (error) {\n      console.error('Database getCommentCount error:', error);\n      return 0;\n    }\n  }\n\n  isValidAdmin(token) {\n    if (!token || typeof token !== 'string') {\n      return false;\n    }\n    \n    if (!this.adminToken || typeof this.adminToken !== 'string') {\n      return false;\n    }\n    \n    // \u4F7F\u7528\u5E38\u91CF\u65F6\u95F4\u6BD4\u8F83\u9632\u6B62\u65F6\u5E8F\u653B\u51FB\n    return this.constantTimeCompare(token, this.adminToken);\n  }\n  \n  // \u5E38\u91CF\u65F6\u95F4\u6BD4\u8F83\u51FD\u6570\n  constantTimeCompare(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    \n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n      result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n    }\n    \n    return result === 0;\n  }\n\n  setAdminToken(token) {\n    this.adminToken = token;\n  }\n\n  // \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u6240\u6709\u8BC4\u8BBA\n  async getAllComments() {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT \n          id, page_url, author_name, author_email, author_qq, content, created_at, parent_id,\n          CASE \n            WHEN author_email IS NOT NULL THEN 1 \n            ELSE 0 \n          END as has_email\n        FROM comments \n        ORDER BY created_at DESC\n      `);\n      const result = await stmt.all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getAllComments error:', error);\n      return [];\n    }\n  }\n\n  // \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\n  async getStats() {\n    try {\n      const totalStmt = this.db.prepare('SELECT COUNT(*) as total FROM comments');\n      const totalResult = await totalStmt.first();\n      \n      const todayStmt = this.db.prepare(`\n        SELECT COUNT(*) as today \n        FROM comments \n        WHERE DATE(created_at) = DATE('now', '+8 hours')\n      `);\n      const todayResult = await todayStmt.first();\n      \n      const pagesStmt = this.db.prepare('SELECT COUNT(DISTINCT page_url) as pages FROM comments');\n      const pagesResult = await pagesStmt.first();\n      \n      const whitelistStmt = this.db.prepare('SELECT COUNT(*) as whitelist FROM whitelist');\n      const whitelistResult = await whitelistStmt.first();\n      \n      return {\n        total: totalResult?.total || 0,\n        today: todayResult?.today || 0,\n        pages: pagesResult?.pages || 0,\n        whitelist: whitelistResult?.whitelist || 0\n      };\n    } catch (error) {\n      console.error('Database getStats error:', error);\n      return { total: 0, today: 0, pages: 0, whitelist: 0 };\n    }\n  }\n\n  // \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u9875\u9762\u5217\u8868\n  async getPages() {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT \n          page_url,\n          COUNT(*) as comment_count,\n          MAX(created_at) as latest_comment\n        FROM comments \n        GROUP BY page_url \n        ORDER BY latest_comment DESC\n      `);\n      const result = await stmt.all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getPages error:', error);\n      return [];\n    }\n  }\n\n  // \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u6279\u91CF\u5220\u9664\u8BC4\u8BBA\n  async batchDeleteComments(ids) {\n    try {\n      // \u6570\u636E\u9A8C\u8BC1\n      if (!Array.isArray(ids) || ids.length === 0) {\n        throw new Error('\u65E0\u6548\u7684ID\u5217\u8868');\n      }\n      \n      // \u9650\u5236\u6279\u91CF\u5220\u9664\u6570\u91CF\u9632\u6B62\u6EE5\u7528\n      if (ids.length > 100) {\n        throw new Error('\u6279\u91CF\u5220\u9664\u6570\u91CF\u8FC7\u591A\uFF0C\u6700\u591A100\u6761');\n      }\n      \n      // \u9A8C\u8BC1\u6240\u6709ID\u90FD\u662F\u6570\u5B57\n      const validIds = ids.filter(id => Number.isInteger(id) && id > 0);\n      if (validIds.length === 0) {\n        throw new Error('\u65E0\u6548\u7684ID\u683C\u5F0F');\n      }\n      \n      const placeholders = validIds.map(() => '?').join(',');\n      const stmt = this.db.prepare(`DELETE FROM comments WHERE id IN (${placeholders})`);\n      const result = await stmt.bind(...validIds).run();\n      \n      console.log(`\u6279\u91CF\u5220\u9664\u6210\u529F: ${result.meta.changes} \u6761\u8BB0\u5F55`);\n      return result.meta.changes || 0;\n    } catch (error) {\n      console.error('Database batchDeleteComments error:', error);\n      throw new Error(`\u6279\u91CF\u5220\u9664\u5931\u8D25\uFF1A${error.message}`);\n    }\n  }\n\n  // \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u5220\u9664\u9875\u9762\u6240\u6709\u8BC4\u8BBA\n  async deletePageComments(pageUrl) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM comments WHERE page_url = ?');\n      const result = await stmt.bind(pageUrl).run();\n      return result.meta.changes || 0;\n    } catch (error) {\n      console.error('Database deletePageComments error:', error);\n      return 0;\n    }\n  }\n\n  // \u767D\u540D\u5355\u76F8\u5173\u65B9\u6CD5\n  async getWhitelist() {\n    try {\n      const stmt = this.db.prepare('SELECT * FROM whitelist ORDER BY created_at DESC');\n      const result = await stmt.all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getWhitelist error:', error);\n      return [];\n    }\n  }\n\n  async addToWhitelist(domain, description = null) {\n    try {\n      // \u6570\u636E\u9A8C\u8BC1\n      if (!domain || typeof domain !== 'string') {\n        throw new Error('\u57DF\u540D\u4E0D\u80FD\u4E3A\u7A7A');\n      }\n      \n      // \u57DF\u540D\u957F\u5EA6\u9650\u5236\n      if (domain.length > 253) {\n        throw new Error('\u57DF\u540D\u8FC7\u957F');\n      }\n      \n      // \u57DF\u540D\u683C\u5F0F\u9A8C\u8BC1 - \u652F\u6301\u5E38\u89C1\u7684\u57DF\u540D\u683C\u5F0F\uFF0C\u5305\u62EC\u5355\u5B57\u7B26\u57DF\u540D\n      const domainRegex = /^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?)*$/;\n      if (!domainRegex.test(domain)) {\n        throw new Error('\u57DF\u540D\u683C\u5F0F\u4E0D\u6B63\u786E');\n      }\n      \n      // \u6807\u51C6\u5316\u57DF\u540D\n      const normalizedDomain = domain.toLowerCase().trim();\n      \n      // \u63CF\u8FF0\u957F\u5EA6\u9650\u5236\n      if (description && description.length > 255) {\n        throw new Error('\u63CF\u8FF0\u8FC7\u957F');\n      }\n      \n      const stmt = this.db.prepare('INSERT INTO whitelist (domain, description) VALUES (?, ?)');\n      const result = await stmt.bind(normalizedDomain, description).run();\n      \n      console.log(`\u6DFB\u52A0\u767D\u540D\u5355\u6210\u529F: ${normalizedDomain}`);\n      return result.meta.last_row_id;\n    } catch (error) {\n      console.error('Database addToWhitelist error:', error);\n      throw new Error(`\u6DFB\u52A0\u767D\u540D\u5355\u5931\u8D25\uFF1A${error.message}`);\n    }\n  }\n\n  async removeFromWhitelist(id) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM whitelist WHERE id = ?');\n      const result = await stmt.bind(id).run();\n      return result.meta.changes > 0;\n    } catch (error) {\n      console.error('Database removeFromWhitelist error:', error);\n      return false;\n    }\n  }\n\n  async isWhitelisted(domain) {\n    try {\n      if (!domain || typeof domain !== 'string') {\n        return false;\n      }\n      \n      // \u6807\u51C6\u5316\u57DF\u540D\n      const normalizedDomain = domain.toLowerCase().trim();\n      \n      const stmt = this.db.prepare('SELECT COUNT(*) as count FROM whitelist WHERE domain = ?');\n      const result = await stmt.bind(normalizedDomain).first();\n      \n      return result?.count > 0;\n    } catch (error) {\n      console.error('Database isWhitelisted error:', error);\n      return false;\n    }\n  }\n\n  // \u901F\u7387\u9650\u5236\u76F8\u5173\u65B9\u6CD5\n  async checkRateLimit(ipHash, maxRequests = 10, windowMinutes = 1) {\n    try {\n      // \u6E05\u7406\u8FC7\u671F\u8BB0\u5F55\n      await this.cleanOldRateLimits(windowMinutes);\n      \n      const windowStart = new Date(Date.now() - windowMinutes * 60 * 1000).toISOString();\n      \n      // \u68C0\u67E5\u5F53\u524D\u7A97\u53E3\u5185\u7684\u8BF7\u6C42\u6570\n      const stmt = this.db.prepare(`\n        SELECT request_count \n        FROM rate_limits \n        WHERE ip_hash = ? AND window_start > ?\n      `);\n      const result = await stmt.bind(ipHash, windowStart).first();\n      \n      if (!result) {\n        // \u6CA1\u6709\u8BB0\u5F55\uFF0C\u521B\u5EFA\u65B0\u8BB0\u5F55\n        await this.createRateLimit(ipHash);\n        return true;\n      }\n      \n      if (result.request_count >= maxRequests) {\n        return false;\n      }\n      \n      // \u66F4\u65B0\u8BF7\u6C42\u8BA1\u6570\n      await this.updateRateLimit(ipHash);\n      return true;\n    } catch (error) {\n      console.error('Database checkRateLimit error:', error);\n      return true; // \u51FA\u9519\u65F6\u5141\u8BB8\u8BF7\u6C42\n    }\n  }\n\n  async createRateLimit(ipHash) {\n    const stmt = this.db.prepare(`\n      INSERT INTO rate_limits (ip_hash, request_count, window_start, updated_at) \n      VALUES (?, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    `);\n    await stmt.bind(ipHash).run();\n  }\n\n  async updateRateLimit(ipHash) {\n    const stmt = this.db.prepare(`\n      UPDATE rate_limits \n      SET request_count = request_count + 1, updated_at = CURRENT_TIMESTAMP \n      WHERE ip_hash = ?\n    `);\n    await stmt.bind(ipHash).run();\n  }\n\n  async cleanOldRateLimits(windowMinutes = 1) {\n    const cutoff = new Date(Date.now() - windowMinutes * 60 * 1000).toISOString();\n    const stmt = this.db.prepare('DELETE FROM rate_limits WHERE window_start < ?');\n    await stmt.bind(cutoff).run();\n  }\n\n  // \u901A\u77E5\u914D\u7F6E\u76F8\u5173\u65B9\u6CD5\n  async getNotificationConfig() {\n    try {\n      const stmt = this.db.prepare('SELECT config_data FROM notification_config WHERE id = 1');\n      const result = await stmt.first();\n      \n      if (result?.config_data) {\n        return JSON.parse(result.config_data);\n      }\n      \n      // \u8FD4\u56DE\u9ED8\u8BA4\u914D\u7F6E\n      return {\n        email: {\n          enabled: false,\n          recipients: [],\n          subscribers: [],\n          includePageInfo: true,\n          includeCommentContent: true,\n          template: 'default'\n        },\n        telegram: {\n          enabled: false,\n          chatIds: [],\n          includePageInfo: true,\n          includeCommentContent: true,\n          template: 'default'\n        },\n        webhook: {\n          enabled: false,\n          url: '',\n          method: 'POST',\n          headers: {},\n          template: 'default'\n        }\n      };\n    } catch (error) {\n      console.error('Database getNotificationConfig error:', error);\n      // \u8FD4\u56DE\u9ED8\u8BA4\u914D\u7F6E\n      return {\n        email: {\n          enabled: false,\n          recipients: [],\n          subscribers: [],\n          includePageInfo: true,\n          includeCommentContent: true,\n          template: 'default'\n        },\n        telegram: {\n          enabled: false,\n          chatIds: [],\n          includePageInfo: true,\n          includeCommentContent: true,\n          template: 'default'\n        },\n        webhook: {\n          enabled: false,\n          url: '',\n          method: 'POST',\n          headers: {},\n          template: 'default'\n        }\n      };\n    }\n  }\n\n  async saveNotificationConfig(config) {\n    try {\n      const configData = JSON.stringify(config);\n      const stmt = this.db.prepare(`\n        INSERT OR REPLACE INTO notification_config (id, config_data, updated_at) \n        VALUES (1, ?, CURRENT_TIMESTAMP)\n      `);\n      await stmt.bind(configData).run();\n      console.log('\u901A\u77E5\u914D\u7F6E\u4FDD\u5B58\u6210\u529F');\n    } catch (error) {\n      console.error('Database saveNotificationConfig error:', error);\n      throw new Error(`\u4FDD\u5B58\u901A\u77E5\u914D\u7F6E\u5931\u8D25\uFF1A${error.message}`);\n    }\n  }\n\n  // \u90AE\u4EF6\u8BA2\u9605\u76F8\u5173\u65B9\u6CD5\n  async getEmailSubscribers() {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT id, email, name, page_url, subscribed_at, is_active \n        FROM email_subscribers \n        WHERE is_active = 1 \n        ORDER BY subscribed_at DESC\n      `);\n      const result = await stmt.all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getEmailSubscribers error:', error);\n      return [];\n    }\n  }\n\n  async getEmailSubscriber(email) {\n    try {\n      const stmt = this.db.prepare('SELECT * FROM email_subscribers WHERE email = ?');\n      const result = await stmt.bind(email).first();\n      return result;\n    } catch (error) {\n      console.error('Database getEmailSubscriber error:', error);\n      return null;\n    }\n  }\n\n  async addEmailSubscriber(subscriberData) {\n    try {\n      const { email, name, pageUrl, subscribedAt, isActive } = subscriberData;\n      \n      // \u6570\u636E\u9A8C\u8BC1\n      if (!email || typeof email !== 'string') {\n        throw new Error('\u90AE\u7BB1\u5730\u5740\u4E0D\u80FD\u4E3A\u7A7A');\n      }\n      \n      // \u90AE\u7BB1\u683C\u5F0F\u9A8C\u8BC1\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        throw new Error('\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E');\n      }\n      \n      // \u957F\u5EA6\u9650\u5236\n      if (email.length > 254) {\n        throw new Error('\u90AE\u7BB1\u5730\u5740\u8FC7\u957F');\n      }\n      \n      if (name && name.length > 100) {\n        throw new Error('\u540D\u79F0\u8FC7\u957F');\n      }\n      \n      const stmt = this.db.prepare(`\n        INSERT INTO email_subscribers (email, name, page_url, subscribed_at, is_active) \n        VALUES (?, ?, ?, ?, ?)\n      `);\n      const result = await stmt.bind(\n        email.toLowerCase().trim(),\n        name || email.split('@')[0],\n        pageUrl || null,\n        subscribedAt || new Date().toISOString(),\n        isActive !== false ? 1 : 0\n      ).run();\n      \n      console.log(`\u90AE\u4EF6\u8BA2\u9605\u6DFB\u52A0\u6210\u529F: ${email}`);\n      return result.meta.last_row_id;\n    } catch (error) {\n      console.error('Database addEmailSubscriber error:', error);\n      throw new Error(`\u6DFB\u52A0\u90AE\u4EF6\u8BA2\u9605\u5931\u8D25\uFF1A${error.message}`);\n    }\n  }\n\n  async removeEmailSubscriberByEmail(email) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM email_subscribers WHERE email = ?');\n      const result = await stmt.bind(email.toLowerCase().trim()).run();\n      return result.meta.changes > 0;\n    } catch (error) {\n      console.error('Database removeEmailSubscriberByEmail error:', error);\n      return false;\n    }\n  }\n\n  async removeEmailSubscriberById(id) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM email_subscribers WHERE id = ?');\n      const result = await stmt.bind(id).run();\n      return result.meta.changes > 0;\n    } catch (error) {\n      console.error('Database removeEmailSubscriberById error:', error);\n      return false;\n    }\n  }\n\n  // \u83B7\u53D6\u5355\u4E2A\u8BC4\u8BBA\u8BE6\u60C5\n  async getCommentById(commentId) {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT \n          id, page_url, author_name, author_email, author_qq, content, created_at, parent_id\n        FROM comments \n        WHERE id = ?\n      `);\n      const result = await stmt.bind(commentId).first();\n      return result;\n    } catch (error) {\n      console.error('Database getCommentById error:', error);\n      return null;\n    }\n  }\n\n  // Telegram \u8BA2\u9605\u8005\u76F8\u5173\u65B9\u6CD5\n  async getTelegramSubscribers() {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT chat_id, name, chat_type, page_url, subscribed_at, is_active\n        FROM telegram_subscribers \n        WHERE is_active = 1\n        ORDER BY subscribed_at DESC\n      `);\n      const result = await stmt.all();\n      return result.results || [];\n    } catch (error) {\n      console.error('Database getTelegramSubscribers error:', error);\n      return [];\n    }\n  }\n\n  async getTelegramSubscriber(chatId) {\n    try {\n      const stmt = this.db.prepare(`\n        SELECT * FROM telegram_subscribers WHERE chat_id = ?\n      `);\n      const result = await stmt.bind(chatId.toString()).first();\n      return result;\n    } catch (error) {\n      console.error('Database getTelegramSubscriber error:', error);\n      return null;\n    }\n  }\n\n  async addTelegramSubscriber({ chatId, name, chatType, pageUrl, subscribedAt, isActive }) {\n    try {\n      // \u6570\u636E\u9A8C\u8BC1\n      if (!chatId || typeof chatId !== 'string' && typeof chatId !== 'number') {\n        throw new Error('Chat ID \u4E0D\u80FD\u4E3A\u7A7A');\n      }\n      \n      // \u957F\u5EA6\u9650\u5236\n      if (name && name.length > 100) {\n        throw new Error('\u540D\u79F0\u8FC7\u957F');\n      }\n      \n      const stmt = this.db.prepare(`\n        INSERT INTO telegram_subscribers (chat_id, name, chat_type, page_url, subscribed_at, is_active) \n        VALUES (?, ?, ?, ?, ?, ?)\n      `);\n      const result = await stmt.bind(\n        chatId.toString(),\n        name || `Chat ${chatId}`,\n        chatType || 'private',\n        pageUrl || null,\n        subscribedAt || new Date().toISOString(),\n        isActive !== false ? 1 : 0\n      ).run();\n      \n      console.log(`Telegram \u8BA2\u9605\u6DFB\u52A0\u6210\u529F: ${chatId}`);\n      return result.meta.last_row_id;\n    } catch (error) {\n      console.error('Database addTelegramSubscriber error:', error);\n      throw new Error(`\u6DFB\u52A0 Telegram \u8BA2\u9605\u5931\u8D25\uFF1A${error.message}`);\n    }\n  }\n\n  async removeTelegramSubscriberByChatId(chatId) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM telegram_subscribers WHERE chat_id = ?');\n      const result = await stmt.bind(chatId.toString()).run();\n      return result.meta.changes > 0;\n    } catch (error) {\n      console.error('Database removeTelegramSubscriberByChatId error:', error);\n      return false;\n    }\n  }\n\n  async removeTelegramSubscriberById(id) {\n    try {\n      const stmt = this.db.prepare('DELETE FROM telegram_subscribers WHERE id = ?');\n      const result = await stmt.bind(id).run();\n      return result.meta.changes > 0;\n    } catch (error) {\n      console.error('Database removeTelegramSubscriberById error:', error);\n      return false;\n    }\n  }\n}", "export function validateComment(data) {\n  const errors = [];\n  \n  // \u9A8C\u8BC1\u6570\u636E\u7C7B\u578B\n  if (!data || typeof data !== 'object') {\n    errors.push('\u65E0\u6548\u7684\u8BF7\u6C42\u6570\u636E');\n    return { isValid: false, errors };\n  }\n  \n  // \u9A8C\u8BC1\u9875\u9762URL\n  if (!data.pageUrl || typeof data.pageUrl !== 'string') {\n    errors.push('\u9875\u9762URL\u4E0D\u80FD\u4E3A\u7A7A');\n  } else if (!isValidUrl(data.pageUrl)) {\n    errors.push('\u9875\u9762URL\u683C\u5F0F\u4E0D\u6B63\u786E');\n  }\n  \n  // \u9A8C\u8BC1\u7528\u6237\u540D\n  if (!data.authorName || typeof data.authorName !== 'string' || data.authorName.trim().length === 0) {\n    errors.push('\u7528\u6237\u540D\u4E0D\u80FD\u4E3A\u7A7A');\n  } else if (data.authorName.length > 50) {\n    errors.push('\u7528\u6237\u540D\u4E0D\u80FD\u8D85\u8FC750\u4E2A\u5B57\u7B26');\n  } else if (containsControlCharacters(data.authorName)) {\n    errors.push('\u7528\u6237\u540D\u5305\u542B\u975E\u6CD5\u5B57\u7B26');\n  }\n  \n  // \u9A8C\u8BC1\u8BC4\u8BBA\u5185\u5BB9\n  if (!data.content || typeof data.content !== 'string' || data.content.trim().length === 0) {\n    errors.push('\u8BC4\u8BBA\u5185\u5BB9\u4E0D\u80FD\u4E3A\u7A7A');\n  } else if (data.content.length > 1000) {\n    errors.push('\u8BC4\u8BBA\u5185\u5BB9\u4E0D\u80FD\u8D85\u8FC71000\u4E2A\u5B57\u7B26');\n  } else if (containsControlCharacters(data.content)) {\n    errors.push('\u8BC4\u8BBA\u5185\u5BB9\u5305\u542B\u975E\u6CD5\u5B57\u7B26');\n  }\n  \n  // \u9A8C\u8BC1\u90AE\u7BB1\n  if (data.authorEmail && !isValidEmail(data.authorEmail)) {\n    errors.push('\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E');\n  }\n  \n  // \u9A8C\u8BC1QQ\u53F7\n  if (data.authorQQ && !isValidQQ(data.authorQQ)) {\n    errors.push('QQ\u53F7\u683C\u5F0F\u4E0D\u6B63\u786E');\n  }\n  \n  // \u9A8C\u8BC1\u7236\u8BC4\u8BBAID\n  if (data.parentId && (!Number.isInteger(data.parentId) || data.parentId <= 0)) {\n    errors.push('\u7236\u8BC4\u8BBAID\u683C\u5F0F\u4E0D\u6B63\u786E');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n}\n\nexport function isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nexport function isValidQQ(qq) {\n  if (typeof qq !== 'string' || qq.length === 0) {\n    return false;\n  }\n  \n  // QQ\u53F7\u5FC5\u987B\u662F5-11\u4F4D\u6570\u5B57\uFF0C\u4E14\u4E0D\u80FD\u4EE50\u5F00\u5934\n  const qqRegex = /^[1-9][0-9]{4,10}$/;\n  return qqRegex.test(qq);\n}\n\n// \u68C0\u67E5\u5B57\u7B26\u4E32\u662F\u5426\u5305\u542B\u63A7\u5236\u5B57\u7B26\u6216\u5371\u9669\u5B57\u7B26\nexport function containsControlCharacters(str) {\n  if (typeof str !== 'string') return false;\n  \n  // \u68C0\u67E5\u63A7\u5236\u5B57\u7B26\u548C\u5371\u9669\u5B57\u7B26\n  const dangerousChars = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\uFEFF]/;\n  return dangerousChars.test(str);\n}\n\n// \u6807\u51C6\u5316\u57DF\u540D\nexport function normalizeDomain(domain) {\n  if (typeof domain !== 'string') return '';\n  \n  try {\n    // \u8F6C\u6362\u4E3A\u5C0F\u5199\n    domain = domain.toLowerCase();\n    \n    // \u79FB\u9664\u524D\u540E\u7A7A\u683C\n    domain = domain.trim();\n    \n    // \u5904\u7406\u56FD\u9645\u5316\u57DF\u540D\n    if (domain.includes('xn--')) {\n      try {\n        // \u5C1D\u8BD5\u4F7F\u7528URL\u6784\u9020\u5668\u6807\u51C6\u5316\n        const url = new URL(`http://${domain}`);\n        domain = url.hostname;\n      } catch (e) {\n        // \u5982\u679C\u5931\u8D25\uFF0C\u8FD4\u56DE\u539F\u57DF\u540D\n      }\n    }\n    \n    return domain;\n  } catch (e) {\n    return '';\n  }\n}\n\nexport function sanitizeInput(input) {\n  if (typeof input !== 'string') return input;\n  \n  return input\n    .replace(/&/g, '&amp;')  // \u5FC5\u987B\u9996\u5148\u8F6C\u4E49&\u7B26\u53F7\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;')\n    .replace(/\\n/g, '&#x0A;')  // \u8F6C\u4E49\u6362\u884C\u7B26\n    .replace(/\\r/g, '&#x0D;')  // \u8F6C\u4E49\u56DE\u8F66\u7B26\n    .replace(/\\t/g, '&#x09;'); // \u8F6C\u4E49\u5236\u8868\u7B26\n}\n\nexport function isValidUrl(url) {\n  try {\n    if (typeof url !== 'string' || url.length === 0 || url.length > 2048) {\n      return false;\n    }\n    \n    // \u68C0\u67E5URL\u683C\u5F0F\n    const urlObj = new URL(url);\n    \n    // \u53EA\u5141\u8BB8http\u548Chttps\u534F\u8BAE\n    if (!['http:', 'https:'].includes(urlObj.protocol)) {\n      return false;\n    }\n    \n    // \u68C0\u67E5\u4E3B\u673A\u540D\u683C\u5F0F\n    if (!urlObj.hostname || urlObj.hostname.length > 253) {\n      return false;\n    }\n    \n    // \u9632\u6B62IP\u5730\u5740\u7ED5\u8FC7\n    const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    if (ipRegex.test(urlObj.hostname)) {\n      // \u5982\u679C\u662FIP\u5730\u5740\uFF0C\u9700\u8981\u989D\u5916\u9A8C\u8BC1\n      const parts = urlObj.hostname.split('.');\n      if (parts.some(part => parseInt(part) > 255)) {\n        return false;\n      }\n    }\n    \n    return true;\n  } catch {\n    return false;\n  }\n}", "export function getClientIP(request) {\n  const cfConnectingIP = request.headers.get('CF-Connecting-IP');\n  const xForwardedFor = request.headers.get('X-Forwarded-For');\n  const xRealIP = request.headers.get('X-Real-IP');\n  \n  return cfConnectingIP || xForwardedFor?.split(',')[0] || xRealIP || 'unknown';\n}\n\nexport function getUserAgent(request) {\n  return request.headers.get('User-Agent') || 'unknown';\n}\n\nexport function rateLimitCheck(ip, cache) {\n  const key = `ratelimit:${ip}`;\n  const now = Date.now();\n  const windowMs = 60000; // 1\u5206\u949F\n  const maxRequests = 10; // \u6BCF\u5206\u949F\u6700\u591A10\u4E2A\u8BF7\u6C42\n  \n  const requests = cache.get(key) || [];\n  const validRequests = requests.filter(time => now - time < windowMs);\n  \n  if (validRequests.length >= maxRequests) {\n    return false;\n  }\n  \n  validRequests.push(now);\n  cache.set(key, validRequests);\n  \n  // \u6E05\u7406\u8FC7\u671F\u7684\u7F13\u5B58\u9879\n  if (validRequests.length > maxRequests * 2) {\n    cache.set(key, validRequests.slice(-maxRequests));\n  }\n  \n  return true;\n}\n\nexport async function hashEmail(email) {\n  if (!email || typeof email !== 'string') return null;\n  \n  try {\n    const crypto = globalThis.crypto;\n    const encoder = new TextEncoder();\n    // \u6DFB\u52A0\u76D0\u503C\u589E\u52A0\u5B89\u5168\u6027\n    const data = encoder.encode(email.toLowerCase() + 'email_salt_2023');\n    \n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  } catch (error) {\n    console.error('Hash email error:', error);\n    return null;\n  }\n}\n\nexport function containsBadWords(text) {\n  if (typeof text !== 'string') return false;\n  \n  const badWords = [\n    '\u5783\u573E', '\u5E7F\u544A', 'spam', '\u8272\u60C5', '\u8D4C\u535A', '\u6BD2\u54C1', \n    '\u66B4\u529B', '\u6050\u6016', '\u53CD\u52A8', '\u5206\u88C2', '\u90AA\u6559',\n    'fuck', 'shit', 'bitch', 'porn', 'sex',\n    // \u53EF\u4EE5\u6839\u636E\u9700\u8981\u6DFB\u52A0\u66F4\u591A\u654F\u611F\u8BCD\n  ];\n  \n  const lowerText = text.toLowerCase();\n  \n  return badWords.some(word => {\n    // \u68C0\u67E5\u76F4\u63A5\u5339\u914D\n    if (lowerText.includes(word)) return true;\n    \n    // \u68C0\u67E5\u53D8\u4F53\uFF08\u7528\u6570\u5B57\u66FF\u6362\u5B57\u6BCD\u7B49\uFF09\n    const variations = generateWordVariations(word);\n    return variations.some(variant => lowerText.includes(variant));\n  });\n}\n\n// \u751F\u6210\u8BCD\u6C47\u53D8\u4F53\uFF08\u7B80\u5355\u7684\u53D8\u4F53\u68C0\u6D4B\uFF09\nfunction generateWordVariations(word) {\n  const variations = [word];\n  \n  // \u6570\u5B57\u66FF\u6362\n  const replacements = {\n    'a': ['@', '4'],\n    'e': ['3'],\n    'i': ['1', '!'],\n    'o': ['0'],\n    's': ['$', '5'],\n    't': ['7']\n  };\n  \n  let current = word;\n  for (const [letter, nums] of Object.entries(replacements)) {\n    for (const num of nums) {\n      variations.push(current.replace(new RegExp(letter, 'g'), num));\n    }\n  }\n  \n  return variations;\n}\n\n// \u751F\u6210\u5B89\u5168\u7684\u968F\u673A\u4EE4\u724C\nexport function generateSecureToken(length = 32) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  \n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  \n  return result;\n}\n\n// \u5B89\u5168\u7684\u4EE4\u724C\u9A8C\u8BC1\nexport function verifySecureToken(token, validTokens) {\n  if (!token || typeof token !== 'string') {\n    return false;\n  }\n  \n  // \u9632\u6B62\u65F6\u5E8F\u653B\u51FB\n  let isValid = false;\n  for (const validToken of validTokens) {\n    if (constantTimeCompare(token, validToken)) {\n      isValid = true;\n    }\n  }\n  \n  return isValid;\n}\n\n// \u5E38\u91CF\u65F6\u95F4\u6BD4\u8F83\uFF0C\u9632\u6B62\u65F6\u5E8F\u653B\u51FB\nfunction constantTimeCompare(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  \n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  }\n  \n  return result === 0;\n}\n\n// \u751F\u6210CSRF\u4EE4\u724C\nexport function generateCSRFToken() {\n  return generateSecureToken(32);\n}\n\n// \u9A8C\u8BC1CSRF\u4EE4\u724C\nexport function verifyCSRFToken(token, session) {\n  if (!token || !session || !session.csrfToken) {\n    return false;\n  }\n  \n  return constantTimeCompare(token, session.csrfToken);\n}\n\n// \u5B89\u5168\u7684IP\u5730\u5740\u54C8\u5E0C\nexport async function hashIP(ip) {\n  if (!ip || typeof ip !== 'string') {\n    return 'unknown';\n  }\n  \n  const encoder = new TextEncoder();\n  const data = encoder.encode(ip + 'salt_for_privacy');\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  \n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n// \u6E05\u7406\u654F\u611F\u6570\u636E\nexport function sanitizeErrorMessage(error) {\n  if (!error) return '\u672A\u77E5\u9519\u8BEF';\n  \n  const message = error.message || error.toString();\n  \n  // \u79FB\u9664\u53EF\u80FD\u5305\u542B\u654F\u611F\u4FE1\u606F\u7684\u9519\u8BEF\u6D88\u606F\n  const sensitivePatterns = [\n    /table.*not found/i,\n    /column.*not found/i,\n    /database.*error/i,\n    /sql.*error/i,\n    /connection.*failed/i,\n    /permission.*denied/i,\n    /access.*denied/i,\n    /file.*not found/i,\n    /directory.*not found/i,\n    /network.*error/i\n  ];\n  \n  for (const pattern of sensitivePatterns) {\n    if (pattern.test(message)) {\n      return '\u7CFB\u7EDF\u9519\u8BEF\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5';\n    }\n  }\n  \n  return message;\n}", "export function jsonResponse(data, status = 200, headers = {}) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      ...headers\n    }\n  });\n}\n\nexport function errorResponse(message, status = 400) {\n  return jsonResponse({\n    error: true,\n    message\n  }, status);\n}\n\nexport function successResponse(data, message = 'Success') {\n  return jsonResponse({\n    success: true,\n    message,\n    data\n  });\n}\n\nexport function corsResponse() {\n  return new Response(null, {\n    status: 204,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n      'Access-Control-Max-Age': '86400'\n    }\n  });\n}\n\nexport function htmlResponse(html, status = 200) {\n  return new Response(html, {\n    status,\n    headers: {\n      'Content-Type': 'text/html; charset=utf-8'\n    }\n  });\n}", "/**\n * \u90AE\u7BB1\u901A\u77E5\u63A8\u9001\u5668\n * \u4F7F\u7528 Resend API \u53D1\u9001\u90AE\u4EF6\n */\nexport class EmailNotifier {\n  constructor(config) {\n    this.config = {\n      apiKey: config.apiKey,\n      fromName: config.fromName || 'lzreview\u8BC4\u8BBA\u7CFB\u7EDF',\n      fromEmail: config.fromEmail || 'notifications@example.com',\n      apiUrl: 'https://api.resend.com/emails'\n    };\n  }\n\n  /**\n   * \u53D1\u9001\u65B0\u8BC4\u8BBA\u901A\u77E5\u90AE\u4EF6\n   */\n  async sendNewCommentNotification(commentData, emailConfig) {\n    console.log('\uD83D\uDCEE EmailNotifier: \u5F00\u59CB\u53D1\u9001\u65B0\u8BC4\u8BBA\u901A\u77E5\u90AE\u4EF6');\n    console.log('\uD83D\uDCEE \u90AE\u4EF6\u914D\u7F6E:', emailConfig);\n    console.log('\uD83D\uDCEE API Key \u914D\u7F6E:', this.config.apiKey ? '\u2705 \u5DF2\u914D\u7F6E' : '\u274C \u672A\u914D\u7F6E');\n    \n    try {\n      const allRecipients = [\n        ...(emailConfig.recipients || []),\n        ...(emailConfig.subscribers || [])\n      ];\n\n      console.log('\uD83D\uDCEE \u6536\u4EF6\u4EBA\u5217\u8868:', allRecipients);\n\n      if (allRecipients.length === 0) {\n        console.log('\u274C \u6CA1\u6709\u914D\u7F6E\u6536\u4EF6\u4EBA');\n        return {\n          success: false,\n          message: '\u6CA1\u6709\u914D\u7F6E\u6536\u4EF6\u4EBA'\n        };\n      }\n\n      console.log('\uD83D\uDCEE \u751F\u6210\u90AE\u4EF6\u5185\u5BB9...');\n      const emailContent = this.generateEmailContent(commentData, emailConfig);\n      console.log('\uD83D\uDCEE \u90AE\u4EF6\u4E3B\u9898:', emailContent.subject);\n      \n      const results = [];\n\n      // \u4E3A\u4E86\u907F\u514D\u88AB\u6807\u8BB0\u4E3A\u5783\u573E\u90AE\u4EF6\uFF0C\u6211\u4EEC\u9010\u4E2A\u53D1\u9001\u90AE\u4EF6\n      console.log('\uD83D\uDCEE \u5F00\u59CB\u9010\u4E2A\u53D1\u9001\u90AE\u4EF6...');\n      for (const recipient of allRecipients) {\n        try {\n          console.log(`\uD83D\uDCEE \u53D1\u9001\u90AE\u4EF6\u5230: ${recipient}`);\n          const result = await this.sendEmail(recipient, emailContent);\n          console.log(`\uD83D\uDCEE \u53D1\u9001\u7ED3\u679C [${recipient}]:`, result);\n          \n          results.push({\n            recipient,\n            success: result.success,\n            message: result.message\n          });\n        } catch (error) {\n          console.log(`\u274C \u53D1\u9001\u5931\u8D25 [${recipient}]:`, error.message);\n          results.push({\n            recipient,\n            success: false,\n            message: error.message\n          });\n        }\n      }\n\n      const successCount = results.filter(r => r.success).length;\n      const totalCount = results.length;\n\n      return {\n        success: successCount > 0,\n        message: `\u90AE\u4EF6\u53D1\u9001\u5B8C\u6210: ${successCount}/${totalCount} \u6210\u529F`,\n        details: results\n      };\n\n    } catch (error) {\n      console.error('\u90AE\u4EF6\u901A\u77E5\u53D1\u9001\u5931\u8D25:', error);\n      return {\n        success: false,\n        message: `\u90AE\u4EF6\u53D1\u9001\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210\u90AE\u4EF6\u5185\u5BB9\n   */\n  generateEmailContent(commentData, emailConfig) {\n    const isReply = commentData.isReply;\n    const subject = isReply \n      ? `\u65B0\u56DE\u590D\u901A\u77E5 - ${commentData.pageTitle}`\n      : `\u65B0\u8BC4\u8BBA\u901A\u77E5 - ${commentData.pageTitle}`;\n\n    const htmlContent = this.generateHTMLTemplate(commentData, emailConfig);\n    const textContent = this.generateTextTemplate(commentData, emailConfig);\n\n    return {\n      subject,\n      html: htmlContent,\n      text: textContent\n    };\n  }\n\n  /**\n   * \u751F\u6210HTML\u90AE\u4EF6\u6A21\u677F\n   */\n  generateHTMLTemplate(commentData, emailConfig) {\n    const isReply = commentData.isReply;\n    const actionText = isReply ? '\u56DE\u590D\u4E86\u8BC4\u8BBA' : '\u53D1\u8868\u4E86\u65B0\u8BC4\u8BBA';\n    const typeText = isReply ? '\u56DE\u590D' : '\u8BC4\u8BBA';\n\n    return `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${typeText}\u901A\u77E5</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: #f5f5f5;\n        }\n        .email-container {\n            background: white;\n            border-radius: 8px;\n            padding: 30px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n        }\n        .header {\n            text-align: center;\n            margin-bottom: 30px;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #007cba;\n        }\n        .header h1 {\n            color: #007cba;\n            margin: 0;\n            font-size: 24px;\n        }\n        .header p {\n            margin: 5px 0 0 0;\n            color: #666;\n            font-size: 14px;\n        }\n        .notification-type {\n            background: ${isReply ? '#28a745' : '#007cba'};\n            color: white;\n            padding: 8px 16px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: bold;\n            display: inline-block;\n            margin-bottom: 20px;\n        }\n        .page-info {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 6px;\n            margin-bottom: 20px;\n            border-left: 4px solid #007cba;\n        }\n        .page-title {\n            font-weight: bold;\n            color: #333;\n            margin-bottom: 5px;\n        }\n        .page-url {\n            color: #666;\n            font-size: 14px;\n            word-break: break-all;\n        }\n        .comment-info {\n            background: #fff;\n            border: 1px solid #e9ecef;\n            border-radius: 6px;\n            padding: 20px;\n            margin-bottom: 20px;\n        }\n        .author-info {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n            padding-bottom: 10px;\n            border-bottom: 1px solid #eee;\n        }\n        .author-avatar {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            background: #007cba;\n            color: white;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-weight: bold;\n            margin-right: 12px;\n        }\n        .author-details h3 {\n            margin: 0;\n            font-size: 16px;\n            color: #333;\n        }\n        .author-details p {\n            margin: 2px 0 0 0;\n            font-size: 14px;\n            color: #666;\n        }\n        .comment-content {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 6px;\n            border-left: 4px solid ${isReply ? '#28a745' : '#007cba'};\n            white-space: pre-wrap;\n            word-wrap: break-word;\n            line-height: 1.5;\n        }\n        .actions {\n            text-align: center;\n            margin-top: 30px;\n            padding-top: 20px;\n            border-top: 1px solid #eee;\n        }\n        .btn {\n            display: inline-block;\n            padding: 12px 24px;\n            background: #007cba;\n            color: white;\n            text-decoration: none;\n            border-radius: 6px;\n            font-weight: bold;\n            margin: 0 10px;\n        }\n        .btn:hover {\n            background: #005a87;\n        }\n        .btn-secondary {\n            background: #6c757d;\n        }\n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        .footer {\n            margin-top: 30px;\n            padding-top: 20px;\n            border-top: 1px solid #eee;\n            text-align: center;\n            color: #666;\n            font-size: 12px;\n        }\n        .footer p {\n            margin: 5px 0;\n        }\n        .timestamp {\n            color: #999;\n            font-size: 14px;\n            margin-top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n        <div class=\"header\">\n            <h1>\uD83D\uDCE7 lzreview</h1>\n            <p>\u8BC4\u8BBA\u7CFB\u7EDF\u901A\u77E5</p>\n        </div>\n\n        <div class=\"notification-type\">\n            ${isReply ? '\uD83D\uDCAC \u65B0\u56DE\u590D' : '\uD83D\uDD14 \u65B0\u8BC4\u8BBA'}\n        </div>\n\n        ${emailConfig.includePageInfo !== false ? `\n        <div class=\"page-info\">\n            <div class=\"page-title\">\uD83D\uDCC4 ${commentData.pageTitle}</div>\n            <div class=\"page-url\">${commentData.pageUrl}</div>\n        </div>\n        ` : ''}\n\n        <div class=\"comment-info\">\n            <div class=\"author-info\">\n                <div class=\"author-avatar\">\n                    ${commentData.authorName.charAt(0).toUpperCase()}\n                </div>\n                <div class=\"author-details\">\n                    <h3>${commentData.authorName}</h3>\n                    <p>${actionText} \u2022 <span class=\"timestamp\">${this.formatDate(commentData.createdAt)}</span></p>\n                </div>\n            </div>\n\n            ${emailConfig.includeCommentContent !== false ? `\n            <div class=\"comment-content\">${commentData.content}</div>\n            ` : `\n            <p style=\"color: #666; font-style: italic;\">\u5185\u5BB9\u5DF2\u9690\u85CF\uFF0C\u8BF7\u524D\u5F80\u9875\u9762\u67E5\u770B\u5B8C\u6574${typeText}</p>\n            `}\n        </div>\n\n        <div class=\"actions\">\n            <a href=\"${commentData.pageUrl}#comment-${commentData.id}\" class=\"btn\">\n                \u67E5\u770B${typeText}\n            </a>\n            <a href=\"${commentData.pageUrl}\" class=\"btn btn-secondary\">\n                \u8BBF\u95EE\u9875\u9762\n            </a>\n        </div>\n\n        <div class=\"footer\">\n            <p>\u8FD9\u662F\u6765\u81EA lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u7684\u81EA\u52A8\u901A\u77E5</p>\n            <p>\u5982\u4E0D\u60F3\u63A5\u6536\u6B64\u7C7B\u90AE\u4EF6\uFF0C\u8BF7\u8054\u7CFB\u7F51\u7AD9\u7BA1\u7406\u5458</p>\n            <p style=\"margin-top: 15px; font-size: 11px; color: #999;\">\n                \u90AE\u4EF6\u53D1\u9001\u65F6\u95F4: ${this.formatDate(new Date())}\n            </p>\n        </div>\n    </div>\n</body>\n</html>`;\n  }\n\n  /**\n   * \u751F\u6210\u7EAF\u6587\u672C\u90AE\u4EF6\u6A21\u677F\n   */\n  generateTextTemplate(commentData, emailConfig) {\n    const isReply = commentData.isReply;\n    const actionText = isReply ? '\u56DE\u590D\u4E86\u8BC4\u8BBA' : '\u53D1\u8868\u4E86\u65B0\u8BC4\u8BBA';\n    const typeText = isReply ? '\u56DE\u590D' : '\u8BC4\u8BBA';\n\n    let content = `\nlzreview \u8BC4\u8BBA\u7CFB\u7EDF\u901A\u77E5\n\n${isReply ? '\uD83D\uDCAC \u65B0\u56DE\u590D' : '\uD83D\uDD14 \u65B0\u8BC4\u8BBA'}\n\n`;\n\n    if (emailConfig.includePageInfo !== false) {\n      content += `\u9875\u9762: ${commentData.pageTitle}\nURL: ${commentData.pageUrl}\n\n`;\n    }\n\n    content += `${commentData.authorName} ${actionText}\n\u65F6\u95F4: ${this.formatDate(commentData.createdAt)}\n\n`;\n\n    if (emailConfig.includeCommentContent !== false) {\n      content += `${typeText}\u5185\u5BB9:\n${commentData.content}\n\n`;\n    } else {\n      content += `\u5185\u5BB9\u5DF2\u9690\u85CF\uFF0C\u8BF7\u524D\u5F80\u9875\u9762\u67E5\u770B\u5B8C\u6574${typeText}\n\n`;\n    }\n\n    content += `\u67E5\u770B${typeText}: ${commentData.pageUrl}#comment-${commentData.id}\n\u8BBF\u95EE\u9875\u9762: ${commentData.pageUrl}\n\n---\n\u8FD9\u662F\u6765\u81EA lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u7684\u81EA\u52A8\u901A\u77E5\n\u5982\u4E0D\u60F3\u63A5\u6536\u6B64\u7C7B\u90AE\u4EF6\uFF0C\u8BF7\u8054\u7CFB\u7F51\u7AD9\u7BA1\u7406\u5458\n\n\u90AE\u4EF6\u53D1\u9001\u65F6\u95F4: ${this.formatDate(new Date())}\n    `;\n\n    return content.trim();\n  }\n\n  /**\n   * \u53D1\u9001\u90AE\u4EF6 (\u4F7F\u7528 Resend API)\n   */\n  async sendEmail(recipient, content) {\n    console.log(`\uD83D\uDCEE sendEmail \u5F00\u59CB - \u6536\u4EF6\u4EBA: ${recipient}`);\n    \n    try {\n      if (!this.config.apiKey) {\n        throw new Error('Resend API Key \u672A\u914D\u7F6E');\n      }\n\n      const emailData = {\n        from: `${this.config.fromName} <${this.config.fromEmail}>`,\n        to: [recipient],\n        subject: content.subject,\n        html: content.html,\n        text: content.text\n      };\n\n      console.log(`\uD83D\uDCEE \u51C6\u5907\u53D1\u9001\u90AE\u4EF6\u6570\u636E:`, {\n        from: emailData.from,\n        to: emailData.to,\n        subject: emailData.subject,\n        apiUrl: this.config.apiUrl\n      });\n\n      // \u521B\u5EFA AbortController \u7528\u4E8E\u8D85\u65F6\u63A7\u5236\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        console.log(`\uD83D\uDCEE \u8BF7\u6C42\u8D85\u65F6\uFF0C\u6B63\u5728\u4E2D\u6B62\u8BF7\u6C42...`);\n        controller.abort();\n      }, 30000); // 30\u79D2\u8D85\u65F6\n\n      console.log(`\uD83D\uDCEE \u5F00\u59CB\u53D1\u9001 HTTP \u8BF7\u6C42\u5230 Resend API...`);\n      \n      const response = await fetch(this.config.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.config.apiKey}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(emailData),\n        signal: controller.signal\n      });\n\n      // \u6E05\u9664\u8D85\u65F6\u5B9A\u65F6\u5668\n      clearTimeout(timeoutId);\n\n      console.log(`\uD83D\uDCEE HTTP \u54CD\u5E94\u72B6\u6001: ${response.status} ${response.statusText}`);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.log(`\uD83D\uDCEE API \u9519\u8BEF\u54CD\u5E94:`, errorData);\n        throw new Error(`Resend API \u9519\u8BEF: ${response.status} - ${errorData.message || response.statusText}`);\n      }\n\n      console.log(`\uD83D\uDCEE \u5F00\u59CB\u89E3\u6790\u54CD\u5E94 JSON...`);\n      const result = await response.json();\n      console.log(`\uD83D\uDCEE API \u54CD\u5E94\u7ED3\u679C:`, result);\n      \n      console.log(`\uD83D\uDCEE \u90AE\u4EF6\u53D1\u9001\u6210\u529F - Message ID: ${result.id}`);\n      return {\n        success: true,\n        message: '\u90AE\u4EF6\u53D1\u9001\u6210\u529F',\n        messageId: result.id\n      };\n\n    } catch (error) {\n      console.error('\uD83D\uDCEE \u90AE\u4EF6\u53D1\u9001\u5931\u8D25:', error);\n      \n      // \u8BE6\u7EC6\u7684\u9519\u8BEF\u5206\u7C7B\n      let errorMessage = error.message;\n      if (error.name === 'AbortError') {\n        errorMessage = '\u8BF7\u6C42\u8D85\u65F6 - Resend API \u54CD\u5E94\u65F6\u95F4\u8FC7\u957F';\n      } else if (error.message.includes('fetch')) {\n        errorMessage = '\u7F51\u7EDC\u8BF7\u6C42\u5931\u8D25 - \u65E0\u6CD5\u8FDE\u63A5\u5230 Resend API';\n      }\n      \n      console.log(`\uD83D\uDCEE \u9519\u8BEF\u7C7B\u578B: ${error.name}, \u9519\u8BEF\u6D88\u606F: ${errorMessage}`);\n      \n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  }\n\n\n  /**\n   * \u6D4B\u8BD5\u90AE\u4EF6\u53D1\u9001\u529F\u80FD\n   */\n  async test(testConfig = {}) {\n    try {\n      const testEmail = testConfig.testEmail || this.config.fromEmail;\n      \n      const testContent = {\n        subject: '\uD83E\uDDEA lzreview \u90AE\u4EF6\u63A8\u9001\u6D4B\u8BD5',\n        html: this.generateTestEmailHTML(),\n        text: this.generateTestEmailText()\n      };\n\n      const result = await this.sendEmail(testEmail, testContent);\n      \n      return {\n        success: result.success,\n        message: result.success \n          ? `\u6D4B\u8BD5\u90AE\u4EF6\u5DF2\u53D1\u9001\u5230 ${testEmail}` \n          : `\u6D4B\u8BD5\u90AE\u4EF6\u53D1\u9001\u5931\u8D25: ${result.message}`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `\u90AE\u4EF6\u63A8\u9001\u6D4B\u8BD5\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210\u6D4B\u8BD5\u90AE\u4EF6HTML\u5185\u5BB9\n   */\n  generateTestEmailHTML() {\n    return `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>\u90AE\u4EF6\u63A8\u9001\u6D4B\u8BD5</title>\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }\n        .test-header { background: #007cba; color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 20px; }\n        .test-content { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\n        .success-badge { background: #28a745; color: white; padding: 5px 10px; border-radius: 15px; font-size: 12px; font-weight: bold; }\n    </style>\n</head>\n<body>\n    <div class=\"test-header\">\n        <h1>\uD83E\uDDEA lzreview \u90AE\u4EF6\u63A8\u9001\u6D4B\u8BD5</h1>\n        <p>\u5982\u679C\u60A8\u6536\u5230\u8FD9\u5C01\u90AE\u4EF6\uFF0C\u8BF4\u660E\u90AE\u4EF6\u63A8\u9001\u529F\u80FD\u6B63\u5E38\u5DE5\u4F5C</p>\n    </div>\n    \n    <div class=\"test-content\">\n        <p><span class=\"success-badge\">\u2705 \u6D4B\u8BD5\u6210\u529F</span></p>\n        <p><strong>\u6D4B\u8BD5\u65F6\u95F4:</strong> ${this.formatDate(new Date())}</p>\n        <p><strong>\u53D1\u9001\u65B9:</strong> ${this.config.fromName} &lt;${this.config.fromEmail}&gt;</p>\n        <p><strong>\u90AE\u4EF6\u670D\u52A1:</strong> Resend API</p>\n    </div>\n    \n    <p style=\"color: #666; font-size: 14px; text-align: center;\">\n        \u8FD9\u662F\u6765\u81EA lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u7684\u6D4B\u8BD5\u90AE\u4EF6\n    </p>\n</body>\n</html>`;\n  }\n\n  /**\n   * \u751F\u6210\u6D4B\u8BD5\u90AE\u4EF6\u6587\u672C\u5185\u5BB9\n   */\n  generateTestEmailText() {\n    return `\nlzreview \u90AE\u4EF6\u63A8\u9001\u6D4B\u8BD5\n\n\u2705 \u5982\u679C\u60A8\u6536\u5230\u8FD9\u5C01\u90AE\u4EF6\uFF0C\u8BF4\u660E\u90AE\u4EF6\u63A8\u9001\u529F\u80FD\u6B63\u5E38\u5DE5\u4F5C\n\n\u6D4B\u8BD5\u4FE1\u606F:\n- \u6D4B\u8BD5\u65F6\u95F4: ${this.formatDate(new Date())}\n- \u53D1\u9001\u65B9: ${this.config.fromName} <${this.config.fromEmail}>\n- \u90AE\u4EF6\u670D\u52A1: Resend API\n\n\u8FD9\u662F\u6765\u81EA lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u7684\u6D4B\u8BD5\u90AE\u4EF6\n    `;\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u65E5\u671F\n   */\n  formatDate(date) {\n    if (!date) return '';\n    \n    const d = new Date(date);\n    if (isNaN(d.getTime())) return '';\n    \n    return d.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    });\n  }\n}", "/**\n * Telegram \u901A\u77E5\u63A8\u9001\u5668\n * \u4F7F\u7528 Telegram Bot API \u53D1\u9001\u6D88\u606F\n */\nexport class TelegramNotifier {\n  constructor(config) {\n    console.log('\uD83D\uDCF1 \u521D\u59CB\u5316 TelegramNotifier\uFF0C\u914D\u7F6E:', { \n      hasBotToken: !!config.botToken,\n      parseMode: '\u7EAF\u6587\u672C\u6A21\u5F0F'\n    });\n    \n    this.config = {\n      botToken: config.botToken,\n      apiUrl: config.botToken ? `https://api.telegram.org/bot${config.botToken}` : null,\n      parseMode: config.parseMode || 'Markdown'\n    };\n    \n    if (!this.config.botToken) {\n      console.log('\u26A0\uFE0F Telegram Bot Token \u672A\u914D\u7F6E\uFF0C\u901A\u77E5\u529F\u80FD\u5C06\u4E0D\u53EF\u7528');\n    } else {\n      console.log('\u2705 Telegram Bot Token \u5DF2\u914D\u7F6E\uFF0CAPI URL:', this.config.apiUrl);\n    }\n  }\n\n  /**\n   * \u53D1\u9001\u65B0\u8BC4\u8BBA\u901A\u77E5\u5230 Telegram\n   */\n  async sendNewCommentNotification(commentData, telegramConfig) {\n    console.log('\uD83D\uDCF1 TelegramNotifier: \u5F00\u59CB\u53D1\u9001\u65B0\u8BC4\u8BBA\u901A\u77E5');\n    console.log('\uD83D\uDCF1 Telegram\u914D\u7F6E:', telegramConfig);\n    console.log('\uD83D\uDCF1 Bot Token \u914D\u7F6E:', this.config.botToken ? '\u2705 \u5DF2\u914D\u7F6E' : '\u274C \u672A\u914D\u7F6E');\n    \n    try {\n      const chatIds = telegramConfig.chatIds || [];\n      \n      console.log('\uD83D\uDCF1 \u63A5\u6536\u8005Chat ID\u5217\u8868:', chatIds);\n\n      if (chatIds.length === 0) {\n        console.log('\u274C \u6CA1\u6709\u914D\u7F6E\u63A5\u6536\u8005Chat ID');\n        return {\n          success: false,\n          message: '\u6CA1\u6709\u914D\u7F6E\u63A5\u6536\u8005Chat ID'\n        };\n      }\n\n      console.log('\uD83D\uDCF1 \u751F\u6210\u6D88\u606F\u5185\u5BB9...');\n      const messageContent = this.generateMessageContent(commentData, telegramConfig);\n      console.log('\uD83D\uDCF1 \u6D88\u606F\u5185\u5BB9\u957F\u5EA6:', messageContent.length);\n      \n      const results = [];\n\n      // \u9010\u4E2A\u53D1\u9001\u6D88\u606F\u5230\u4E0D\u540C\u7684chat\n      console.log('\uD83D\uDCF1 \u5F00\u59CB\u9010\u4E2A\u53D1\u9001\u6D88\u606F...');\n      for (const chatId of chatIds) {\n        try {\n          console.log(`\uD83D\uDCF1 \u53D1\u9001\u6D88\u606F\u5230Chat ID: ${chatId}`);\n          const result = await this.sendMessage(chatId, messageContent);\n          console.log(`\uD83D\uDCF1 \u53D1\u9001\u7ED3\u679C [${chatId}]:`, result);\n          \n          results.push({\n            chatId,\n            success: result.success,\n            message: result.message\n          });\n        } catch (error) {\n          console.log(`\u274C \u53D1\u9001\u5931\u8D25 [${chatId}]:`, error.message);\n          results.push({\n            chatId,\n            success: false,\n            message: error.message\n          });\n        }\n      }\n\n      const successCount = results.filter(r => r.success).length;\n      const totalCount = results.length;\n\n      return {\n        success: successCount > 0,\n        message: `Telegram\u6D88\u606F\u53D1\u9001\u5B8C\u6210: ${successCount}/${totalCount} \u6210\u529F`,\n        details: results\n      };\n\n    } catch (error) {\n      console.error('Telegram\u901A\u77E5\u53D1\u9001\u5931\u8D25:', error);\n      return {\n        success: false,\n        message: `Telegram\u53D1\u9001\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210Telegram\u6D88\u606F\u5185\u5BB9\n   */\n  generateMessageContent(commentData, telegramConfig) {\n    const isReply = commentData.isReply;\n    const actionText = isReply ? '\u56DE\u590D\u4E86\u8BC4\u8BBA' : '\u53D1\u8868\u4E86\u65B0\u8BC4\u8BBA';\n    const typeText = isReply ? '\u56DE\u590D' : '\u8BC4\u8BBA';\n    const emoji = isReply ? '\uD83D\uDCAC' : '\uD83D\uDD14';\n\n    // \u6784\u5EFA\u6D88\u606F\u5185\u5BB9 - \u4F7F\u7528\u7EAF\u6587\u672C\u683C\u5F0F\n    let message = `${emoji} \u65B0${typeText}\u901A\u77E5\\n\\n`;\n\n    // \u9875\u9762\u4FE1\u606F\n    if (telegramConfig.includePageInfo !== false) {\n      message += `\uD83D\uDCC4 \u9875\u9762: ${commentData.pageTitle}\\n`;\n      message += `\uD83D\uDD17 \u94FE\u63A5: ${commentData.pageUrl}\\n\\n`;\n    }\n\n    // \u4F5C\u8005\u4FE1\u606F\n    message += `\uD83D\uDC64 \u4F5C\u8005: ${commentData.authorName}\\n`;\n    message += `\u23F0 \u65F6\u95F4: ${this.formatDate(commentData.createdAt)}\\n\\n`;\n\n    // \u8BC4\u8BBA\u5185\u5BB9\n    if (telegramConfig.includeCommentContent !== false) {\n      const content = this.truncateText(commentData.content, 500);\n      message += `\uD83D\uDCAD ${typeText}\u5185\u5BB9:\\n`;\n      message += `${content}\\n\\n`;\n    } else {\n      message += `\uD83D\uDCAD \u5185\u5BB9\u5DF2\u9690\u85CF\uFF0C\u8BF7\u524D\u5F80\u9875\u9762\u67E5\u770B\u5B8C\u6574${typeText}\\n\\n`;\n    }\n\n    // \u64CD\u4F5C\u94FE\u63A5\n    message += `\uD83D\uDD17 \u67E5\u770B${typeText}: ${commentData.pageUrl}#comment-${commentData.id}\\n`;\n    message += `\uD83D\uDCD6 \u8BBF\u95EE\u9875\u9762: ${commentData.pageUrl}`;\n\n    return message;\n  }\n\n  /**\n   * \u53D1\u9001\u6D88\u606F\u5230\u6307\u5B9A\u7684 Chat ID (\u5E26\u91CD\u8BD5\u673A\u5236)\n   */\n  async sendMessage(chatId, message) {\n    console.log(`\uD83D\uDCF1 sendMessage \u5F00\u59CB - Chat ID: ${chatId}`);\n    \n    const maxRetries = 3;\n    const baseDelay = 1000; // 1\u79D2\u57FA\u7840\u5EF6\u8FDF\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      console.log(`\uD83D\uDCF1 \u5C1D\u8BD5\u7B2C ${attempt}/${maxRetries} \u6B21\u53D1\u9001\u6D88\u606F`);\n      \n      try {\n        const result = await this.sendMessageAttempt(chatId, message, attempt);\n        console.log(`\uD83D\uDCF1 \u7B2C ${attempt} \u6B21\u5C1D\u8BD5\u6210\u529F`);\n        return result;\n      } catch (error) {\n        console.log(`\uD83D\uDCF1 \u7B2C ${attempt} \u6B21\u5C1D\u8BD5\u5931\u8D25:`, error.message);\n        \n        // \u5982\u679C\u662F\u6700\u540E\u4E00\u6B21\u5C1D\u8BD5\uFF0C\u6216\u8005\u662F\u4E0D\u53EF\u91CD\u8BD5\u7684\u9519\u8BEF\uFF0C\u76F4\u63A5\u629B\u51FA\n        if (attempt === maxRetries || this.isNonRetryableError(error)) {\n          console.log(`\uD83D\uDCF1 \u4E0D\u518D\u91CD\u8BD5: ${attempt === maxRetries ? '\u8FBE\u5230\u6700\u5927\u91CD\u8BD5\u6B21\u6570' : '\u4E0D\u53EF\u91CD\u8BD5\u7684\u9519\u8BEF'}`);\n          throw error;\n        }\n        \n        // \u6307\u6570\u9000\u907F\u5EF6\u8FDF\n        const delay = baseDelay * Math.pow(2, attempt - 1);\n        console.log(`\uD83D\uDCF1 \u7B49\u5F85 ${delay}ms \u540E\u91CD\u8BD5...`);\n        await this.sleep(delay);\n      }\n    }\n  }\n\n  /**\n   * \u5224\u65AD\u662F\u5426\u4E3A\u4E0D\u53EF\u91CD\u8BD5\u7684\u9519\u8BEF\n   */\n  isNonRetryableError(error) {\n    const nonRetryableErrors = [\n      'Unauthorized',\n      '401',\n      'bot was blocked',\n      'chat not found',\n      'Bad Request'\n    ];\n    \n    return nonRetryableErrors.some(errorType => \n      error.message.includes(errorType)\n    );\n  }\n\n  /**\n   * \u7761\u7720\u51FD\u6570\n   */\n  async sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * \u5355\u6B21\u53D1\u9001\u6D88\u606F\u5C1D\u8BD5\n   */\n  async sendMessageAttempt(chatId, message, attempt) {\n    try {\n      if (!this.config.botToken) {\n        throw new Error('Telegram Bot Token \u672A\u914D\u7F6E');\n      }\n\n      if (!this.config.apiUrl) {\n        throw new Error('Telegram API URL \u672A\u914D\u7F6E');\n      }\n\n      // \u7F51\u7EDC\u8FDE\u901A\u6027\u68C0\u6D4B\n      if (attempt === 1) {\n        console.log(`\uD83D\uDCF1 \u8FDB\u884C\u7F51\u7EDC\u8FDE\u901A\u6027\u68C0\u6D4B...`);\n        const connectivityResult = await this.checkNetworkConnectivity();\n        if (!connectivityResult.success) {\n          console.log(`\uD83D\uDCF1 \u7F51\u7EDC\u8FDE\u901A\u6027\u68C0\u6D4B\u5931\u8D25: ${connectivityResult.message}`);\n        } else {\n          console.log(`\uD83D\uDCF1 \u7F51\u7EDC\u8FDE\u901A\u6027\u68C0\u6D4B\u901A\u8FC7: ${connectivityResult.message}`);\n        }\n      }\n\n      // \u51C6\u5907\u8BF7\u6C42\u6570\u636E - \u4F7F\u7528JSON\u683C\u5F0F\u63D0\u9AD8\u517C\u5BB9\u6027\n      const requestData = {\n        chat_id: chatId,\n        text: message,\n        disable_web_page_preview: true,\n        parse_mode: 'HTML'\n      };\n\n      console.log(`\uD83D\uDCF1 \u51C6\u5907\u53D1\u9001\u6D88\u606F\u6570\u636E:`, {\n        chat_id: chatId,\n        text_length: message.length,\n        disable_web_page_preview: true,\n        apiUrl: `${this.config.apiUrl}/sendMessage`,\n        attempt: attempt\n      });\n\n      console.log(`\uD83D\uDCF1 \u5F00\u59CB\u53D1\u9001 HTTP \u8BF7\u6C42\u5230 Telegram API...`);\n      console.log(`\uD83D\uDCF1 \u8BF7\u6C42 URL: ${this.config.apiUrl}/sendMessage`);\n      \n      // \u4F18\u5316\u7684fetch\u914D\u7F6E\uFF0C\u4E13\u95E8\u9488\u5BF9Cloudflare Worker\n      const fetchOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'User-Agent': 'lzreview-bot/1.0',\n          'Accept': 'application/json',\n          'Connection': 'keep-alive'\n        },\n        body: JSON.stringify(requestData),\n        // Cloudflare Worker optimizations\n        signal: AbortSignal.timeout(30000), // 30\u79D2\u8D85\u65F6\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer'\n      };\n      \n      console.log(`\uD83D\uDCF1 \u53D1\u9001\u8BF7\u6C42\u914D\u7F6E:`, {\n        method: fetchOptions.method,\n        headers: fetchOptions.headers,\n        timeout: '30s',\n        attempt: attempt\n      });\n      \n      const response = await fetch(`${this.config.apiUrl}/sendMessage`, fetchOptions);\n\n      console.log(`\uD83D\uDCF1 HTTP \u54CD\u5E94\u72B6\u6001: ${response.status} ${response.statusText}`);\n      console.log(`\uD83D\uDCF1 HTTP \u54CD\u5E94\u5934:`, Object.fromEntries(response.headers.entries()));\n\n      if (!response.ok) {\n        let errorData;\n        try {\n          const responseText = await response.text();\n          console.log(`\uD83D\uDCF1 API \u539F\u59CB\u9519\u8BEF\u54CD\u5E94:`, responseText);\n          \n          try {\n            errorData = JSON.parse(responseText);\n          } catch (parseError) {\n            console.log(`\uD83D\uDCF1 JSON \u89E3\u6790\u5931\u8D25:`, parseError.message);\n            errorData = { description: responseText || response.statusText };\n          }\n        } catch (e) {\n          console.log(`\uD83D\uDCF1 \u8BFB\u53D6\u54CD\u5E94\u5931\u8D25:`, e.message);\n          errorData = { description: response.statusText };\n        }\n        \n        console.log(`\uD83D\uDCF1 API \u89E3\u6790\u540E\u9519\u8BEF\u54CD\u5E94:`, errorData);\n        \n        let errorMessage = `HTTP ${response.status}`;\n        if (errorData.description) {\n          errorMessage += ` - ${errorData.description}`;\n        }\n        if (errorData.error_code) {\n          errorMessage += ` (\u9519\u8BEF\u4EE3\u7801: ${errorData.error_code})`;\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      console.log(`\uD83D\uDCF1 \u5F00\u59CB\u89E3\u6790\u54CD\u5E94 JSON...`);\n      const result = await response.json();\n      console.log(`\uD83D\uDCF1 API \u54CD\u5E94\u7ED3\u679C:`, result);\n      \n      if (!result.ok) {\n        throw new Error(`Telegram API \u8FD4\u56DE\u9519\u8BEF: ${result.description}`);\n      }\n      \n      console.log(`\uD83D\uDCF1 \u6D88\u606F\u53D1\u9001\u6210\u529F - Message ID: ${result.result.message_id}`);\n      return {\n        success: true,\n        message: '\u6D88\u606F\u53D1\u9001\u6210\u529F',\n        messageId: result.result.message_id\n      };\n\n    } catch (error) {\n      console.error(`\uD83D\uDCF1 \u7B2C ${attempt} \u6B21\u6D88\u606F\u53D1\u9001\u5931\u8D25:`, error);\n      \n      // \u8BE6\u7EC6\u7684\u9519\u8BEF\u5206\u7C7B\n      let errorMessage = error.message;\n      let errorType = 'unknown';\n      \n      if (error.name === 'AbortError' || error.message.includes('timeout')) {\n        errorMessage = '\u8BF7\u6C42\u8D85\u65F6 - Telegram API \u54CD\u5E94\u65F6\u95F4\u8FC7\u957F';\n        errorType = 'timeout';\n      } else if (error.message.includes('fetch') || error.message.includes('Failed to fetch') || error.message.includes('network')) {\n        errorMessage = '\u7F51\u7EDC\u8BF7\u6C42\u5931\u8D25 - \u65E0\u6CD5\u8FDE\u63A5\u5230 Telegram API\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5';\n        errorType = 'network';\n      } else if (error.message.includes('internal error')) {\n        errorMessage = 'Cloudflare Worker \u5185\u90E8\u9519\u8BEF - \u53EF\u80FD\u662F\u7F51\u7EDC\u9650\u5236\u6216\u8D44\u6E90\u9650\u5236';\n        errorType = 'worker_error';\n      } else if (error.message.includes('chat not found') || error.message.includes('Bad Request: chat not found')) {\n        errorMessage = '\u804A\u5929\u672A\u627E\u5230 - \u8BF7\u68C0\u67E5 Chat ID \u662F\u5426\u6B63\u786E\uFF0C\u6216\u786E\u8BA4\u673A\u5668\u4EBA\u5DF2\u52A0\u5165\u7FA4\u7EC4/\u9891\u9053';\n        errorType = 'chat_not_found';\n      } else if (error.message.includes('bot was blocked') || error.message.includes('Forbidden: bot was blocked')) {\n        errorMessage = '\u673A\u5668\u4EBA\u88AB\u7528\u6237\u5C4F\u853D - \u8BF7\u8054\u7CFB\u7528\u6237\u89E3\u9664\u5C4F\u853D';\n        errorType = 'bot_blocked';\n      } else if (error.message.includes('Unauthorized') || error.message.includes('401')) {\n        errorMessage = 'Bot Token \u65E0\u6548 - \u8BF7\u68C0\u67E5 TELEGRAM_BOT_TOKEN \u73AF\u5883\u53D8\u91CF\u914D\u7F6E';\n        errorType = 'unauthorized';\n      } else if (error.message.includes('Bad Request')) {\n        errorMessage = `\u8BF7\u6C42\u683C\u5F0F\u9519\u8BEF - ${error.message}`;\n        errorType = 'bad_request';\n      } else if (error.message.includes('Too Many Requests') || error.message.includes('429')) {\n        errorMessage = '\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41 - Telegram API \u9650\u6D41\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5';\n        errorType = 'rate_limit';\n      } else if (error.message.includes('Internal Server Error') || error.message.includes('500')) {\n        errorMessage = 'Telegram \u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF - \u8BF7\u7A0D\u540E\u91CD\u8BD5';\n        errorType = 'server_error';\n      }\n      \n      console.log(`\uD83D\uDCF1 \u9519\u8BEF\u7C7B\u578B: ${errorType} (${error.name}), \u9519\u8BEF\u6D88\u606F: ${errorMessage}`);\n      console.log(`\uD83D\uDCF1 \u539F\u59CB\u9519\u8BEF:`, error);\n      \n      // \u521B\u5EFA\u5305\u542B\u8BE6\u7EC6\u4FE1\u606F\u7684\u9519\u8BEF\u5BF9\u8C61\n      const detailedError = new Error(errorMessage);\n      detailedError.type = errorType;\n      detailedError.attempt = attempt;\n      detailedError.originalError = error;\n      \n      throw detailedError;\n    }\n  }\n\n  /**\n   * \u7F51\u7EDC\u8FDE\u901A\u6027\u68C0\u6D4B\n   */\n  async checkNetworkConnectivity() {\n    try {\n      console.log(`\uD83D\uDCF1 \u68C0\u6D4B\u5230 api.telegram.org \u7684\u8FDE\u901A\u6027...`);\n      \n      // \u4F7F\u7528\u7B80\u5355\u7684GET\u8BF7\u6C42\u68C0\u6D4B\u8FDE\u901A\u6027\n      const response = await fetch('https://api.telegram.org/bot' + this.config.botToken + '/getMe', {\n        method: 'GET',\n        headers: {\n          'User-Agent': 'lzreview-bot/1.0'\n        },\n        signal: AbortSignal.timeout(10000) // 10\u79D2\u8D85\u65F6\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        if (result.ok) {\n          return {\n            success: true,\n            message: `Bot @${result.result.username} \u8FDE\u63A5\u6B63\u5E38`\n          };\n        }\n      }\n      \n      return {\n        success: false,\n        message: `HTTP ${response.status} - ${response.statusText}`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `\u7F51\u7EDC\u8FDE\u63A5\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u6D4B\u8BD5Telegram\u63A8\u9001\u529F\u80FD\n   */\n  async test(testConfig = {}) {\n    try {\n      // \u9996\u5148\u68C0\u67E5\u57FA\u672C\u914D\u7F6E\n      if (!this.config.botToken) {\n        return {\n          success: false,\n          message: 'Bot Token \u672A\u914D\u7F6E\uFF0C\u8BF7\u68C0\u67E5\u73AF\u5883\u53D8\u91CF TELEGRAM_BOT_TOKEN'\n        };\n      }\n\n      if (!this.config.apiUrl) {\n        return {\n          success: false,\n          message: 'API URL \u672A\u914D\u7F6E\uFF0C\u8BF7\u68C0\u67E5 Bot Token \u683C\u5F0F'\n        };\n      }\n\n      console.log('\uD83D\uDCF1 \u914D\u7F6E\u68C0\u67E5\u5B8C\u6210\uFF0C\u5F00\u59CB\u9A8C\u8BC1Bot Token...');\n      \n      const testChatId = testConfig.testChatId;\n      \n      if (!testChatId) {\n        return {\n          success: false,\n          message: '\u8BF7\u63D0\u4F9B\u6D4B\u8BD5\u7528\u7684 Chat ID'\n        };\n      }\n\n      // \u76F4\u63A5\u5C1D\u8BD5\u53D1\u9001\u6D4B\u8BD5\u6D88\u606F\uFF08\u8DF3\u8FC7getBotInfo\u4EE5\u907F\u514D\u53EF\u80FD\u7684\u7F51\u7EDC\u95EE\u9898\uFF09\n      console.log('\uD83D\uDCF1 \u53D1\u9001\u6D4B\u8BD5\u6D88\u606F...');\n      const testMessage = this.generateTestMessage();\n      const result = await this.sendMessage(testChatId, testMessage);\n      \n      return {\n        success: result.success,\n        message: result.success \n          ? `\u6D4B\u8BD5\u6D88\u606F\u5DF2\u53D1\u9001\u5230 Chat ID: ${testChatId}` \n          : `\u6D4B\u8BD5\u6D88\u606F\u53D1\u9001\u5931\u8D25: ${result.message}`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `Telegram\u63A8\u9001\u6D4B\u8BD5\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210\u6D4B\u8BD5\u6D88\u606F\n   */\n  generateTestMessage() {\n    return `\uD83E\uDDEA lzreview Telegram\u63A8\u9001\u6D4B\u8BD5\n\n\u2705 \u5982\u679C\u60A8\u6536\u5230\u8FD9\u6761\u6D88\u606F\uFF0C\u8BF4\u660ETelegram\u63A8\u9001\u529F\u80FD\u6B63\u5E38\u5DE5\u4F5C\n\n\uD83D\uDCCA \u6D4B\u8BD5\u4FE1\u606F:\n\u2022 \u6D4B\u8BD5\u65F6\u95F4: ${this.formatDate(new Date())}\n\u2022 \u63A8\u9001\u65B9\u5F0F: Telegram Bot API\n\u2022 \u6D88\u606F\u683C\u5F0F: \u7EAF\u6587\u672C\n\n\u8FD9\u662F\u6765\u81EA lzreview \u8BC4\u8BBA\u7CFB\u7EDF\u7684\u6D4B\u8BD5\u6D88\u606F`;\n  }\n\n  /**\n   * \u83B7\u53D6Bot\u4FE1\u606F\uFF08\u7528\u4E8E\u9A8C\u8BC1Token\uFF09\n   */\n  async getBotInfo() {\n    try {\n      if (!this.config.botToken) {\n        throw new Error('Telegram Bot Token \u672A\u914D\u7F6E');\n      }\n\n      if (!this.config.apiUrl) {\n        throw new Error('Telegram API URL \u672A\u914D\u7F6E');\n      }\n\n      const response = await fetch(`${this.config.apiUrl}/getMe`, {\n        method: 'GET'\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP\u9519\u8BEF: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      if (!result.ok) {\n        throw new Error(`API\u9519\u8BEF: ${result.description}`);\n      }\n\n      return {\n        success: true,\n        botInfo: result.result\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: `\u83B7\u53D6Bot\u4FE1\u606F\u5931\u8D25: ${error.message}`\n      };\n    }\n  }\n\n  /**\n   * \u8F6C\u4E49HTML\u7279\u6B8A\u5B57\u7B26\n   */\n  escapeHTML(text) {\n    if (!text) return '';\n    return text\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;');\n  }\n\n  /**\n   * \u622A\u65AD\u6587\u672C\n   */\n  truncateText(text, maxLength) {\n    if (!text) return '';\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength - 3) + '...';\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u65E5\u671F\n   */\n  formatDate(date) {\n    if (!date) return '';\n    \n    const d = new Date(date);\n    if (isNaN(d.getTime())) return '';\n    \n    return d.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    });\n  }\n}", "import { EmailNotifier } from '../notifiers/email.js';\nimport { TelegramNotifier } from '../notifiers/telegram.js';\n\n/**\n * \u901A\u77E5\u63A8\u9001\u670D\u52A1\u6838\u5FC3\u6A21\u5757\n * \u8D1F\u8D23\u7BA1\u7406\u548C\u534F\u8C03\u4E0D\u540C\u7C7B\u578B\u7684\u901A\u77E5\u63A8\u9001\u5668\n */\nexport class NotificationService {\n  constructor(env) {\n    this.env = env;\n    this.notifiers = {};\n    \n    // \u521D\u59CB\u5316\u53EF\u7528\u7684\u63A8\u9001\u5668\n    this.initializeNotifiers();\n  }\n\n  /**\n   * \u521D\u59CB\u5316\u901A\u77E5\u63A8\u9001\u5668\n   */\n  initializeNotifiers() {\n    // \u90AE\u7BB1\u63A8\u9001\u5668 (\u4F7F\u7528 Resend)\n    if (this.env.RESEND_API_KEY) {\n      this.notifiers.email = new EmailNotifier({\n        apiKey: this.env.RESEND_API_KEY,\n        fromName: this.env.NOTIFICATION_FROM_NAME || 'lzreview\u8BC4\u8BBA\u7CFB\u7EDF',\n        fromEmail: this.env.NOTIFICATION_FROM_EMAIL || 'notifications@example.com'\n      });\n    }\n\n    // Telegram\u63A8\u9001\u5668\n    if (this.env.TELEGRAM_BOT_TOKEN) {\n      this.notifiers.telegram = new TelegramNotifier({\n        botToken: this.env.TELEGRAM_BOT_TOKEN,\n        parseMode: this.env.TELEGRAM_PARSE_MODE || 'HTML'\n      });\n    }\n\n    // \u672A\u6765\u53EF\u4EE5\u6DFB\u52A0\u66F4\u591A\u63A8\u9001\u5668\uFF1A\n    // - \u4F01\u4E1A\u5FAE\u4FE1\u63A8\u9001\u5668\n    // - \u9489\u9489\u63A8\u9001\u5668\n    // - Webhook\u63A8\u9001\u5668\n    // - \u7B49\u7B49...\n  }\n\n  /**\n   * \u83B7\u53D6\u53EF\u7528\u7684\u63A8\u9001\u5668\u5217\u8868\n   */\n  getAvailableNotifiers() {\n    return Object.keys(this.notifiers);\n  }\n\n  /**\n   * \u68C0\u67E5\u6307\u5B9A\u63A8\u9001\u5668\u662F\u5426\u53EF\u7528\n   */\n  isNotifierAvailable(type) {\n    return !!this.notifiers[type];\n  }\n\n  /**\n   * \u53D1\u9001\u65B0\u8BC4\u8BBA\u901A\u77E5\n   */\n  async sendNewCommentNotification(commentData, notificationConfig) {\n    const notifications = [];\n    \n    try {\n      // \u90AE\u7BB1\u901A\u77E5\n      if (notificationConfig.email && this.notifiers.email) {\n        const emailResult = await this.notifiers.email.sendNewCommentNotification(\n          commentData, \n          notificationConfig.email\n        );\n        \n        notifications.push({\n          type: 'email',\n          success: emailResult.success,\n          message: emailResult.message,\n          details: emailResult.details\n        });\n      }\n\n      // Telegram\u901A\u77E5\n      if (notificationConfig.telegram && this.notifiers.telegram) {\n        const telegramResult = await this.notifiers.telegram.sendNewCommentNotification(\n          commentData, \n          notificationConfig.telegram\n        );\n        \n        notifications.push({\n          type: 'telegram',\n          success: telegramResult.success,\n          message: telegramResult.message,\n          details: telegramResult.details\n        });\n      }\n\n      // \u672A\u6765\u53EF\u4EE5\u6DFB\u52A0\u5176\u4ED6\u7C7B\u578B\u7684\u901A\u77E5\n      // if (notificationConfig.webhook && this.notifiers.webhook) { ... }\n      // if (notificationConfig.wechat && this.notifiers.wechat) { ... }\n\n      return {\n        success: notifications.some(n => n.success),\n        results: notifications,\n        summary: this.generateNotificationSummary(notifications)\n      };\n\n    } catch (error) {\n      console.error('\u901A\u77E5\u53D1\u9001\u5931\u8D25:', error);\n      return {\n        success: false,\n        error: error.message,\n        results: notifications\n      };\n    }\n  }\n\n  /**\n   * \u6D4B\u8BD5\u63A8\u9001\u5668\u8FDE\u63A5\n   */\n  async testNotifier(type, config) {\n    if (!this.notifiers[type]) {\n      return {\n        success: false,\n        message: `\u63A8\u9001\u5668\u7C7B\u578B \"${type}\" \u4E0D\u53EF\u7528`\n      };\n    }\n\n    try {\n      return await this.notifiers[type].test(config);\n    } catch (error) {\n      console.error(`\u6D4B\u8BD5${type}\u63A8\u9001\u5668\u5931\u8D25:`, error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  }\n\n  /**\n   * \u751F\u6210\u901A\u77E5\u7ED3\u679C\u6458\u8981\n   */\n  generateNotificationSummary(notifications) {\n    const total = notifications.length;\n    const successful = notifications.filter(n => n.success).length;\n    const failed = total - successful;\n\n    if (total === 0) {\n      return '\u672A\u914D\u7F6E\u4EFB\u4F55\u901A\u77E5\u65B9\u5F0F';\n    }\n\n    if (successful === total) {\n      return `\u6240\u6709\u901A\u77E5\u53D1\u9001\u6210\u529F (${successful}/${total})`;\n    } else if (successful === 0) {\n      return `\u6240\u6709\u901A\u77E5\u53D1\u9001\u5931\u8D25 (${failed}/${total})`;\n    } else {\n      return `\u90E8\u5206\u901A\u77E5\u53D1\u9001\u6210\u529F (${successful}/${total})\uFF0C${failed}\u4E2A\u5931\u8D25`;\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u901A\u77E5\u914D\u7F6E\u6A21\u677F\n   */\n  getNotificationConfigTemplate() {\n    return {\n      email: {\n        enabled: false,\n        recipients: [], // \u7BA1\u7406\u5458\u90AE\u7BB1\u5217\u8868\n        subscribers: [], // \u8BA2\u9605\u8005\u90AE\u7BB1\u5217\u8868\n        includePageInfo: true,\n        includeCommentContent: true,\n        template: 'default'\n      },\n      telegram: {\n        enabled: false,\n        chatIds: [], // \u63A5\u6536\u901A\u77E5\u7684Chat ID\u5217\u8868\n        includePageInfo: true,\n        includeCommentContent: true,\n        template: 'default'\n      },\n      // \u672A\u6765\u6269\u5C55\u7684\u914D\u7F6E\u9879\n      webhook: {\n        enabled: false,\n        url: '',\n        method: 'POST',\n        headers: {},\n        template: 'default'\n      }\n    };\n  }\n}\n\n/**\n * \u901A\u77E5\u5DE5\u5177\u51FD\u6570\n */\nexport class NotificationUtils {\n  /**\n   * \u9A8C\u8BC1\u90AE\u7BB1\u5730\u5740\n   */\n  static isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  /**\n   * \u9A8C\u8BC1Telegram Chat ID\n   */\n  static isValidChatId(chatId) {\n    if (typeof chatId === 'number') {\n      return true; // \u6570\u5B57\u7C7B\u578B\u7684Chat ID\n    }\n    if (typeof chatId === 'string') {\n      // \u5B57\u7B26\u4E32\u7C7B\u578B\u7684Chat ID\uFF0C\u53EF\u80FD\u662F\u7528\u6237\u540D(@username)\u6216\u8005\u7EAF\u6570\u5B57\u5B57\u7B26\u4E32\n      return /^@[\\w_]+$/.test(chatId) || /^-?\\d+$/.test(chatId);\n    }\n    return false;\n  }\n\n  /**\n   * \u9A8C\u8BC1\u901A\u77E5\u914D\u7F6E\n   */\n  static validateNotificationConfig(config) {\n    const errors = [];\n\n    // \u9A8C\u8BC1\u90AE\u7BB1\u914D\u7F6E\n    if (config.email && config.email.enabled) {\n      if (!config.email.recipients || !Array.isArray(config.email.recipients)) {\n        errors.push('\u90AE\u7BB1\u914D\u7F6E\uFF1A\u6536\u4EF6\u4EBA\u5217\u8868\u5FC5\u987B\u662F\u6570\u7EC4');\n      } else {\n        config.email.recipients.forEach((email, index) => {\n          if (!this.isValidEmail(email)) {\n            errors.push(`\u90AE\u7BB1\u914D\u7F6E\uFF1A\u7B2C${index + 1}\u4E2A\u6536\u4EF6\u4EBA\u90AE\u7BB1\u683C\u5F0F\u65E0\u6548 - ${email}`);\n          }\n        });\n      }\n\n      if (config.email.subscribers && Array.isArray(config.email.subscribers)) {\n        config.email.subscribers.forEach((email, index) => {\n          if (!this.isValidEmail(email)) {\n            errors.push(`\u90AE\u7BB1\u914D\u7F6E\uFF1A\u7B2C${index + 1}\u4E2A\u8BA2\u9605\u8005\u90AE\u7BB1\u683C\u5F0F\u65E0\u6548 - ${email}`);\n          }\n        });\n      }\n    }\n\n    // \u9A8C\u8BC1Telegram\u914D\u7F6E\n    if (config.telegram && config.telegram.enabled) {\n      if (!config.telegram.chatIds || !Array.isArray(config.telegram.chatIds)) {\n        errors.push('Telegram\u914D\u7F6E\uFF1AChat ID\u5217\u8868\u5FC5\u987B\u662F\u6570\u7EC4');\n      } else if (config.telegram.chatIds.length === 0) {\n        errors.push('Telegram\u914D\u7F6E\uFF1A\u81F3\u5C11\u9700\u8981\u914D\u7F6E\u4E00\u4E2AChat ID');\n      } else {\n        config.telegram.chatIds.forEach((chatId, index) => {\n          if (!this.isValidChatId(chatId)) {\n            errors.push(`Telegram\u914D\u7F6E\uFF1A\u7B2C${index + 1}\u4E2AChat ID\u683C\u5F0F\u65E0\u6548 - ${chatId}`);\n          }\n        });\n      }\n    }\n\n    // \u9A8C\u8BC1Webhook\u914D\u7F6E\n    if (config.webhook && config.webhook.enabled) {\n      if (!config.webhook.url || !config.webhook.url.startsWith('http')) {\n        errors.push('Webhook\u914D\u7F6E\uFF1AURL\u5730\u5740\u65E0\u6548');\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  /**\n   * \u6E05\u7406\u548C\u683C\u5F0F\u5316\u8BC4\u8BBA\u6570\u636E\u7528\u4E8E\u901A\u77E5\n   */\n  static formatCommentForNotification(comment) {\n    return {\n      id: comment.id,\n      pageUrl: comment.pageUrl || comment.page_url,\n      pageTitle: comment.pageTitle || this.extractPageTitle(comment.pageUrl || comment.page_url),\n      authorName: comment.authorName || comment.author_name,\n      authorEmail: comment.authorEmail || comment.author_email,\n      content: comment.content,\n      createdAt: comment.createdAt || comment.created_at,\n      parentId: comment.parentId || comment.parent_id,\n      isReply: !!(comment.parentId || comment.parent_id)\n    };\n  }\n\n  /**\n   * \u4ECEURL\u63D0\u53D6\u9875\u9762\u6807\u9898\uFF08\u7B80\u5355\u5B9E\u73B0\uFF09\n   */\n  static extractPageTitle(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      \n      // \u79FB\u9664\u6587\u4EF6\u6269\u5C55\u540D\u548C\u8DEF\u5F84\u5206\u9694\u7B26\n      const title = pathname\n        .split('/')\n        .filter(segment => segment && segment !== 'index')\n        .pop() || urlObj.hostname;\n      \n      return title.replace(/\\.(html|htm|php)$/, '') || '\u672A\u77E5\u9875\u9762';\n    } catch {\n      return '\u672A\u77E5\u9875\u9762';\n    }\n  }\n\n  /**\n   * \u751F\u6210\u901A\u77E5\u6458\u8981\u6587\u672C\n   */\n  static generateNotificationDigest(comments, timeFrame = '24\u5C0F\u65F6') {\n    if (!comments || comments.length === 0) {\n      return `\u8FC7\u53BB${timeFrame}\u5185\u6CA1\u6709\u65B0\u8BC4\u8BBA`;\n    }\n\n    const pageGroups = {};\n    comments.forEach(comment => {\n      const pageUrl = comment.pageUrl || comment.page_url;\n      if (!pageGroups[pageUrl]) {\n        pageGroups[pageUrl] = [];\n      }\n      pageGroups[pageUrl].push(comment);\n    });\n\n    const summary = Object.entries(pageGroups)\n      .map(([pageUrl, pageComments]) => {\n        const pageTitle = this.extractPageTitle(pageUrl);\n        return `${pageTitle}: ${pageComments.length}\u6761\u8BC4\u8BBA`;\n      })\n      .join('\uFF0C');\n\n    return `\u8FC7\u53BB${timeFrame}\u5185\u6536\u5230${comments.length}\u6761\u65B0\u8BC4\u8BBA\uFF1A${summary}`;\n  }\n}", "import { NotificationService, NotificationUtils } from '../services/notification.js';\nimport { jsonResponse, errorResponse, successResponse } from '../utils/response.js';\n\n/**\n * \u901A\u77E5\u63A8\u9001\u914D\u7F6E\u548C\u7BA1\u7406\u5904\u7406\u5668\n */\nexport async function handleNotifications(request, db, env) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  try {\n    switch (method) {\n      case 'GET':\n        // \u83B7\u53D6\u901A\u77E5\u914D\u7F6E\n        if (url.pathname === '/api/notifications/config') {\n          return await getNotificationConfig(request, db);\n        }\n        // \u83B7\u53D6\u53EF\u7528\u7684\u63A8\u9001\u5668\u5217\u8868\n        if (url.pathname === '/api/notifications/notifiers') {\n          return await getAvailableNotifiers(request, env);\n        }\n        // \u83B7\u53D6\u90AE\u4EF6\u8BA2\u9605\u5217\u8868\n        if (url.pathname === '/api/notifications/subscribers') {\n          return await getEmailSubscribers(request, db);\n        }\n        // \u83B7\u53D6 Telegram \u8BA2\u9605\u5217\u8868\n        if (url.pathname === '/api/notifications/telegram-subscribers') {\n          return await getTelegramSubscribers(request, db);\n        }\n        return errorResponse('\u672A\u627E\u5230\u5BF9\u5E94\u7684API\u7AEF\u70B9', 404);\n\n      case 'POST':\n        // \u66F4\u65B0\u901A\u77E5\u914D\u7F6E\n        if (url.pathname === '/api/notifications/config') {\n          return await updateNotificationConfig(request, db);\n        }\n        // \u6D4B\u8BD5\u63A8\u9001\u5668\n        if (url.pathname === '/api/notifications/test') {\n          return await testNotificationService(request, db, env);\n        }\n        // \u6DFB\u52A0\u90AE\u4EF6\u8BA2\u9605\n        if (url.pathname === '/api/notifications/subscribe') {\n          return await addEmailSubscriber(request, db);\n        }\n        // \u6DFB\u52A0 Telegram \u8BA2\u9605\n        if (url.pathname === '/api/notifications/telegram-subscribe') {\n          return await addTelegramSubscriber(request, db);\n        }\n        // \u624B\u52A8\u53D1\u9001\u901A\u77E5\n        if (url.pathname === '/api/notifications/send') {\n          return await sendManualNotification(request, db, env);\n        }\n        return errorResponse('\u672A\u627E\u5230\u5BF9\u5E94\u7684API\u7AEF\u70B9', 404);\n\n      case 'DELETE':\n        // \u5220\u9664\u90AE\u4EF6\u8BA2\u9605\n        if (url.pathname.startsWith('/api/notifications/subscribe/')) {\n          return await removeEmailSubscriber(request, db);\n        }\n        // \u5220\u9664 Telegram \u8BA2\u9605\n        if (url.pathname.startsWith('/api/notifications/telegram-subscribe/')) {\n          return await removeTelegramSubscriber(request, db);\n        }\n        return errorResponse('\u672A\u627E\u5230\u5BF9\u5E94\u7684API\u7AEF\u70B9', 404);\n\n      default:\n        return errorResponse('\u4E0D\u652F\u6301\u7684\u8BF7\u6C42\u65B9\u6CD5', 405);\n    }\n  } catch (error) {\n    console.error('\u901A\u77E5API\u9519\u8BEF:', error);\n    return errorResponse('\u5904\u7406\u901A\u77E5\u8BF7\u6C42\u65F6\u53D1\u751F\u9519\u8BEF', 500);\n  }\n}\n\n/**\n * \u83B7\u53D6\u901A\u77E5\u914D\u7F6E\n */\nasync function getNotificationConfig(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const config = await db.getNotificationConfig();\n    return successResponse(config);\n  } catch (error) {\n    console.error('\u83B7\u53D6\u901A\u77E5\u914D\u7F6E\u5931\u8D25:', error);\n    // \u5982\u679C\u6570\u636E\u5E93\u4E2D\u6CA1\u6709\u914D\u7F6E\uFF0C\u8FD4\u56DE\u9ED8\u8BA4\u914D\u7F6E\n    const notificationService = new NotificationService();\n    return successResponse(notificationService.getNotificationConfigTemplate());\n  }\n}\n\n/**\n * \u66F4\u65B0\u901A\u77E5\u914D\u7F6E\n */\nasync function updateNotificationConfig(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const data = await request.json();\n    \n    // \u9A8C\u8BC1\u914D\u7F6E\u6570\u636E\n    const validation = NotificationUtils.validateNotificationConfig(data);\n    if (!validation.isValid) {\n      return errorResponse(`\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25: ${validation.errors.join('; ')}`);\n    }\n\n    // \u4FDD\u5B58\u914D\u7F6E\n    await db.saveNotificationConfig(data);\n    \n    return successResponse(null, '\u901A\u77E5\u914D\u7F6E\u66F4\u65B0\u6210\u529F');\n  } catch (error) {\n    console.error('\u66F4\u65B0\u901A\u77E5\u914D\u7F6E\u5931\u8D25:', error);\n    return errorResponse('\u66F4\u65B0\u901A\u77E5\u914D\u7F6E\u5931\u8D25');\n  }\n}\n\n/**\n * \u83B7\u53D6\u53EF\u7528\u7684\u63A8\u9001\u5668\u5217\u8868\n */\nasync function getAvailableNotifiers(request, env) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  try {\n    const notificationService = new NotificationService(env);\n    const availableNotifiers = notificationService.getAvailableNotifiers();\n    \n    const notifiersInfo = {\n      email: {\n        available: notificationService.isNotifierAvailable('email'),\n        name: '\u90AE\u7BB1\u63A8\u9001',\n        description: '\u901A\u8FC7 Resend API \u53D1\u9001\u90AE\u4EF6\u901A\u77E5',\n        requiredEnvVars: ['RESEND_API_KEY'],\n        configured: !!env.RESEND_API_KEY\n      },\n      telegram: {\n        available: notificationService.isNotifierAvailable('telegram'),\n        name: 'Telegram\u63A8\u9001',\n        description: '\u901A\u8FC7 Telegram Bot API \u53D1\u9001\u6D88\u606F\u901A\u77E5',\n        requiredEnvVars: ['TELEGRAM_BOT_TOKEN'],\n        configured: !!env.TELEGRAM_BOT_TOKEN\n      }\n      // \u672A\u6765\u53EF\u4EE5\u6DFB\u52A0\u66F4\u591A\u63A8\u9001\u5668\u4FE1\u606F\uFF0C\u5982\uFF1A\n      // webhook: { ... }\n      // wechat: { ... }\n      // dingtalk: { ... }\n    };\n\n    return successResponse({\n      available: availableNotifiers,\n      notifiers: notifiersInfo\n    });\n  } catch (error) {\n    console.error('\u83B7\u53D6\u63A8\u9001\u5668\u5217\u8868\u5931\u8D25:', error);\n    return errorResponse('\u83B7\u53D6\u63A8\u9001\u5668\u5217\u8868\u5931\u8D25');\n  }\n}\n\n/**\n * \u6D4B\u8BD5\u901A\u77E5\u670D\u52A1\n */\nasync function testNotificationService(request, db, env) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const data = await request.json();\n    const { type, config } = data;\n\n    if (!type) {\n      return errorResponse('\u8BF7\u6307\u5B9A\u8981\u6D4B\u8BD5\u7684\u63A8\u9001\u5668\u7C7B\u578B');\n    }\n\n    const notificationService = new NotificationService(env);\n    \n    if (!notificationService.isNotifierAvailable(type)) {\n      return errorResponse(`\u63A8\u9001\u5668\u7C7B\u578B \"${type}\" \u4E0D\u53EF\u7528\uFF0C\u8BF7\u68C0\u67E5\u73AF\u5883\u53D8\u91CF\u914D\u7F6E`);\n    }\n\n    const testResult = await notificationService.testNotifier(type, config);\n    \n    if (testResult.success) {\n      return successResponse(testResult, '\u63A8\u9001\u5668\u6D4B\u8BD5\u6210\u529F');\n    } else {\n      return errorResponse(`\u63A8\u9001\u5668\u6D4B\u8BD5\u5931\u8D25: ${testResult.message}`);\n    }\n  } catch (error) {\n    console.error('\u6D4B\u8BD5\u901A\u77E5\u670D\u52A1\u5931\u8D25:', error);\n    return errorResponse('\u6D4B\u8BD5\u901A\u77E5\u670D\u52A1\u5931\u8D25');\n  }\n}\n\n/**\n * \u53D1\u9001\u624B\u52A8\u901A\u77E5\uFF08\u7528\u4E8E\u6D4B\u8BD5\uFF09\n */\nasync function sendManualNotification(request, db, env) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const data = await request.json();\n    const { commentId, testEmail } = data;\n\n    let commentData;\n    \n    if (commentId) {\n      // \u53D1\u9001\u6307\u5B9A\u8BC4\u8BBA\u7684\u901A\u77E5\n      commentData = await db.getCommentById(commentId);\n      if (!commentData) {\n        return errorResponse('\u8BC4\u8BBA\u4E0D\u5B58\u5728');\n      }\n    } else {\n      // \u53D1\u9001\u6D4B\u8BD5\u901A\u77E5\n      commentData = {\n        id: 'test-' + Date.now(),\n        pageUrl: 'https://example.com/test-page',\n        pageTitle: '\u6D4B\u8BD5\u9875\u9762',\n        authorName: '\u6D4B\u8BD5\u7528\u6237',\n        authorEmail: 'test@example.com',\n        content: '\u8FD9\u662F\u4E00\u6761\u6D4B\u8BD5\u8BC4\u8BBA\uFF0C\u7528\u4E8E\u9A8C\u8BC1\u901A\u77E5\u63A8\u9001\u529F\u80FD\u662F\u5426\u6B63\u5E38\u5DE5\u4F5C\u3002',\n        createdAt: new Date().toISOString(),\n        parentId: null,\n        isReply: false\n      };\n    }\n\n    // \u83B7\u53D6\u901A\u77E5\u914D\u7F6E\n    const notificationConfig = await db.getNotificationConfig();\n    \n    // \u5982\u679C\u63D0\u4F9B\u4E86\u6D4B\u8BD5\u90AE\u7BB1\uFF0C\u4E34\u65F6\u4FEE\u6539\u914D\u7F6E\n    if (testEmail && NotificationUtils.isValidEmail(testEmail)) {\n      notificationConfig.email = {\n        ...notificationConfig.email,\n        enabled: true,\n        recipients: [testEmail],\n        subscribers: []\n      };\n    }\n\n    // \u53D1\u9001\u901A\u77E5\n    const notificationService = new NotificationService(env);\n    const formattedComment = NotificationUtils.formatCommentForNotification(commentData);\n    const result = await notificationService.sendNewCommentNotification(\n      formattedComment, \n      notificationConfig\n    );\n\n    if (result.success) {\n      return successResponse(result, '\u901A\u77E5\u53D1\u9001\u6210\u529F');\n    } else {\n      return errorResponse(`\u901A\u77E5\u53D1\u9001\u5931\u8D25: ${result.error || result.summary}`);\n    }\n  } catch (error) {\n    console.error('\u53D1\u9001\u624B\u52A8\u901A\u77E5\u5931\u8D25:', error);\n    return errorResponse('\u53D1\u9001\u624B\u52A8\u901A\u77E5\u5931\u8D25');\n  }\n}\n\n/**\n * \u83B7\u53D6\u90AE\u4EF6\u8BA2\u9605\u5217\u8868\n */\nasync function getEmailSubscribers(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const subscribers = await db.getEmailSubscribers();\n    return successResponse({ subscribers });\n  } catch (error) {\n    console.error('\u83B7\u53D6\u90AE\u4EF6\u8BA2\u9605\u5217\u8868\u5931\u8D25:', error);\n    return successResponse({ subscribers: [] });\n  }\n}\n\n/**\n * \u6DFB\u52A0\u90AE\u4EF6\u8BA2\u9605\n */\nasync function addEmailSubscriber(request, db) {\n  try {\n    const data = await request.json();\n    const { email, name, pageUrl } = data;\n\n    if (!email || !NotificationUtils.isValidEmail(email)) {\n      return errorResponse('\u8BF7\u63D0\u4F9B\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740');\n    }\n\n    // \u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u8BA2\u9605\n    const existingSubscriber = await db.getEmailSubscriber(email);\n    if (existingSubscriber) {\n      return errorResponse('\u8BE5\u90AE\u7BB1\u5DF2\u7ECF\u8BA2\u9605\u4E86\u901A\u77E5');\n    }\n\n    // \u6DFB\u52A0\u8BA2\u9605\n    const subscriberId = await db.addEmailSubscriber({\n      email,\n      name: name || email.split('@')[0],\n      pageUrl: pageUrl || null,\n      subscribedAt: new Date().toISOString(),\n      isActive: true\n    });\n\n    return successResponse({ \n      id: subscriberId,\n      message: '\u90AE\u7BB1\u8BA2\u9605\u6210\u529F'\n    }, '\u90AE\u7BB1\u8BA2\u9605\u6210\u529F');\n  } catch (error) {\n    console.error('\u6DFB\u52A0\u90AE\u4EF6\u8BA2\u9605\u5931\u8D25:', error);\n    return errorResponse('\u6DFB\u52A0\u90AE\u4EF6\u8BA2\u9605\u5931\u8D25');\n  }\n}\n\n/**\n * \u5220\u9664\u90AE\u4EF6\u8BA2\u9605\n */\nasync function removeEmailSubscriber(request, db) {\n  try {\n    const url = new URL(request.url);\n    const pathParts = url.pathname.split('/');\n    const emailOrId = decodeURIComponent(pathParts[pathParts.length - 1]);\n\n    if (!emailOrId) {\n      return errorResponse('\u8BF7\u63D0\u4F9B\u90AE\u7BB1\u5730\u5740\u6216\u8BA2\u9605ID');\n    }\n\n    // \u5C1D\u8BD5\u6309\u90AE\u7BB1\u5730\u5740\u5220\u9664\n    let deleted = false;\n    if (NotificationUtils.isValidEmail(emailOrId)) {\n      deleted = await db.removeEmailSubscriberByEmail(emailOrId);\n    } else {\n      // \u5C1D\u8BD5\u6309ID\u5220\u9664\n      deleted = await db.removeEmailSubscriberById(emailOrId);\n    }\n\n    if (deleted) {\n      return successResponse(null, '\u53D6\u6D88\u8BA2\u9605\u6210\u529F');\n    } else {\n      return errorResponse('\u672A\u627E\u5230\u5BF9\u5E94\u7684\u8BA2\u9605\u8BB0\u5F55', 404);\n    }\n  } catch (error) {\n    console.error('\u5220\u9664\u90AE\u4EF6\u8BA2\u9605\u5931\u8D25:', error);\n    return errorResponse('\u5220\u9664\u90AE\u4EF6\u8BA2\u9605\u5931\u8D25');\n  }\n}\n\n/**\n * \u5904\u7406\u65B0\u8BC4\u8BBA\u7684\u901A\u77E5\u63A8\u9001\n * \u8FD9\u4E2A\u51FD\u6570\u4F1A\u5728\u8BC4\u8BBA\u521B\u5EFA\u6210\u529F\u540E\u88AB\u8C03\u7528\n */\nexport async function triggerCommentNotification(commentData, db, env) {\n  try {\n    // \u83B7\u53D6\u901A\u77E5\u914D\u7F6E\n    const notificationConfig = await db.getNotificationConfig();\n    \n    // \u68C0\u67E5\u662F\u5426\u542F\u7528\u4E86\u4EFB\u4F55\u901A\u77E5\u65B9\u5F0F\n    const hasEnabledNotifications = (\n      (notificationConfig.email && notificationConfig.email.enabled) ||\n      (notificationConfig.telegram && notificationConfig.telegram.enabled) ||\n      (notificationConfig.webhook && notificationConfig.webhook.enabled)\n    );\n\n    if (!hasEnabledNotifications) {\n      return { success: true, message: '\u672A\u914D\u7F6E\u901A\u77E5' };\n    }\n\n    // \u521B\u5EFA\u901A\u77E5\u670D\u52A1\u5B9E\u4F8B\n    const notificationService = new NotificationService(env);\n    \n    // \u683C\u5F0F\u5316\u8BC4\u8BBA\u6570\u636E\n    const formattedComment = NotificationUtils.formatCommentForNotification(commentData);\n    \n    // \u53D1\u9001\u901A\u77E5\n    const result = await notificationService.sendNewCommentNotification(\n      formattedComment, \n      notificationConfig\n    );\n    \n    return result;\n  } catch (error) {\n    console.error('\u901A\u77E5\u63A8\u9001\u5931\u8D25:', error.message);\n    return { success: false, error: error.message };\n  }\n}\n\n/**\n * \u83B7\u53D6 Telegram \u8BA2\u9605\u5217\u8868\n */\nasync function getTelegramSubscribers(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const subscribers = await db.getTelegramSubscribers();\n    return successResponse({ subscribers });\n  } catch (error) {\n    console.error('\u83B7\u53D6 Telegram \u8BA2\u9605\u5217\u8868\u5931\u8D25:', error);\n    return successResponse({ subscribers: [] });\n  }\n}\n\n/**\n * \u6DFB\u52A0 Telegram \u8BA2\u9605\n */\nasync function addTelegramSubscriber(request, db) {\n  try {\n    const data = await request.json();\n    const { chatId, name, chatType, pageUrl } = data;\n\n    if (!chatId || !NotificationUtils.isValidChatId(chatId)) {\n      return errorResponse('\u8BF7\u63D0\u4F9B\u6709\u6548\u7684 Chat ID');\n    }\n\n    // \u68C0\u67E5\u662F\u5426\u5DF2\u7ECF\u8BA2\u9605\n    const existingSubscriber = await db.getTelegramSubscriber(chatId);\n    if (existingSubscriber) {\n      return errorResponse('\u8BE5 Chat ID \u5DF2\u7ECF\u8BA2\u9605\u4E86\u901A\u77E5');\n    }\n\n    // \u6DFB\u52A0\u8BA2\u9605\n    const subscriberId = await db.addTelegramSubscriber({\n      chatId,\n      name: name || `Chat ${chatId}`,\n      chatType: chatType || 'private',\n      pageUrl: pageUrl || null,\n      subscribedAt: new Date().toISOString(),\n      isActive: true\n    });\n\n    return successResponse({ \n      id: subscriberId,\n      message: 'Telegram \u8BA2\u9605\u6210\u529F'\n    }, 'Telegram \u8BA2\u9605\u6210\u529F');\n  } catch (error) {\n    console.error('\u6DFB\u52A0 Telegram \u8BA2\u9605\u5931\u8D25:', error);\n    return errorResponse('\u6DFB\u52A0 Telegram \u8BA2\u9605\u5931\u8D25');\n  }\n}\n\n/**\n * \u5220\u9664 Telegram \u8BA2\u9605\n */\nasync function removeTelegramSubscriber(request, db) {\n  try {\n    const url = new URL(request.url);\n    const pathParts = url.pathname.split('/');\n    const chatIdOrId = decodeURIComponent(pathParts[pathParts.length - 1]);\n\n    if (!chatIdOrId) {\n      return errorResponse('\u8BF7\u63D0\u4F9B Chat ID \u6216\u8BA2\u9605ID');\n    }\n\n    // \u5C1D\u8BD5\u6309 Chat ID \u5220\u9664\n    let deleted = false;\n    if (NotificationUtils.isValidChatId(chatIdOrId)) {\n      deleted = await db.removeTelegramSubscriberByChatId(chatIdOrId);\n    } else {\n      // \u5C1D\u8BD5\u6309ID\u5220\u9664\n      deleted = await db.removeTelegramSubscriberById(chatIdOrId);\n    }\n\n    if (deleted) {\n      return successResponse(null, '\u53D6\u6D88\u8BA2\u9605\u6210\u529F');\n    } else {\n      return errorResponse('\u672A\u627E\u5230\u5BF9\u5E94\u7684\u8BA2\u9605\u8BB0\u5F55', 404);\n    }\n  } catch (error) {\n    console.error('\u5220\u9664 Telegram \u8BA2\u9605\u5931\u8D25:', error);\n    return errorResponse('\u5220\u9664 Telegram \u8BA2\u9605\u5931\u8D25');\n  }\n}", "import { validateComment, sanitizeInput } from '../utils/validation.js';\nimport { getClientIP, getUserAgent, rateLimitCheck, containsBadWords, generateCSRFToken, verifyCSRFToken, hashIP, sanitizeErrorMessage } from '../utils/security.js';\nimport { jsonResponse, errorResponse, successResponse } from '../utils/response.js';\nimport { triggerCommentNotification } from './notifications.js';\n\nconst cache = new Map();\nconst csrfTokens = new Map(); // \u5B58\u50A8CSRF\u4EE4\u724C\n\nexport async function handleComments(request, db, env, ctx) {\n  const url = new URL(request.url);\n  const method = request.method;\n  const ip = getClientIP(request);\n\n  // \u57FA\u7840\u901F\u7387\u9650\u5236\uFF08\u4F7F\u7528\u6570\u636E\u5E93\uFF09\n  try {\n    const ipHash = await hashIP(ip);\n    const isAllowed = await db.checkRateLimit(ipHash, 10, 1);\n    if (!isAllowed) {\n      return errorResponse('\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5', 429);\n    }\n  } catch (error) {\n    console.error('Rate limit check error:', error);\n    // \u5982\u679C\u901F\u7387\u9650\u5236\u68C0\u67E5\u5931\u8D25\uFF0C\u4F7F\u7528\u5185\u5B58\u5907\u7528\u65B9\u6848\n    if (!rateLimitCheck(ip, cache)) {\n      return errorResponse('\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5', 429);\n    }\n  }\n\n  try {\n    switch (method) {\n      case 'GET':\n        // CSRF\u4EE4\u724C\u7AEF\u70B9\n        if (url.pathname === '/api/comments/csrf-token') {\n          return await getCSRFToken(request);\n        }\n        // \u7BA1\u7406\u5458\u4E13\u7528\u63A5\u53E3\n        if (url.pathname === '/api/comments/all') {\n          return await getAllCommentsForAdmin(request, db);\n        }\n        if (url.pathname === '/api/comments/stats') {\n          return await getStatsForAdmin(request, db);\n        }\n        if (url.pathname === '/api/comments/pages') {\n          return await getPagesForAdmin(request, db);\n        }\n        return await getComments(request, db);\n      case 'POST':\n        return await createComment(request, db, env, ctx);\n      case 'DELETE':\n        if (url.pathname === '/api/comments/batch') {\n          return await batchDeleteComments(request, db);\n        }\n        if (url.pathname === '/api/comments/page') {\n          return await deletePageComments(request, db);\n        }\n        return await deleteComment(request, db);\n      default:\n        return errorResponse('\u4E0D\u652F\u6301\u7684\u8BF7\u6C42\u65B9\u6CD5', 405);\n    }\n  } catch (error) {\n    console.error('API Error:', error);\n    const safeMessage = sanitizeErrorMessage(error);\n    return errorResponse(safeMessage, 500);\n  }\n}\n\nasync function getComments(request, db) {\n  const url = new URL(request.url);\n  const pageUrl = url.searchParams.get('page');\n  const limit = Math.min(parseInt(url.searchParams.get('limit')) || 50, 100);\n  const offset = parseInt(url.searchParams.get('offset')) || 0;\n\n  if (!pageUrl) {\n    return errorResponse('\u7F3A\u5C11\u9875\u9762URL\u53C2\u6570');\n  }\n\n  // \u89E3\u7801URL\u53C2\u6570\n  const decodedPageUrl = decodeURIComponent(pageUrl);\n  \n  // \u767D\u540D\u5355\u9A8C\u8BC1\n  try {\n    const urlObj = new URL(decodedPageUrl);\n    const hostname = urlObj.hostname;\n    const hostWithPort = urlObj.host; // \u5305\u542B\u7AEF\u53E3\u7684\u4E3B\u673A\u540D\n    \n    // \u68C0\u67E5hostname\u548Chost\u4E24\u79CD\u683C\u5F0F\n    const isHostnameWhitelisted = await db.isWhitelisted(hostname);\n    const isHostWithPortWhitelisted = await db.isWhitelisted(hostWithPort);\n    \n    if (!isHostnameWhitelisted && !isHostWithPortWhitelisted) {\n      return errorResponse(`\u8BC4\u8BBA\u7CFB\u7EDF\u5DF2\u8BBE\u7F6E\u4E3A\u767D\u540D\u5355\u6A21\u5F0F\uFF0C\u57DF\u540D ${hostWithPort} \u672A\u88AB\u6388\u6743\u4F7F\u7528\u8BC4\u8BBA\u529F\u80FD\u3002\u8BF7\u8054\u7CFB\u7CFB\u7EDF\u7BA1\u7406\u5458\u3002`, 403);\n    }\n  } catch (error) {\n    console.error('\u767D\u540D\u5355\u9A8C\u8BC1\u5931\u8D25:', error);\n    return errorResponse('\u57DF\u540D\u9A8C\u8BC1\u5931\u8D25');\n  }\n\n  try {\n    const comments = await db.getComments(decodedPageUrl, limit, offset);\n    const total = await db.getCommentCount(decodedPageUrl);\n\n    // \u7EC4\u7EC7\u8BC4\u8BBA\u4E3A\u6811\u5F62\u7ED3\u6784\n    const commentsTree = buildCommentsTree(comments);\n\n    return successResponse({\n      comments: commentsTree,\n      total,\n      hasMore: offset + limit < total\n    });\n  } catch (error) {\n    console.error('Get comments error:', error);\n    return errorResponse('\u83B7\u53D6\u8BC4\u8BBA\u5931\u8D25');\n  }\n}\n\nasync function createComment(request, db, env, ctx) {\n  try {\n    let data;\n    try {\n      data = await request.json();\n    } catch (jsonError) {\n      console.error('JSON parse error:', jsonError);\n      return errorResponse('\u8BF7\u6C42\u6570\u636E\u683C\u5F0F\u9519\u8BEF');\n    }\n    // \u767D\u540D\u5355\u9A8C\u8BC1\n    try {\n      const urlObj = new URL(data.pageUrl);\n      const hostname = urlObj.hostname;\n      const hostWithPort = urlObj.host; // \u5305\u542B\u7AEF\u53E3\u7684\u4E3B\u673A\u540D\n      \n      // \u68C0\u67E5hostname\u548Chost\u4E24\u79CD\u683C\u5F0F\n      const isHostnameWhitelisted = await db.isWhitelisted(hostname);\n      const isHostWithPortWhitelisted = await db.isWhitelisted(hostWithPort);\n      \n      if (!isHostnameWhitelisted && !isHostWithPortWhitelisted) {\n        return errorResponse(`\u8BC4\u8BBA\u7CFB\u7EDF\u5DF2\u8BBE\u7F6E\u4E3A\u767D\u540D\u5355\u6A21\u5F0F\uFF0C\u57DF\u540D ${hostWithPort} \u672A\u88AB\u6388\u6743\u4F7F\u7528\u8BC4\u8BBA\u529F\u80FD\u3002\u8BF7\u8054\u7CFB\u7CFB\u7EDF\u7BA1\u7406\u5458\u3002`, 403);\n      }\n    } catch (error) {\n      console.error('\u767D\u540D\u5355\u9A8C\u8BC1\u5931\u8D25:', error);\n      return errorResponse('\u57DF\u540D\u9A8C\u8BC1\u5931\u8D25');\n    }\n    \n    // CSRF\u4EE4\u724C\u9A8C\u8BC1\uFF08\u6682\u65F6\u7981\u7528\uFF0C\u7A0D\u540E\u4F18\u5316\uFF09\n    // const csrfToken = data.csrfToken;\n    // if (!validateCSRFToken(request, csrfToken)) {\n    //   return errorResponse('\u5B89\u5168\u9A8C\u8BC1\u5931\u8D25\uFF0C\u8BF7\u5237\u65B0\u9875\u9762\u91CD\u8BD5', 403);\n    // }\n    \n    // \u6570\u636E\u9A8C\u8BC1\n    const validation = validateComment(data);\n    if (!validation.isValid) {\n      return errorResponse(validation.errors.join('; '));\n    }\n\n    // \u5185\u5BB9\u5B89\u5168\u68C0\u67E5\n    if (containsBadWords(data.content) || containsBadWords(data.authorName)) {\n      return errorResponse('\u8BC4\u8BBA\u5305\u542B\u4E0D\u5F53\u5185\u5BB9\uFF0C\u8BF7\u4FEE\u6539\u540E\u91CD\u8BD5');\n    }\n\n    // \u51C0\u5316\u8F93\u5165\u6570\u636E\n    const clientIP = getClientIP(request);\n    const hashedIP = await hashIP(clientIP);\n    \n    const sanitizedData = {\n      pageUrl: data.pageUrl,\n      authorName: sanitizeInput(data.authorName.trim()),\n      authorEmail: data.authorEmail ? data.authorEmail.trim() : null,\n      authorQQ: data.authorQQ ? data.authorQQ.trim() : null,\n      content: sanitizeInput(data.content.trim()),\n      parentId: data.parentId || null,\n      ipAddress: hashedIP, // \u5B58\u50A8\u54C8\u5E0C\u540E\u7684IP\n      userAgent: getUserAgent(request)\n    };\n\n    // \u63D2\u5165\u8BC4\u8BBA\n    try {\n      const commentId = await db.addComment(sanitizedData);\n      \n      // \u4F7F\u7528 ctx.waitUntil \u5F02\u6B65\u89E6\u53D1\u901A\u77E5\u63A8\u9001\uFF08\u4E0D\u963B\u585E\u54CD\u5E94\uFF0C\u4F46\u786E\u4FDD\u4EFB\u52A1\u5B8C\u6210\uFF09\n      const commentDataForNotification = {\n        ...sanitizedData,\n        id: commentId,\n        createdAt: new Date().toISOString()\n      };\n      \n      // \u4F7F\u7528 waitUntil \u786E\u4FDD\u5F02\u6B65\u901A\u77E5\u4EFB\u52A1\u80FD\u591F\u5B8C\u6210\n      ctx.waitUntil(\n        triggerCommentNotification(commentDataForNotification, db, env)\n          .then(result => {\n            if (result.success) {\n              console.log('\uD83D\uDCEC \u8BC4\u8BBA\u901A\u77E5\u53D1\u9001\u6210\u529F');\n            } else {\n              console.error('\uD83D\uDCEC \u901A\u77E5\u53D1\u9001\u5931\u8D25:', result.error || result.summary);\n            }\n          })\n          .catch(error => {\n            console.error('\uD83D\uDCEC \u901A\u77E5\u53D1\u9001\u5F02\u5E38:', error.message);\n          })\n      );\n      \n      return successResponse(\n        { \n          id: commentId,\n          message: '\u8BC4\u8BBA\u53D1\u5E03\u6210\u529F'\n        },\n        '\u8BC4\u8BBA\u53D1\u5E03\u6210\u529F'\n      );\n    } catch (dbError) {\n      console.error('Database insert error:', dbError);\n      const safeMessage = sanitizeErrorMessage(dbError);\n      return errorResponse(`\u53D1\u5E03\u8BC4\u8BBA\u5931\u8D25\uFF1A${safeMessage}`);\n    }\n\n  } catch (error) {\n    console.error('Create comment error:', error);\n    const safeMessage = sanitizeErrorMessage(error);\n    return errorResponse(`\u53D1\u5E03\u8BC4\u8BBA\u5931\u8D25\uFF1A${safeMessage}`);\n  }\n}\n\nasync function deleteComment(request, db) {\n  const url = new URL(request.url);\n  const pathParts = url.pathname.split('/');\n  const commentId = pathParts[pathParts.length - 1];\n\n  if (!commentId || isNaN(commentId)) {\n    return errorResponse('\u65E0\u6548\u7684\u8BC4\u8BBAID');\n  }\n\n  // \u68C0\u67E5\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  try {\n    const deleted = await db.deleteComment(parseInt(commentId), token);\n    \n    if (deleted) {\n      return successResponse(null, '\u8BC4\u8BBA\u5220\u9664\u6210\u529F');\n    } else {\n      return errorResponse('\u8BC4\u8BBA\u4E0D\u5B58\u5728\u6216\u5220\u9664\u5931\u8D25', 404);\n    }\n  } catch (error) {\n    if (error.message === 'Unauthorized') {\n      return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n    }\n    console.error('Delete comment error:', error);\n    return errorResponse('\u5220\u9664\u8BC4\u8BBA\u5931\u8D25');\n  }\n}\n\nfunction buildCommentsTree(comments) {\n  const commentMap = {};\n  const rootComments = [];\n\n  // \u521B\u5EFA\u8BC4\u8BBA\u6620\u5C04\n  comments.forEach(comment => {\n    comment.replies = [];\n    commentMap[comment.id] = comment;\n  });\n\n  // \u6784\u5EFA\u6811\u5F62\u7ED3\u6784\n  comments.forEach(comment => {\n    if (comment.parent_id && commentMap[comment.parent_id]) {\n      commentMap[comment.parent_id].replies.push(comment);\n    } else {\n      rootComments.push(comment);\n    }\n  });\n\n  return rootComments;\n}\n\n// \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u6240\u6709\u8BC4\u8BBA\nasync function getAllCommentsForAdmin(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const comments = await db.getAllComments();\n    return successResponse({ comments });\n  } catch (error) {\n    console.error('Get all comments error:', error);\n    return errorResponse('\u83B7\u53D6\u8BC4\u8BBA\u5931\u8D25');\n  }\n}\n\n// \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\nasync function getStatsForAdmin(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const stats = await db.getStats();\n    return successResponse(stats);\n  } catch (error) {\n    console.error('Get stats error:', error);\n    return errorResponse('\u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25');\n  }\n}\n\n// \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u83B7\u53D6\u9875\u9762\u5217\u8868\nasync function getPagesForAdmin(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const pages = await db.getPages();\n    return successResponse({ pages });\n  } catch (error) {\n    console.error('Get pages error:', error);\n    return errorResponse('\u83B7\u53D6\u9875\u9762\u5217\u8868\u5931\u8D25');\n  }\n}\n\n// \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u6279\u91CF\u5220\u9664\u8BC4\u8BBA\nasync function batchDeleteComments(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const data = await request.json();\n    const { ids } = data;\n\n    if (!ids || !Array.isArray(ids) || ids.length === 0) {\n      return errorResponse('\u8BF7\u63D0\u4F9B\u8981\u5220\u9664\u7684\u8BC4\u8BBAID\u5217\u8868');\n    }\n\n    const deletedCount = await db.batchDeleteComments(ids);\n    return successResponse({ deletedCount }, `\u6210\u529F\u5220\u9664 ${deletedCount} \u6761\u8BC4\u8BBA`);\n  } catch (error) {\n    console.error('Batch delete error:', error);\n    return errorResponse('\u6279\u91CF\u5220\u9664\u5931\u8D25');\n  }\n}\n\n// \u7BA1\u7406\u5458\u4E13\u7528\uFF1A\u5220\u9664\u9875\u9762\u6240\u6709\u8BC4\u8BBA\nasync function deletePageComments(request, db) {\n  // \u9A8C\u8BC1\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  if (!db.isValidAdmin(token)) {\n    return errorResponse('\u7BA1\u7406\u5458\u6743\u9650\u9A8C\u8BC1\u5931\u8D25', 403);\n  }\n\n  try {\n    const data = await request.json();\n    const { pageUrl } = data;\n\n    if (!pageUrl) {\n      return errorResponse('\u8BF7\u63D0\u4F9B\u9875\u9762URL');\n    }\n\n    const deletedCount = await db.deletePageComments(pageUrl);\n    return successResponse({ deletedCount }, `\u6210\u529F\u5220\u9664 ${deletedCount} \u6761\u8BC4\u8BBA`);\n  } catch (error) {\n    console.error('Delete page comments error:', error);\n    return errorResponse('\u5220\u9664\u9875\u9762\u8BC4\u8BBA\u5931\u8D25');\n  }\n}\n\n// \u83B7\u53D6CSRF\u4EE4\u724C\nasync function getCSRFToken(request) {\n  const ip = getClientIP(request);\n  const token = generateCSRFToken();\n  \n  // \u5B58\u50A8\u4EE4\u724C\uFF0C\u8BBE\u7F6E30\u5206\u949F\u8FC7\u671F\n  const expiresAt = Date.now() + 30 * 60 * 1000;\n  csrfTokens.set(ip, { token, expiresAt });\n  \n  // \u6E05\u7406\u8FC7\u671F\u4EE4\u724C\n  cleanExpiredTokens();\n  \n  return successResponse({ csrfToken: token });\n}\n\n// \u9A8C\u8BC1CSRF\u4EE4\u724C\nfunction validateCSRFToken(request, token) {\n  if (!token) return false;\n  \n  const ip = getClientIP(request);\n  const stored = csrfTokens.get(ip);\n  \n  if (!stored || Date.now() > stored.expiresAt) {\n    return false;\n  }\n  \n  return stored.token === token;\n}\n\n// \u6E05\u7406\u8FC7\u671F\u4EE4\u724C\nfunction cleanExpiredTokens() {\n  const now = Date.now();\n  for (const [ip, data] of csrfTokens.entries()) {\n    if (now > data.expiresAt) {\n      csrfTokens.delete(ip);\n    }\n  }\n}", "import { jsonResponse, errorResponse, successResponse } from '../utils/response.js';\n\nexport async function handleWhitelist(request, db, env) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  // \u68C0\u67E5\u7BA1\u7406\u5458\u6743\u9650\n  const authHeader = request.headers.get('Authorization');\n  const token = authHeader?.replace('Bearer ', '');\n\n  if (!token || !db.isValidAdmin(token)) {\n    return errorResponse('\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650', 401);\n  }\n\n  try {\n    switch (method) {\n      case 'GET':\n        return await getWhitelist(db);\n      case 'POST':\n        return await addToWhitelist(request, db);\n      case 'DELETE':\n        return await removeFromWhitelist(request, db);\n      default:\n        return errorResponse('\u4E0D\u652F\u6301\u7684\u8BF7\u6C42\u65B9\u6CD5', 405);\n    }\n  } catch (error) {\n    console.error('Whitelist API Error:', error);\n    return errorResponse('\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF', 500);\n  }\n}\n\nasync function getWhitelist(db) {\n  try {\n    const whitelist = await db.getWhitelist();\n    return successResponse({ whitelist });\n  } catch (error) {\n    console.error('Get whitelist error:', error);\n    return errorResponse('\u83B7\u53D6\u767D\u540D\u5355\u5931\u8D25');\n  }\n}\n\nasync function addToWhitelist(request, db) {\n  try {\n    const data = await request.json();\n    const { domain, description } = data;\n\n    if (!domain) {\n      return errorResponse('\u57DF\u540D\u4E0D\u80FD\u4E3A\u7A7A');\n    }\n\n    await db.addToWhitelist(domain, description);\n    return successResponse(null, '\u6DFB\u52A0\u6210\u529F');\n  } catch (error) {\n    console.error('Add to whitelist error:', error);\n    return errorResponse('\u6DFB\u52A0\u5931\u8D25');\n  }\n}\n\nasync function removeFromWhitelist(request, db) {\n  try {\n    const url = new URL(request.url);\n    const pathParts = url.pathname.split('/');\n    const id = pathParts[pathParts.length - 1];\n\n    if (!id || isNaN(id)) {\n      return errorResponse('\u65E0\u6548\u7684ID');\n    }\n\n    await db.removeFromWhitelist(parseInt(id));\n    return successResponse(null, '\u5220\u9664\u6210\u529F');\n  } catch (error) {\n    console.error('Remove from whitelist error:', error);\n    return errorResponse('\u5220\u9664\u5931\u8D25');\n  }\n}", "import { DatabaseService } from './database/db.js';\nimport { handleComments } from './handlers/comments.js';\nimport { handleWhitelist } from './handlers/whitelist.js';\nimport { handleNotifications } from './handlers/notifications.js';\nimport { corsResponse, htmlResponse, jsonResponse } from './utils/response.js';\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const db = new DatabaseService(env.DB);\n    db.setAdminToken(env.ADMIN_TOKEN);\n\n    // \u5904\u7406CORS\u9884\u68C0\u8BF7\u6C42\n    if (request.method === 'OPTIONS') {\n      return corsResponse();\n    }\n\n    // \u8DEF\u7531\u5904\u7406\n    if (url.pathname.startsWith('/api/comments')) {\n      return handleComments(request, db, env, ctx);\n    }\n\n    // \u767D\u540D\u5355\u7BA1\u7406\n    if (url.pathname.startsWith('/api/whitelist')) {\n      return handleWhitelist(request, db, env);\n    }\n\n    // \u901A\u77E5\u63A8\u9001\u7BA1\u7406\n    if (url.pathname.startsWith('/api/notifications')) {\n      return handleNotifications(request, db, env);\n    }\n\n    // \u7BA1\u7406\u9762\u677F\n    if (url.pathname === '/admin') {\n      return serveAdminPanel(env);\n    }\n\n    // \u6D4B\u8BD5\u8DEF\u7531 - \u68C0\u67E5\u6570\u636E\u5E93\u8FDE\u63A5\n    if (url.pathname === '/api/test') {\n      try {\n        const testQuery = await db.db.prepare('SELECT 1 as test').first();\n        return jsonResponse({ status: 'ok', database: 'connected', test: testQuery });\n      } catch (error) {\n        return jsonResponse({ status: 'error', message: error.message }, 500);\n      }\n    }\n\n    // \u63D0\u4F9B\u5D4C\u5165\u5F0FJS\u6587\u4EF6\n    if (url.pathname === '/embed.js') {\n      return serveEmbedScript(request, env);\n    }\n\n    // \u63D0\u4F9BCSS\u6587\u4EF6\n    if (url.pathname === '/embed.css') {\n      return serveEmbedCSS();\n    }\n\n    // \u9ED8\u8BA4\u9996\u9875 - \u663E\u793A\u90E8\u7F72\u6210\u529F\u4FE1\u606F\n    return serveHomePage(env);\n  }\n};\n\nasync function serveHomePage(env) {\n  const html = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>lzreview \u8BC4\u8BBA\u7CFB\u7EDF</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 2rem;\n            line-height: 1.6;\n            color: #333;\n        }\n        .success {\n            background: #d4edda;\n            color: #155724;\n            padding: 1rem;\n            border-radius: 8px;\n            margin-bottom: 2rem;\n            border: 1px solid #c3e6cb;\n        }\n        .test-section {\n            background: #fff3cd;\n            color: #856404;\n            padding: 1rem;\n            border-radius: 8px;\n            margin: 2rem 0;\n            border: 1px solid #ffeaa7;\n        }\n        .code {\n            background: #f8f9fa;\n            padding: 1rem;\n            border-radius: 6px;\n            border: 1px solid #e9ecef;\n            font-family: 'Monaco', 'Menlo', monospace;\n            overflow-x: auto;\n        }\n        h1 { color: #2c3e50; }\n        h2 { color: #34495e; margin-top: 2rem; }\n        .footer {\n            margin-top: 3rem;\n            padding-top: 2rem;\n            border-top: 1px solid #eee;\n            text-align: center;\n            color: #666;\n        }\n        .nav-tabs {\n            border-bottom: 2px solid #dee2e6;\n            margin-bottom: 2rem;\n        }\n        .nav-tab {\n            display: inline-block;\n            padding: 0.5rem 1rem;\n            margin-right: 1rem;\n            background: #f8f9fa;\n            border: 1px solid #dee2e6;\n            border-bottom: none;\n            border-radius: 8px 8px 0 0;\n            cursor: pointer;\n            text-decoration: none;\n            color: #495057;\n        }\n        .nav-tab.active {\n            background: #fff;\n            color: #007bff;\n            border-bottom: 2px solid #fff;\n            margin-bottom: -2px;\n        }\n        .tab-content {\n            display: none;\n        }\n        .tab-content.active {\n            display: block;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"success\">\n        <h2>\uD83C\uDF89 \u606D\u559C\u4F60\uFF0Clzreview \u8BC4\u8BBA\u7CFB\u7EDF\u5DF2\u90E8\u7F72\u6210\u529F\uFF01</h2>\n        <p>\u4F60\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762\u7684\u65B9\u5F0F\u4E3A\u4F60\u7684\u9759\u6001\u7F51\u7AD9\u6DFB\u52A0\u8BC4\u8BBA\u529F\u80FD\u3002</p>\n    </div>\n\n    <h1>lzreview \u8BC4\u8BBA\u7CFB\u7EDF</h1>\n    \n    <div class=\"nav-tabs\">\n        <a href=\"#\" class=\"nav-tab active\" onclick=\"showTab('test')\">\uD83D\uDCDD \u8BC4\u8BBA\u6D4B\u8BD5</a>\n        <a href=\"#\" class=\"nav-tab\" onclick=\"showTab('guide')\">\uD83D\uDCD6 \u4F7F\u7528\u6307\u5357</a>\n        <a href=\"#\" class=\"nav-tab\" onclick=\"showTab('api')\">\uD83D\uDD27 API\u6587\u6863</a>\n    </div>\n\n    <div id=\"test-content\" class=\"tab-content active\">\n        <div class=\"test-section\">\n            <h2>\uD83E\uDDEA \u8BC4\u8BBA\u529F\u80FD\u6D4B\u8BD5</h2>\n            <p>\u5728\u8FD9\u91CC\u4F60\u53EF\u4EE5\u76F4\u63A5\u6D4B\u8BD5\u8BC4\u8BBA\u7CFB\u7EDF\u7684\u529F\u80FD\uFF0C\u8BD5\u8BD5\u53D1\u5E03\u4E00\u6761\u8BC4\u8BBA\u5427\uFF01</p>\n            <button onclick=\"testDatabase()\" style=\"margin-bottom: 1rem; padding: 0.5rem 1rem; background: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer;\">\n                \uD83D\uDD27 \u6D4B\u8BD5\u6570\u636E\u5E93\u8FDE\u63A5\n            </button>\n            <div id=\"test-result\" style=\"margin-bottom: 1rem;\"></div>\n        </div>\n        \n        <!-- \u8BC4\u8BBA\u6D4B\u8BD5\u5BB9\u5668 -->\n        <div id=\"lzreview-comments\"></div>\n    </div>\n\n    <div id=\"guide-content\" class=\"tab-content\">\n        <h2>\uD83D\uDE80 \u5FEB\u901F\u96C6\u6210</h2>\n        <p>\u5728\u4F60\u7684\u7F51\u9875\u4E2D\u6DFB\u52A0\u4EE5\u4E0B\u4EE3\u7801\u5373\u53EF\u542F\u7528\u8BC4\u8BBA\u529F\u80FD\uFF1A</p>\n\n        <div class=\"code\">\n&lt;!-- \u8BC4\u8BBA\u5BB9\u5668 --&gt;\n&lt;div id=\"lzreview-comments\"&gt;&lt;/div&gt;\n\n&lt;!-- \u5F15\u5165\u8BC4\u8BBA\u7CFB\u7EDF --&gt;\n&lt;script&gt;\nwindow.lzreviewConfig = {\n    apiUrl: '${env.SITE_URL || 'your-worker-url.workers.dev'}',\n    pageUrl: window.location.href,\n    placeholder: '\u8BF4\u70B9\u4EC0\u4E48\u5427...'\n};\n&lt;/script&gt;\n&lt;script src=\"${env.SITE_URL || 'your-worker-url.workers.dev'}/embed.js\"&gt;&lt;/script&gt;\n        </div>\n\n        <h2>\u2699\uFE0F \u914D\u7F6E\u9009\u9879</h2>\n        <p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>window.lzreviewConfig</code> \u5BF9\u8C61\u81EA\u5B9A\u4E49\u8BC4\u8BBA\u7CFB\u7EDF\uFF1A</p>\n        \n        <div class=\"code\">\nwindow.lzreviewConfig = {\n    apiUrl: '\u4F60\u7684Worker\u57DF\u540D',           // \u5FC5\u586B\uFF1AAPI\u5730\u5740\n    pageUrl: window.location.href,     // \u5FC5\u586B\uFF1A\u5F53\u524D\u9875\u9762URL\n    placeholder: '\u8BF4\u70B9\u4EC0\u4E48\u5427...',      // \u53EF\u9009\uFF1A\u8BC4\u8BBA\u6846\u5360\u4F4D\u7B26\n    maxLength: 1000,                   // \u53EF\u9009\uFF1A\u8BC4\u8BBA\u6700\u5927\u957F\u5EA6\n    requireName: true,                 // \u53EF\u9009\uFF1A\u662F\u5426\u5FC5\u987B\u586B\u5199\u59D3\u540D\n    requireEmail: false                // \u53EF\u9009\uFF1A\u662F\u5426\u5FC5\u987B\u586B\u5199\u90AE\u7BB1\n};\n        </div>\n    </div>\n\n    <div id=\"api-content\" class=\"tab-content\">\n        <h2>\uD83D\uDEE0 \u7BA1\u7406\u529F\u80FD</h2>\n        <p>\u4F7F\u7528\u7BA1\u7406\u5458\u4EE4\u724C\u53EF\u4EE5\u5220\u9664\u8BC4\u8BBA\uFF1A</p>\n        <div class=\"code\">\nDELETE /api/comments/{id}\nAuthorization: Bearer your-admin-token\n        </div>\n\n        <h2>\uD83D\uDCCA \u7CFB\u7EDF\u4FE1\u606F</h2>\n        <ul>\n            <li><strong>\u7248\u672C\uFF1A</strong>1.0.0</li>\n            <li><strong>\u6570\u636E\u5E93\uFF1A</strong>Cloudflare D1</li>\n            <li><strong>\u8FD0\u884C\u65F6\uFF1A</strong>Cloudflare Workers</li>\n            <li><strong>\u90E8\u7F72\u72B6\u6001\uFF1A</strong><span style=\"color: #28a745;\">\u2705 \u6B63\u5E38\u8FD0\u884C</span></li>\n        </ul>\n    </div>\n\n    <div class=\"footer\">\n        <p>\uD83D\uDD27 Powered by <strong>lzreview</strong> - \u8F7B\u91CF\u7EA7\u9759\u6001\u7F51\u7AD9\u8BC4\u8BBA\u7CFB\u7EDF</p>\n    </div>\n\n    <script>\n        // \u6807\u7B7E\u9875\u5207\u6362\u529F\u80FD\n        function showTab(tabName) {\n            // \u9690\u85CF\u6240\u6709\u6807\u7B7E\u9875\u5185\u5BB9\n            document.querySelectorAll('.tab-content').forEach(content => {\n                content.classList.remove('active');\n            });\n            \n            // \u79FB\u9664\u6240\u6709\u6807\u7B7E\u9875\u6FC0\u6D3B\u72B6\u6001\n            document.querySelectorAll('.nav-tab').forEach(tab => {\n                tab.classList.remove('active');\n            });\n            \n            // \u663E\u793A\u9009\u4E2D\u7684\u6807\u7B7E\u9875\u5185\u5BB9\n            document.getElementById(tabName + '-content').classList.add('active');\n            \n            // \u6FC0\u6D3B\u9009\u4E2D\u7684\u6807\u7B7E\u9875\n            event.target.classList.add('active');\n        }\n\n        // \u6D4B\u8BD5\u6570\u636E\u5E93\u8FDE\u63A5\n        async function testDatabase() {\n            const resultDiv = document.getElementById('test-result');\n            resultDiv.innerHTML = '<p style=\"color: #666;\">\u6B63\u5728\u6D4B\u8BD5\u6570\u636E\u5E93\u8FDE\u63A5...</p>';\n            \n            try {\n                const response = await fetch('/api/test');\n                const data = await response.json();\n                \n                if (data.status === 'ok') {\n                    resultDiv.innerHTML = '<p style=\"color: #28a745;\">\u2705 \u6570\u636E\u5E93\u8FDE\u63A5\u6210\u529F\uFF01</p>';\n                } else {\n                    resultDiv.innerHTML = \\`<p style=\"color: #dc3545;\">\u274C \u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25\uFF1A\\${data.message}</p>\\`;\n                }\n            } catch (error) {\n                resultDiv.innerHTML = \\`<p style=\"color: #dc3545;\">\u274C \u6D4B\u8BD5\u5931\u8D25\uFF1A\\${error.message}</p>\\`;\n            }\n        }\n\n        // \u521D\u59CB\u5316\u8BC4\u8BBA\u7CFB\u7EDF\uFF08\u4EC5\u5728\u6D4B\u8BD5\u6807\u7B7E\u9875\uFF09\n        window.lzreviewConfig = {\n            apiUrl: window.location.origin,\n            pageUrl: window.location.origin + '/#test',\n            placeholder: '\u5728\u8FD9\u91CC\u6D4B\u8BD5\u8BC4\u8BBA\u529F\u80FD\uFF0C\u8BD5\u8BD5\u53D1\u5E03\u4E00\u6761\u8BC4\u8BBA\u5427\uFF01',\n            maxLength: 1000,\n            requireName: true,\n            requireEmail: false\n        };\n    </script>\n    \n    <!-- \u52A0\u8F7D\u8BC4\u8BBA\u7CFB\u7EDF -->\n    <script src=\"/embed.js\"></script>\n</body>\n</html>`;\n\n  return htmlResponse(html);\n}\n\nasync function serveEmbedScript(request, env) {\n  const embedScript = await import('./web/embed.js');\n  const script = embedScript.default.replace('{{API_URL}}', env.SITE_URL || new URL(request.url).origin);\n  \n  return new Response(script, {\n    headers: {\n      'Content-Type': 'application/javascript',\n      'Cache-Control': 'public, max-age=3600'\n    }\n  });\n}\n\nasync function serveEmbedCSS() {\n  const embedCSS = await import('./web/embed.css');\n  \n  return new Response(embedCSS.default, {\n    headers: {\n      'Content-Type': 'text/css',\n      'Cache-Control': 'public, max-age=3600'\n    }\n  });\n}\n\nasync function serveAdminPanel(env) {\n  const html = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>lzreview \u7BA1\u7406\u9762\u677F</title>\n    <style>\n        * {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n            background: #f5f5f5;\n            color: #333;\n            line-height: 1.6;\n        }\n        .container {\n            max-width: 1400px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .header {\n            background: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin-bottom: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        .login-section {\n            background: #fff;\n            padding: 30px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            text-align: center;\n            max-width: 400px;\n            margin: 50px auto;\n        }\n        .admin-section {\n            display: none;\n        }\n        .tabs {\n            display: flex;\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin-bottom: 20px;\n            overflow: hidden;\n        }\n        .tab {\n            flex: 1;\n            padding: 15px 20px;\n            background: #f8f9fa;\n            border: none;\n            cursor: pointer;\n            border-right: 1px solid #dee2e6;\n            font-size: 14px;\n            font-weight: 500;\n        }\n        .tab:last-child { border-right: none; }\n        .tab.active {\n            background: #007cba;\n            color: white;\n        }\n        .tab-content {\n            display: none;\n        }\n        .tab-content.active {\n            display: block;\n        }\n        .form-group {\n            margin-bottom: 20px;\n            text-align: left;\n        }\n        .form-label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: 500;\n            color: #555;\n        }\n        .form-input, .form-select {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            font-size: 14px;\n        }\n        .btn {\n            background: #007cba;\n            color: white;\n            padding: 12px 24px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 500;\n            margin-right: 10px;\n        }\n        .btn:hover { background: #005a87; }\n        .btn-danger {\n            background: #dc3545;\n            padding: 8px 16px;\n            font-size: 12px;\n        }\n        .btn-danger:hover { background: #c82333; }\n        .btn-success {\n            background: #28a745;\n        }\n        .btn-success:hover { background: #218838; }\n        .alert {\n            padding: 12px;\n            border-radius: 4px;\n            margin-bottom: 20px;\n        }\n        .alert-success {\n            background: #d4edda;\n            color: #155724;\n            border: 1px solid #c3e6cb;\n        }\n        .alert-error {\n            background: #f8d7da;\n            color: #721c24;\n            border: 1px solid #f5c6cb;\n        }\n        .card {\n            background: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin-bottom: 20px;\n        }\n        .stats {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n        .stat-card {\n            background: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            text-align: center;\n        }\n        .stat-number {\n            font-size: 2em;\n            font-weight: bold;\n            color: #007cba;\n        }\n        .stat-label {\n            color: #666;\n            margin-top: 5px;\n        }\n        .page-list {\n            display: grid;\n            gap: 20px;\n        }\n        .page-item {\n            background: #fff;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            border-left: 4px solid #007cba;\n        }\n        .page-title {\n            font-size: 18px;\n            font-weight: 600;\n            margin-bottom: 10px;\n            color: #333;\n        }\n        .page-url {\n            color: #666;\n            font-size: 14px;\n            margin-bottom: 10px;\n            word-break: break-all;\n        }\n        .page-stats {\n            display: flex;\n            gap: 20px;\n            margin-bottom: 15px;\n        }\n        .page-stat {\n            color: #666;\n            font-size: 14px;\n        }\n        .page-actions {\n            display: flex;\n            gap: 10px;\n        }\n        .comments-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n        }\n        .comments-table th,\n        .comments-table td {\n            padding: 12px;\n            text-align: left;\n            border-bottom: 1px solid #ddd;\n        }\n        .comments-table th {\n            background: #f8f9fa;\n            font-weight: 500;\n        }\n        .comment-content {\n            max-width: 300px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n        }\n        .batch-actions {\n            margin-bottom: 20px;\n            padding: 15px;\n            background: #f8f9fa;\n            border-radius: 4px;\n        }\n        .whitelist-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 15px;\n            background: #f8f9fa;\n            border-radius: 4px;\n            margin-bottom: 10px;\n        }\n        .loading {\n            text-align: center;\n            padding: 20px;\n            color: #666;\n        }\n        .modal {\n            display: none;\n            position: fixed;\n            z-index: 1000;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0,0,0,0.4);\n        }\n        .modal-content {\n            background-color: #fefefe;\n            margin: 15% auto;\n            padding: 20px;\n            border-radius: 8px;\n            width: 80%;\n            max-width: 500px;\n        }\n        .close {\n            color: #aaa;\n            float: right;\n            font-size: 28px;\n            font-weight: bold;\n            cursor: pointer;\n        }\n        .close:hover { color: black; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <div>\n                <h1>\uD83D\uDEE0 lzreview \u7BA1\u7406\u9762\u677F</h1>\n                <p>\u7BA1\u7406\u60A8\u7684\u8BC4\u8BBA\u7CFB\u7EDF</p>\n            </div>\n            <button id=\"logout-btn\" class=\"btn btn-danger\" style=\"display: none;\">\u9000\u51FA\u767B\u5F55</button>\n        </div>\n\n        <div id=\"login-section\" class=\"login-section\">\n            <h2>\u8BF7\u8F93\u5165\u7BA1\u7406\u5458\u5BC6\u94A5</h2>\n            <div id=\"login-message\"></div>\n            <form id=\"login-form\">\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"admin-token\">\u7BA1\u7406\u5458\u5BC6\u94A5</label>\n                    <input type=\"password\" id=\"admin-token\" class=\"form-input\" placeholder=\"\u8BF7\u8F93\u5165\u7BA1\u7406\u5458\u5BC6\u94A5\" required>\n                </div>\n                <button type=\"submit\" class=\"btn\">\u767B\u5F55</button>\n            </form>\n        </div>\n\n        <div id=\"admin-section\" class=\"admin-section\">\n            <div class=\"stats\" id=\"stats-section\">\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\" id=\"total-comments\">-</div>\n                    <div class=\"stat-label\">\u603B\u8BC4\u8BBA\u6570</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\" id=\"today-comments\">-</div>\n                    <div class=\"stat-label\">\u4ECA\u65E5\u8BC4\u8BBA</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\" id=\"total-pages\">-</div>\n                    <div class=\"stat-label\">\u9875\u9762\u6570\u91CF</div>\n                </div>\n                <div class=\"stat-card\">\n                    <div class=\"stat-number\" id=\"whitelist-count\">-</div>\n                    <div class=\"stat-label\">\u767D\u540D\u5355\u6570\u91CF</div>\n                </div>\n            </div>\n\n            <div class=\"tabs\">\n                <button class=\"tab active\" onclick=\"showTab('pages')\">\u9875\u9762\u7BA1\u7406</button>\n                <button class=\"tab\" onclick=\"showTab('comments')\">\u8BC4\u8BBA\u7BA1\u7406</button>\n                <button class=\"tab\" onclick=\"showTab('whitelist')\">\u767D\u540D\u5355\u7BA1\u7406</button>\n                <button class=\"tab\" onclick=\"showTab('notifications')\">\u901A\u77E5\u63A8\u9001</button>\n            </div>\n\n            <div id=\"pages-content\" class=\"tab-content active\">\n                <div class=\"card\">\n                    <h3>\u9875\u9762\u7BA1\u7406</h3>\n                    <div id=\"admin-message\"></div>\n                    <div id=\"pages-loading\" class=\"loading\">\u6B63\u5728\u52A0\u8F7D\u9875\u9762...</div>\n                    <div id=\"pages-list\" class=\"page-list\"></div>\n                </div>\n            </div>\n\n            <div id=\"comments-content\" class=\"tab-content\">\n                <div class=\"card\">\n                    <h3>\u8BC4\u8BBA\u7BA1\u7406</h3>\n                    <div class=\"batch-actions\">\n                        <input type=\"checkbox\" id=\"select-all\" onchange=\"toggleSelectAll()\">\n                        <label for=\"select-all\">\u5168\u9009</label>\n                        <button class=\"btn btn-danger\" onclick=\"batchDelete()\">\u6279\u91CF\u5220\u9664</button>\n                        <select id=\"page-filter\" class=\"form-select\" onchange=\"filterComments()\" style=\"width: 300px; display: inline-block;\">\n                            <option value=\"\">\u6240\u6709\u9875\u9762</option>\n                        </select>\n                    </div>\n                    <div id=\"comments-loading\" class=\"loading\">\u6B63\u5728\u52A0\u8F7D\u8BC4\u8BBA...</div>\n                    <table id=\"comments-table\" class=\"comments-table\" style=\"display: none;\">\n                        <thead>\n                            <tr>\n                                <th width=\"50\">\u9009\u62E9</th>\n                                <th>ID</th>\n                                <th>\u9875\u9762</th>\n                                <th>\u4F5C\u8005</th>\n                                <th>\u5185\u5BB9</th>\n                                <th>\u65F6\u95F4</th>\n                                <th>\u64CD\u4F5C</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"comments-tbody\">\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div id=\"whitelist-content\" class=\"tab-content\">\n                <div class=\"card\">\n                    <h3>\u767D\u540D\u5355\u7BA1\u7406</h3>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-success\" onclick=\"showAddWhitelistModal()\">\u6DFB\u52A0\u57DF\u540D</button>\n                    </div>\n                    <div id=\"whitelist-loading\" class=\"loading\">\u6B63\u5728\u52A0\u8F7D\u767D\u540D\u5355...</div>\n                    <div id=\"whitelist-list\"></div>\n                </div>\n            </div>\n\n            <div id=\"notifications-content\" class=\"tab-content\">\n                <div class=\"card\">\n                    <h3>\u901A\u77E5\u63A8\u9001\u914D\u7F6E</h3>\n                    <div id=\"notification-status\" class=\"alert\" style=\"display: none;\"></div>\n                    \n                    <!-- \u63A8\u9001\u5668\u72B6\u6001 -->\n                    <div class=\"card\" style=\"margin-bottom: 20px;\">\n                        <h4>\u63A8\u9001\u5668\u72B6\u6001</h4>\n                        <div id=\"notifiers-status\">\n                            <div class=\"loading\">\u6B63\u5728\u68C0\u67E5\u63A8\u9001\u5668\u72B6\u6001...</div>\n                        </div>\n                    </div>\n\n                    <!-- \u90AE\u7BB1\u63A8\u9001\u914D\u7F6E -->\n                    <div class=\"card\">\n                        <h4>\u90AE\u7BB1\u63A8\u9001\u914D\u7F6E</h4>\n                        <div style=\"background: #e7f3ff; padding: 15px; border-radius: 6px; margin-bottom: 20px; border-left: 4px solid #007cba;\">\n                            <h5 style=\"margin: 0 0 10px 0; color: #007cba;\">\uD83D\uDCE7 \u90AE\u7BB1\u63A8\u9001\u529F\u80FD\u8BF4\u660E</h5>\n                            <p style=\"margin: 0; color: #333; line-height: 1.5;\">\n                                <strong>\u7BA1\u7406\u5458\u90AE\u7BB1</strong>\uFF1A\u5F53\u7F51\u7AD9\u6709\u65B0\u8BC4\u8BBA\u65F6\uFF0C\u7CFB\u7EDF\u4F1A\u81EA\u52A8\u53D1\u9001\u90AE\u4EF6\u901A\u77E5\u5230\u8FD9\u4E9B\u90AE\u7BB1\uFF0C\u8BA9\u4F60\u53CA\u65F6\u4E86\u89E3\u8BC4\u8BBA\u52A8\u6001\u3002<br>\n                                <strong>\u7528\u9014</strong>\uFF1A\u9002\u5408\u7F51\u7AD9\u7BA1\u7406\u5458\u3001\u535A\u4E3B\u7B49\u9700\u8981\u53CA\u65F6\u54CD\u5E94\u8BC4\u8BBA\u7684\u4EBA\u5458\u3002<br>\n                                <strong>\u683C\u5F0F</strong>\uFF1A\u652F\u6301\u591A\u4E2A\u90AE\u7BB1\uFF0C\u7528\u9017\u53F7\u5206\u9694\uFF0C\u5982\uFF1Aadmin@example.com, blogger@example.com\n                            </p>\n                        </div>\n                        \n                        <form id=\"email-notification-form\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">\n                                    <input type=\"checkbox\" id=\"email-enabled\"> \u542F\u7528\u90AE\u7BB1\u63A8\u9001\n                                </label>\n                                <small style=\"color: #666; display: block; margin-top: 5px;\">\n                                    \u52FE\u9009\u540E\uFF0C\u6BCF\u5F53\u6709\u65B0\u8BC4\u8BBA\u53D1\u5E03\u65F6\uFF0C\u7CFB\u7EDF\u4F1A\u81EA\u52A8\u53D1\u9001\u90AE\u4EF6\u901A\u77E5\n                                </small>\n                            </div>\n                            \n                            <div id=\"email-config\" style=\"display: none;\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\" for=\"admin-emails\">\n                                        \uD83D\uDCEE \u7BA1\u7406\u5458\u90AE\u7BB1\u5730\u5740 \n                                        <span style=\"color: #dc3545;\">*</span>\n                                    </label>\n                                    <input type=\"text\" id=\"admin-emails\" class=\"form-input\" \n                                           placeholder=\"your-email@qq.com, admin@gmail.com\" \n                                           style=\"margin-bottom: 5px;\">\n                                    <small style=\"color: #666; line-height: 1.4;\">\n                                        \uD83D\uDCA1 <strong>\u4F5C\u7528</strong>\uFF1A\u5F53\u6709\u65B0\u8BC4\u8BBA\u65F6\uFF0C\u8FD9\u4E9B\u90AE\u7BB1\u4F1A\u6536\u5230\u901A\u77E5\u90AE\u4EF6<br>\n                                        \uD83D\uDCA1 <strong>\u683C\u5F0F</strong>\uFF1A\u591A\u4E2A\u90AE\u7BB1\u7528\u9017\u53F7\u5206\u9694<br>\n                                        \uD83D\uDCA1 <strong>\u5EFA\u8BAE</strong>\uFF1A\u586B\u5199\u4F60\u7ECF\u5E38\u67E5\u770B\u7684\u90AE\u7BB1\uFF0C\u5982QQ\u90AE\u7BB1\u3001Gmail\u7B49\n                                    </small>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">\n                                        <input type=\"checkbox\" id=\"include-page-info\" checked> \u5728\u90AE\u4EF6\u4E2D\u5305\u542B\u9875\u9762\u4FE1\u606F\n                                    </label>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">\n                                        <input type=\"checkbox\" id=\"include-comment-content\" checked> \u5728\u90AE\u4EF6\u4E2D\u5305\u542B\u8BC4\u8BBA\u5185\u5BB9\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <button type=\"submit\" class=\"btn\">\u4FDD\u5B58\u914D\u7F6E</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"testEmailNotification()\">\u6D4B\u8BD5\u90AE\u4EF6\u53D1\u9001</button>\n                            </div>\n                        </form>\n                    </div>\n\n                    <!-- Telegram\u63A8\u9001\u914D\u7F6E -->\n                    <div class=\"card\">\n                        <h4>Telegram\u63A8\u9001\u914D\u7F6E</h4>\n                        <div style=\"background: #e8f5e8; padding: 15px; border-radius: 6px; margin-bottom: 20px; border-left: 4px solid #28a745;\">\n                            <h5 style=\"margin: 0 0 10px 0; color: #28a745;\">\uD83D\uDCF1 Telegram\u63A8\u9001\u529F\u80FD\u8BF4\u660E</h5>\n                            <p style=\"margin: 0; color: #333; line-height: 1.5;\">\n                                <strong>Chat ID</strong>\uFF1A\u5F53\u7F51\u7AD9\u6709\u65B0\u8BC4\u8BBA\u65F6\uFF0C\u7CFB\u7EDF\u4F1A\u81EA\u52A8\u53D1\u9001\u6D88\u606F\u5230\u6307\u5B9A\u7684Telegram\u804A\u5929\uFF0C\u8BA9\u4F60\u53CA\u65F6\u4E86\u89E3\u8BC4\u8BBA\u52A8\u6001\u3002<br>\n                                <strong>\u7528\u9014</strong>\uFF1A\u9002\u5408\u5E0C\u671B\u901A\u8FC7Telegram\u5373\u65F6\u63A5\u6536\u901A\u77E5\u7684\u7528\u6237\uFF0C\u652F\u6301\u4E2A\u4EBA\u3001\u7FA4\u7EC4\u548C\u9891\u9053\u3002<br>\n                                <strong>\u914D\u7F6E</strong>\uFF1A\u9700\u8981\u5148\u521B\u5EFATelegram\u673A\u5668\u4EBA\u5E76\u83B7\u53D6Chat ID\uFF0C\u8BE6\u89C1 <a href=\"/TELEGRAM_SETUP.md\" target=\"_blank\">\u914D\u7F6E\u6307\u5357</a>\n                            </p>\n                        </div>\n                        \n                        <form id=\"telegram-notification-form\">\n                            <div class=\"form-group\">\n                                <label class=\"form-label\">\n                                    <input type=\"checkbox\" id=\"telegram-enabled\"> \u542F\u7528Telegram\u63A8\u9001\n                                </label>\n                                <small style=\"color: #666; display: block; margin-top: 5px;\">\n                                    \u52FE\u9009\u540E\uFF0C\u6BCF\u5F53\u6709\u65B0\u8BC4\u8BBA\u53D1\u5E03\u65F6\uFF0C\u7CFB\u7EDF\u4F1A\u81EA\u52A8\u53D1\u9001Telegram\u6D88\u606F\u901A\u77E5\n                                </small>\n                            </div>\n                            \n                            <div id=\"telegram-config\" style=\"display: none;\">\n                                <div class=\"form-group\">\n                                    <label class=\"form-label\" for=\"telegram-chat-ids\">\n                                        \uD83D\uDCAC \u63A5\u6536\u901A\u77E5\u7684Chat ID \n                                        <span style=\"color: #dc3545;\">*</span>\n                                    </label>\n                                    <input type=\"text\" id=\"telegram-chat-ids\" class=\"form-input\" \n                                           placeholder=\"123456789, -987654321, @your_channel\" \n                                           style=\"margin-bottom: 5px;\">\n                                    <small style=\"color: #666; line-height: 1.4;\">\n                                        \uD83D\uDCA1 <strong>\u683C\u5F0F</strong>\uFF1A\u591A\u4E2AChat ID\u7528\u9017\u53F7\u5206\u9694<br>\n                                        \uD83D\uDCA1 <strong>\u4E2A\u4EBA\u804A\u5929</strong>\uFF1A\u6B63\u6570\uFF0C\u5982 123456789<br>\n                                        \uD83D\uDCA1 <strong>\u7FA4\u7EC4\u804A\u5929</strong>\uFF1A\u8D1F\u6570\uFF0C\u5982 -987654321<br>\n                                        \uD83D\uDCA1 <strong>\u516C\u5F00\u9891\u9053</strong>\uFF1A@\u7528\u6237\u540D\uFF0C\u5982 @your_channel<br>\n                                        \uD83D\uDCA1 <strong>\u83B7\u53D6\u65B9\u6CD5</strong>\uFF1A\u67E5\u770B <a href=\"/TELEGRAM_SETUP.md\" target=\"_blank\">\u914D\u7F6E\u6307\u5357</a>\n                                    </small>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">\n                                        <input type=\"checkbox\" id=\"telegram-include-page-info\" checked> \u5728\u6D88\u606F\u4E2D\u5305\u542B\u9875\u9762\u4FE1\u606F\n                                    </label>\n                                </div>\n                                \n                                <div class=\"form-group\">\n                                    <label class=\"form-label\">\n                                        <input type=\"checkbox\" id=\"telegram-include-comment-content\" checked> \u5728\u6D88\u606F\u4E2D\u5305\u542B\u8BC4\u8BBA\u5185\u5BB9\n                                    </label>\n                                </div>\n                            </div>\n                            \n                            <div class=\"form-group\">\n                                <button type=\"submit\" class=\"btn\">\u4FDD\u5B58\u914D\u7F6E</button>\n                                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"testTelegramNotification()\">\u6D4B\u8BD5Telegram\u63A8\u9001</button>\n                            </div>\n                        </form>\n                    </div>\n\n                    <!-- \u8BA2\u9605\u8005\u7BA1\u7406 -->\n                    <div class=\"card\">\n                        <h4>\u90AE\u4EF6\u8BA2\u9605\u8005\u7BA1\u7406</h4>\n                        <div id=\"subscribers-loading\" class=\"loading\" style=\"display: none;\">\u6B63\u5728\u52A0\u8F7D\u8BA2\u9605\u8005...</div>\n                        <div id=\"subscribers-list\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- \u6DFB\u52A0\u767D\u540D\u5355\u6A21\u6001\u6846 -->\n        <div id=\"whitelist-modal\" class=\"modal\">\n            <div class=\"modal-content\">\n                <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n                <h3>\u6DFB\u52A0\u57DF\u540D\u5230\u767D\u540D\u5355</h3>\n                <form id=\"whitelist-form\">\n                    <div class=\"form-group\">\n                        <label class=\"form-label\" for=\"domain\">\u57DF\u540D</label>\n                        <input type=\"text\" id=\"domain\" class=\"form-input\" placeholder=\"example.com\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-label\" for=\"description\">\u63CF\u8FF0</label>\n                        <input type=\"text\" id=\"description\" class=\"form-input\" placeholder=\"\u53EF\u9009\u63CF\u8FF0\">\n                    </div>\n                    <button type=\"submit\" class=\"btn\">\u6DFB\u52A0</button>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        let adminToken = '';\n        let allComments = [];\n        let currentPageUrl = '';\n        const apiUrl = window.location.origin;\n\n        // \u767B\u5F55\u5904\u7406\n        document.getElementById('login-form').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            const token = document.getElementById('admin-token').value.trim();\n            \n            if (!token) {\n                showLoginMessage('\u8BF7\u8F93\u5165\u7BA1\u7406\u5458\u5BC6\u94A5', 'error');\n                return;\n            }\n\n            adminToken = token;\n            \n            try {\n                await loadStats();\n                document.getElementById('login-section').style.display = 'none';\n                document.getElementById('admin-section').style.display = 'block';\n                document.getElementById('logout-btn').style.display = 'block';\n                await loadPages();\n            } catch (error) {\n                showLoginMessage('\u5BC6\u94A5\u9A8C\u8BC1\u5931\u8D25', 'error');\n                adminToken = '';\n            }\n        });\n\n        // \u9000\u51FA\u767B\u5F55\n        document.getElementById('logout-btn').addEventListener('click', () => {\n            adminToken = '';\n            document.getElementById('login-section').style.display = 'block';\n            document.getElementById('admin-section').style.display = 'none';\n            document.getElementById('logout-btn').style.display = 'none';\n            document.getElementById('admin-token').value = '';\n        });\n\n        function showTab(tabName) {\n            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));\n            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));\n            \n            event.target.classList.add('active');\n            document.getElementById(tabName + '-content').classList.add('active');\n            \n            if (tabName === 'comments') {\n                loadComments();\n            } else if (tabName === 'whitelist') {\n                loadWhitelist();\n            } else if (tabName === 'notifications') {\n                loadNotificationSettings();\n            }\n        }\n\n        function showLoginMessage(message, type) {\n            const messageEl = document.getElementById('login-message');\n            messageEl.innerHTML = \\`<div class=\"alert alert-\\${type}\">\\${message}</div>\\`;\n        }\n\n        function showAdminMessage(message, type) {\n            const messageEl = document.getElementById('admin-message');\n            messageEl.innerHTML = \\`<div class=\"alert alert-\\${type}\">\\${message}</div>\\`;\n            setTimeout(() => messageEl.innerHTML = '', 3000);\n        }\n\n        async function loadStats() {\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/stats\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n                \n                if (!response.ok) throw new Error('Unauthorized');\n                \n                const data = await response.json();\n                document.getElementById('total-comments').textContent = data.data.total || 0;\n                document.getElementById('today-comments').textContent = data.data.today || 0;\n                document.getElementById('total-pages').textContent = data.data.pages || 0;\n                document.getElementById('whitelist-count').textContent = data.data.whitelist || 0;\n            } catch (error) {\n                throw error;\n            }\n        }\n\n        async function loadPages() {\n            const loadingEl = document.getElementById('pages-loading');\n            const listEl = document.getElementById('pages-list');\n            \n            loadingEl.style.display = 'block';\n            listEl.innerHTML = '';\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/pages\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Unauthorized');\n\n                const data = await response.json();\n                const pages = data.data.pages;\n                \n                listEl.innerHTML = pages.map(page => \\`\n                    <div class=\"page-item\">\n                        <div class=\"page-title\">\\${page.title || '\u65E0\u6807\u9898'}</div>\n                        <div class=\"page-url\">\\${page.page_url}</div>\n                        <div class=\"page-stats\">\n                            <span class=\"page-stat\">\u8BC4\u8BBA\u6570: \\${page.comment_count}</span>\n                            <span class=\"page-stat\">\u6700\u65B0: \\${formatDate(page.latest_comment)}</span>\n                        </div>\n                        <div class=\"page-actions\">\n                            <button class=\"btn\" onclick=\"viewPageComments('\\${page.page_url}')\">\u67E5\u770B\u8BC4\u8BBA</button>\n                            <button class=\"btn btn-danger\" onclick=\"deletePageComments('\\${page.page_url}')\">\u5220\u9664\u6240\u6709\u8BC4\u8BBA</button>\n                        </div>\n                    </div>\n                \\`).join('');\n\n                loadingEl.style.display = 'none';\n            } catch (error) {\n                loadingEl.style.display = 'none';\n                showAdminMessage('\u52A0\u8F7D\u9875\u9762\u5931\u8D25', 'error');\n            }\n        }\n\n        async function loadComments() {\n            const loadingEl = document.getElementById('comments-loading');\n            const tableEl = document.getElementById('comments-table');\n            \n            loadingEl.style.display = 'block';\n            tableEl.style.display = 'none';\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/all\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Unauthorized');\n\n                const data = await response.json();\n                allComments = data.data.comments;\n                \n                // \u586B\u5145\u9875\u9762\u8FC7\u6EE4\u5668\n                const pageFilter = document.getElementById('page-filter');\n                const pages = [...new Set(allComments.map(c => c.page_url))];\n                pageFilter.innerHTML = '<option value=\"\">\u6240\u6709\u9875\u9762</option>' + \n                    pages.map(url => \\`<option value=\"\\${url}\">\\${truncate(url, 50)}</option>\\`).join('');\n                \n                renderComments(allComments);\n                loadingEl.style.display = 'none';\n                tableEl.style.display = 'table';\n            } catch (error) {\n                loadingEl.style.display = 'none';\n                showAdminMessage('\u52A0\u8F7D\u8BC4\u8BBA\u5931\u8D25', 'error');\n            }\n        }\n\n        function renderComments(comments) {\n            const tbody = document.getElementById('comments-tbody');\n            tbody.innerHTML = comments.map(comment => \\`\n                <tr>\n                    <td><input type=\"checkbox\" class=\"comment-checkbox\" value=\"\\${comment.id}\"></td>\n                    <td>\\${comment.id}</td>\n                    <td title=\"\\${comment.page_url}\">\\${truncate(comment.page_url, 30)}</td>\n                    <td>\\${comment.author_name}</td>\n                    <td class=\"comment-content\" title=\"\\${comment.content}\">\\${truncate(comment.content, 50)}</td>\n                    <td>\\${formatDate(comment.created_at)}</td>\n                    <td>\n                        <button class=\"btn btn-danger\" onclick=\"deleteComment(\\${comment.id})\">\u5220\u9664</button>\n                    </td>\n                </tr>\n            \\`).join('');\n        }\n\n        function viewPageComments(pageUrl) {\n            currentPageUrl = pageUrl;\n            document.getElementById('page-filter').value = pageUrl;\n            showTab('comments');\n            filterComments();\n        }\n\n        function filterComments() {\n            const pageUrl = document.getElementById('page-filter').value;\n            const filteredComments = pageUrl ? allComments.filter(c => c.page_url === pageUrl) : allComments;\n            renderComments(filteredComments);\n        }\n\n        function toggleSelectAll() {\n            const selectAll = document.getElementById('select-all');\n            const checkboxes = document.querySelectorAll('.comment-checkbox');\n            checkboxes.forEach(checkbox => checkbox.checked = selectAll.checked);\n        }\n\n        async function batchDelete() {\n            const selectedIds = Array.from(document.querySelectorAll('.comment-checkbox:checked')).map(cb => cb.value);\n            \n            if (selectedIds.length === 0) {\n                showAdminMessage('\u8BF7\u9009\u62E9\u8981\u5220\u9664\u7684\u8BC4\u8BBA', 'error');\n                return;\n            }\n\n            if (!confirm(\\`\u786E\u5B9A\u8981\u5220\u9664 \\${selectedIds.length} \u6761\u8BC4\u8BBA\u5417\uFF1F\\`)) {\n                return;\n            }\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/batch\\`, {\n                    method: 'DELETE',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ ids: selectedIds })\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showAdminMessage('\u6279\u91CF\u5220\u9664\u6210\u529F', 'success');\n                    await loadComments();\n                    await loadStats();\n                } else {\n                    showAdminMessage(data.message || '\u6279\u91CF\u5220\u9664\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showAdminMessage('\u6279\u91CF\u5220\u9664\u5931\u8D25', 'error');\n            }\n        }\n\n        async function deleteComment(commentId) {\n            if (!confirm('\u786E\u5B9A\u8981\u5220\u9664\u8FD9\u6761\u8BC4\u8BBA\u5417\uFF1F')) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/\\${commentId}\\`, {\n                    method: 'DELETE',\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showAdminMessage('\u8BC4\u8BBA\u5220\u9664\u6210\u529F', 'success');\n                    await loadComments();\n                    await loadStats();\n                } else {\n                    showAdminMessage(data.message || '\u5220\u9664\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showAdminMessage('\u5220\u9664\u5931\u8D25', 'error');\n            }\n        }\n\n        async function deletePageComments(pageUrl) {\n            if (!confirm(\\`\u786E\u5B9A\u8981\u5220\u9664\u9875\u9762 \"\\${pageUrl}\" \u7684\u6240\u6709\u8BC4\u8BBA\u5417\uFF1F\\`)) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/comments/page\\`, {\n                    method: 'DELETE',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ pageUrl })\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showAdminMessage('\u9875\u9762\u8BC4\u8BBA\u5220\u9664\u6210\u529F', 'success');\n                    await loadPages();\n                    await loadStats();\n                } else {\n                    showAdminMessage(data.message || '\u5220\u9664\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showAdminMessage('\u5220\u9664\u5931\u8D25', 'error');\n            }\n        }\n\n        async function loadWhitelist() {\n            const loadingEl = document.getElementById('whitelist-loading');\n            const listEl = document.getElementById('whitelist-list');\n            \n            loadingEl.style.display = 'block';\n            listEl.innerHTML = '';\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/whitelist\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Unauthorized');\n\n                const data = await response.json();\n                const whitelist = data.data.whitelist;\n                \n                listEl.innerHTML = whitelist.map(item => \\`\n                    <div class=\"whitelist-item\">\n                        <div>\n                            <strong>\\${item.domain}</strong>\n                            \\${item.description ? \\`<br><small>\\${item.description}</small>\\` : ''}\n                        </div>\n                        <button class=\"btn btn-danger\" onclick=\"removeFromWhitelist(\\${item.id})\">\u5220\u9664</button>\n                    </div>\n                \\`).join('');\n\n                loadingEl.style.display = 'none';\n            } catch (error) {\n                loadingEl.style.display = 'none';\n                showAdminMessage('\u52A0\u8F7D\u767D\u540D\u5355\u5931\u8D25', 'error');\n            }\n        }\n\n        function showAddWhitelistModal() {\n            document.getElementById('whitelist-modal').style.display = 'block';\n        }\n\n        function closeModal() {\n            document.getElementById('whitelist-modal').style.display = 'none';\n        }\n\n        document.getElementById('whitelist-form').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            const domain = document.getElementById('domain').value.trim();\n            const description = document.getElementById('description').value.trim();\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/whitelist\\`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ domain, description })\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showAdminMessage('\u6DFB\u52A0\u6210\u529F', 'success');\n                    closeModal();\n                    await loadWhitelist();\n                    await loadStats();\n                } else {\n                    showAdminMessage(data.message || '\u6DFB\u52A0\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showAdminMessage('\u6DFB\u52A0\u5931\u8D25', 'error');\n            }\n        });\n\n        async function removeFromWhitelist(id) {\n            if (!confirm('\u786E\u5B9A\u8981\u4ECE\u767D\u540D\u5355\u4E2D\u5220\u9664\u5417\uFF1F')) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/whitelist/\\${id}\\`, {\n                    method: 'DELETE',\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showAdminMessage('\u5220\u9664\u6210\u529F', 'success');\n                    await loadWhitelist();\n                    await loadStats();\n                } else {\n                    showAdminMessage(data.message || '\u5220\u9664\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showAdminMessage('\u5220\u9664\u5931\u8D25', 'error');\n            }\n        }\n\n        function truncate(str, length) {\n            return str.length > length ? str.substring(0, length) + '...' : str;\n        }\n\n        function formatDate(dateString) {\n            if (!dateString) return '-';\n            const date = new Date(dateString.replace(' ', 'T'));\n            return date.toLocaleString('zh-CN');\n        }\n\n        // \u901A\u77E5\u8BBE\u7F6E\u76F8\u5173\u51FD\u6570\n        async function loadNotificationSettings() {\n            await loadNotifiersStatus();\n            await loadNotificationConfig();\n            await loadEmailSubscribers();\n        }\n\n        async function loadNotifiersStatus() {\n            const statusEl = document.getElementById('notifiers-status');\n            \n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/notifiers\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Failed to load notifiers');\n\n                const data = await response.json();\n                const notifiers = data.data.notifiers;\n                \n                statusEl.innerHTML = Object.entries(notifiers).map(([type, info]) => \\`\n                    <div class=\"notifier-status\" style=\"display: flex; justify-content: space-between; align-items: center; padding: 10px; margin-bottom: 10px; background: \\${info.configured ? '#d4edda' : '#f8d7da'}; border-radius: 4px;\">\n                        <div>\n                            <strong>\\${info.name}</strong>\n                            <br><small>\\${info.description}</small>\n                        </div>\n                        <div style=\"text-align: right;\">\n                            <span style=\"padding: 4px 8px; border-radius: 12px; font-size: 12px; font-weight: bold; color: white; background: \\${info.configured ? '#28a745' : '#dc3545'};\">\n                                \\${info.configured ? '\u2705 \u5DF2\u914D\u7F6E' : '\u274C \u672A\u914D\u7F6E'}\n                            </span>\n                            \\${!info.configured ? \\`<br><small style=\"color: #666;\">\u9700\u8981: \\${info.requiredEnvVars.join(', ')}</small>\\` : ''}\n                        </div>\n                    </div>\n                \\`).join('');\n            } catch (error) {\n                statusEl.innerHTML = '<p style=\"color: #dc3545;\">\u52A0\u8F7D\u63A8\u9001\u5668\u72B6\u6001\u5931\u8D25</p>';\n            }\n        }\n\n        async function loadNotificationConfig() {\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/config\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Failed to load config');\n\n                const data = await response.json();\n                const config = data.data || {};\n                \n                // \u586B\u5145\u90AE\u7BB1\u914D\u7F6E\n                const emailConfig = config.email || {};\n                document.getElementById('email-enabled').checked = emailConfig.enabled || false;\n                document.getElementById('admin-emails').value = (emailConfig.recipients || []).join(', ');\n                document.getElementById('include-page-info').checked = emailConfig.includePageInfo !== false;\n                document.getElementById('include-comment-content').checked = emailConfig.includeCommentContent !== false;\n                \n                toggleEmailConfig();\n\n                // \u52A0\u8F7DTelegram\u914D\u7F6E\n                const telegramConfig = config.telegram || {};\n                document.getElementById('telegram-enabled').checked = telegramConfig.enabled || false;\n                document.getElementById('telegram-chat-ids').value = (telegramConfig.chatIds || []).join(', ');\n                document.getElementById('telegram-include-page-info').checked = telegramConfig.includePageInfo !== false;\n                document.getElementById('telegram-include-comment-content').checked = telegramConfig.includeCommentContent !== false;\n                \n                toggleTelegramConfig();\n            } catch (error) {\n                console.error('\u52A0\u8F7D\u901A\u77E5\u914D\u7F6E\u5931\u8D25:', error);\n            }\n        }\n\n        function toggleEmailConfig() {\n            const enabled = document.getElementById('email-enabled').checked;\n            document.getElementById('email-config').style.display = enabled ? 'block' : 'none';\n        }\n\n        function toggleTelegramConfig() {\n            const enabled = document.getElementById('telegram-enabled').checked;\n            document.getElementById('telegram-config').style.display = enabled ? 'block' : 'none';\n        }\n\n        // \u7ED1\u5B9A\u90AE\u7BB1\u542F\u7528\u590D\u9009\u6846\u4E8B\u4EF6\n        document.getElementById('email-enabled').addEventListener('change', toggleEmailConfig);\n\n        // \u7ED1\u5B9ATelegram\u542F\u7528\u590D\u9009\u6846\u4E8B\u4EF6\n        document.getElementById('telegram-enabled').addEventListener('change', toggleTelegramConfig);\n\n        // \u7ED1\u5B9A\u90AE\u7BB1\u914D\u7F6E\u8868\u5355\u63D0\u4EA4\u4E8B\u4EF6\n        document.getElementById('email-notification-form').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            await saveNotificationConfig();\n        });\n\n        // \u7ED1\u5B9ATelegram\u914D\u7F6E\u8868\u5355\u63D0\u4EA4\u4E8B\u4EF6\n        document.getElementById('telegram-notification-form').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            await saveNotificationConfig();\n        });\n\n        async function saveNotificationConfig() {\n            try {\n                const emailEnabled = document.getElementById('email-enabled').checked;\n                const adminEmails = document.getElementById('admin-emails').value\n                    .split(',')\n                    .map(email => email.trim())\n                    .filter(email => email);\n\n                const telegramEnabled = document.getElementById('telegram-enabled').checked;\n                const telegramChatIds = document.getElementById('telegram-chat-ids').value\n                    .split(',')\n                    .map(chatId => chatId.trim())\n                    .filter(chatId => chatId);\n                    \n                const config = {\n                    email: {\n                        enabled: emailEnabled,\n                        recipients: adminEmails,\n                        subscribers: [], // \u4FDD\u6301\u73B0\u6709\u8BA2\u9605\u8005\n                        includePageInfo: document.getElementById('include-page-info').checked,\n                        includeCommentContent: document.getElementById('include-comment-content').checked,\n                        template: 'default'\n                    },\n                    telegram: {\n                        enabled: telegramEnabled,\n                        chatIds: telegramChatIds,\n                        includePageInfo: document.getElementById('telegram-include-page-info').checked,\n                        includeCommentContent: document.getElementById('telegram-include-comment-content').checked,\n                        template: 'default'\n                    }\n                };\n\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/config\\`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(config)\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showNotificationMessage('\u901A\u77E5\u914D\u7F6E\u4FDD\u5B58\u6210\u529F', 'success');\n                } else {\n                    showNotificationMessage(data.message || '\u4FDD\u5B58\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showNotificationMessage('\u4FDD\u5B58\u914D\u7F6E\u5931\u8D25', 'error');\n            }\n        }\n\n        async function testEmailNotification() {\n            const testEmail = prompt('\u8BF7\u8F93\u5165\u6D4B\u8BD5\u90AE\u7BB1\u5730\u5740:');\n            if (!testEmail) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/test\\`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        type: 'email',\n                        config: { testEmail }\n                    })\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showNotificationMessage(\\`\u6D4B\u8BD5\u90AE\u4EF6\u5DF2\u53D1\u9001\u5230 \\${testEmail}\\`, 'success');\n                } else {\n                    showNotificationMessage(data.message || '\u6D4B\u8BD5\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showNotificationMessage('\u6D4B\u8BD5\u90AE\u4EF6\u53D1\u9001\u5931\u8D25', 'error');\n            }\n        }\n\n        async function testTelegramNotification() {\n            const testChatId = prompt('\u8BF7\u8F93\u5165\u6D4B\u8BD5Chat ID:');\n            if (!testChatId) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/test\\`, {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': \\`Bearer \\${adminToken}\\`,\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        type: 'telegram',\n                        config: { testChatId }\n                    })\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showNotificationMessage(\\`\u6D4B\u8BD5\u6D88\u606F\u5DF2\u53D1\u9001\u5230 Chat ID: \\${testChatId}\\`, 'success');\n                } else {\n                    showNotificationMessage(data.message || '\u6D4B\u8BD5\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showNotificationMessage('\u6D4B\u8BD5Telegram\u63A8\u9001\u5931\u8D25', 'error');\n            }\n        }\n\n        async function loadEmailSubscribers() {\n            const loadingEl = document.getElementById('subscribers-loading');\n            const listEl = document.getElementById('subscribers-list');\n            \n            loadingEl.style.display = 'block';\n            listEl.innerHTML = '';\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/subscribers\\`, {\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                if (!response.ok) throw new Error('Failed to load subscribers');\n\n                const data = await response.json();\n                const subscribers = data.data.subscribers || [];\n                \n                if (subscribers.length === 0) {\n                    listEl.innerHTML = '<p style=\"color: #666; text-align: center; padding: 20px;\">\u6682\u65E0\u90AE\u4EF6\u8BA2\u9605\u8005</p>';\n                } else {\n                    listEl.innerHTML = subscribers.map(subscriber => \\`\n                        <div class=\"whitelist-item\">\n                            <div>\n                                <strong>\\${subscriber.email}</strong>\n                                \\${subscriber.name && subscriber.name !== subscriber.email.split('@')[0] ? \\`<br><small>\\${subscriber.name}</small>\\` : ''}\n                                \\${subscriber.page_url ? \\`<br><small>\u9875\u9762: \\${subscriber.page_url}</small>\\` : ''}\n                                <br><small>\u8BA2\u9605\u65F6\u95F4: \\${formatDate(subscriber.subscribed_at)}</small>\n                            </div>\n                            <button class=\"btn btn-danger\" onclick=\"removeEmailSubscriber('\\${subscriber.email}')\">\u5220\u9664</button>\n                        </div>\n                    \\`).join('');\n                }\n\n                loadingEl.style.display = 'none';\n            } catch (error) {\n                loadingEl.style.display = 'none';\n                listEl.innerHTML = '<p style=\"color: #dc3545;\">\u52A0\u8F7D\u8BA2\u9605\u8005\u5931\u8D25</p>';\n            }\n        }\n\n        async function removeEmailSubscriber(email) {\n            if (!confirm(\\`\u786E\u5B9A\u8981\u5220\u9664\u8BA2\u9605\u8005 \\${email} \u5417\uFF1F\\`)) return;\n\n            try {\n                const response = await fetch(\\`\\${apiUrl}/api/notifications/subscribe/\\${encodeURIComponent(email)}\\`, {\n                    method: 'DELETE',\n                    headers: { 'Authorization': \\`Bearer \\${adminToken}\\` }\n                });\n\n                const data = await response.json();\n                if (data.success) {\n                    showNotificationMessage('\u8BA2\u9605\u8005\u5220\u9664\u6210\u529F', 'success');\n                    await loadEmailSubscribers();\n                } else {\n                    showNotificationMessage(data.message || '\u5220\u9664\u5931\u8D25', 'error');\n                }\n            } catch (error) {\n                showNotificationMessage('\u5220\u9664\u8BA2\u9605\u8005\u5931\u8D25', 'error');\n            }\n        }\n\n        function showNotificationMessage(message, type) {\n            const messageEl = document.getElementById('notification-status');\n            messageEl.className = \\`alert alert-\\${type}\\`;\n            messageEl.textContent = message;\n            messageEl.style.display = 'block';\n            \n            setTimeout(() => {\n                messageEl.style.display = 'none';\n            }, 3000);\n        }\n    </script>\n</body>\n</html>`;\n\n  return htmlResponse(html);\n}"],
  "mappings": "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",
  "names": ["cache", "embedScript"]
}
